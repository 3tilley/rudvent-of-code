<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1030" onload="init(evt)" viewBox="0 0 1200 1030" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1030" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1013.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1013.00"> </text><svg id="frames" x="10" width="1180" total_samples="76"><g><title>`0x7FFB80982690 (2 samples, 2.63%)</title><rect x="0.0000%" y="965" width="2.6316%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2"/><text x="0.2500%" y="975.50">`0..</text></g><g><title>`0x7FFB80982E27 (2 samples, 2.63%)</title><rect x="2.6316%" y="933" width="2.6316%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="2"/><text x="2.8816%" y="943.50">`0..</text></g><g><title>`0x7FFB809D0A74 (2 samples, 2.63%)</title><rect x="2.6316%" y="917" width="2.6316%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="2"/><text x="2.8816%" y="927.50">`0..</text></g><g><title>`0x7FFB80992168 (1 samples, 1.32%)</title><rect x="5.2632%" y="917" width="1.3158%" height="15" fill="rgb(248,212,6)" fg:x="4" fg:w="1"/><text x="5.5132%" y="927.50"></text></g><g><title>`0x7FFB80950034 (1 samples, 1.32%)</title><rect x="5.2632%" y="901" width="1.3158%" height="15" fill="rgb(208,68,35)" fg:x="4" fg:w="1"/><text x="5.5132%" y="911.50"></text></g><g><title>`0x7FFB80942BD9 (1 samples, 1.32%)</title><rect x="5.2632%" y="885" width="1.3158%" height="15" fill="rgb(232,128,0)" fg:x="4" fg:w="1"/><text x="5.5132%" y="895.50"></text></g><g><title>`0x7FFB809CFDF4 (1 samples, 1.32%)</title><rect x="5.2632%" y="869" width="1.3158%" height="15" fill="rgb(207,160,47)" fg:x="4" fg:w="1"/><text x="5.5132%" y="879.50"></text></g><g><title>`0x7FFB809625E7 (1 samples, 1.32%)</title><rect x="6.5789%" y="869" width="1.3158%" height="15" fill="rgb(228,23,34)" fg:x="5" fg:w="1"/><text x="6.8289%" y="879.50"></text></g><g><title>`0x7FFB809626B7 (2 samples, 2.63%)</title><rect x="7.8947%" y="869" width="2.6316%" height="15" fill="rgb(218,30,26)" fg:x="6" fg:w="2"/><text x="8.1447%" y="879.50">`0..</text></g><g><title>`0x7FFB809626CF (1 samples, 1.32%)</title><rect x="10.5263%" y="869" width="1.3158%" height="15" fill="rgb(220,122,19)" fg:x="8" fg:w="1"/><text x="10.7763%" y="879.50"></text></g><g><title>`0x7FFB809626F0 (1 samples, 1.32%)</title><rect x="11.8421%" y="869" width="1.3158%" height="15" fill="rgb(250,228,42)" fg:x="9" fg:w="1"/><text x="12.0921%" y="879.50"></text></g><g><title>`0x7FFB809627DA (1 samples, 1.32%)</title><rect x="13.1579%" y="869" width="1.3158%" height="15" fill="rgb(240,193,28)" fg:x="10" fg:w="1"/><text x="13.4079%" y="879.50"></text></g><g><title>`0x7FFB809633D7 (1 samples, 1.32%)</title><rect x="13.1579%" y="853" width="1.3158%" height="15" fill="rgb(216,20,37)" fg:x="10" fg:w="1"/><text x="13.4079%" y="863.50"></text></g><g><title>`0x7FFB80947EC7 (1 samples, 1.32%)</title><rect x="13.1579%" y="837" width="1.3158%" height="15" fill="rgb(206,188,39)" fg:x="10" fg:w="1"/><text x="13.4079%" y="847.50"></text></g><g><title>`0x7FFB8094A7DD (1 samples, 1.32%)</title><rect x="13.1579%" y="821" width="1.3158%" height="15" fill="rgb(217,207,13)" fg:x="10" fg:w="1"/><text x="13.4079%" y="831.50"></text></g><g><title>`0x7FFB8094D749 (1 samples, 1.32%)</title><rect x="13.1579%" y="805" width="1.3158%" height="15" fill="rgb(231,73,38)" fg:x="10" fg:w="1"/><text x="13.4079%" y="815.50"></text></g><g><title>`0x7FFB8098EC38 (7 samples, 9.21%)</title><rect x="6.5789%" y="885" width="9.2105%" height="15" fill="rgb(225,20,46)" fg:x="5" fg:w="7"/><text x="6.8289%" y="895.50">`0x7FFB8098EC..</text></g><g><title>`0x7FFB8096288A (1 samples, 1.32%)</title><rect x="14.4737%" y="869" width="1.3158%" height="15" fill="rgb(210,31,41)" fg:x="11" fg:w="1"/><text x="14.7237%" y="879.50"></text></g><g><title>`0x7FFB80977BDD (1 samples, 1.32%)</title><rect x="14.4737%" y="853" width="1.3158%" height="15" fill="rgb(221,200,47)" fg:x="11" fg:w="1"/><text x="14.7237%" y="863.50"></text></g><g><title>`0x7FFB80977DC7 (1 samples, 1.32%)</title><rect x="14.4737%" y="837" width="1.3158%" height="15" fill="rgb(226,26,5)" fg:x="11" fg:w="1"/><text x="14.7237%" y="847.50"></text></g><g><title>`0x7FFB80978474 (1 samples, 1.32%)</title><rect x="14.4737%" y="821" width="1.3158%" height="15" fill="rgb(249,33,26)" fg:x="11" fg:w="1"/><text x="14.7237%" y="831.50"></text></g><g><title>`0x7FFB8098F6E6 (1 samples, 1.32%)</title><rect x="15.7895%" y="869" width="1.3158%" height="15" fill="rgb(235,183,28)" fg:x="12" fg:w="1"/><text x="16.0395%" y="879.50"></text></g><g><title>`0x7FFB8098F026 (1 samples, 1.32%)</title><rect x="15.7895%" y="853" width="1.3158%" height="15" fill="rgb(221,5,38)" fg:x="12" fg:w="1"/><text x="16.0395%" y="863.50"></text></g><g><title>`0x7FFB8098F207 (1 samples, 1.32%)</title><rect x="15.7895%" y="837" width="1.3158%" height="15" fill="rgb(247,18,42)" fg:x="12" fg:w="1"/><text x="16.0395%" y="847.50"></text></g><g><title>`0x7FFB8098F37B (1 samples, 1.32%)</title><rect x="15.7895%" y="821" width="1.3158%" height="15" fill="rgb(241,131,45)" fg:x="12" fg:w="1"/><text x="16.0395%" y="831.50"></text></g><g><title>`0x7FFB809CD784 (1 samples, 1.32%)</title><rect x="15.7895%" y="805" width="1.3158%" height="15" fill="rgb(249,31,29)" fg:x="12" fg:w="1"/><text x="16.0395%" y="815.50"></text></g><g><title>`0x7FFB8098FC9C (2 samples, 2.63%)</title><rect x="17.1053%" y="853" width="2.6316%" height="15" fill="rgb(225,111,53)" fg:x="13" fg:w="2"/><text x="17.3553%" y="863.50">`0..</text></g><g><title>`0x7FFB809CD644 (2 samples, 2.63%)</title><rect x="17.1053%" y="837" width="2.6316%" height="15" fill="rgb(238,160,17)" fg:x="13" fg:w="2"/><text x="17.3553%" y="847.50">`0..</text></g><g><title>`0x7FFB809831BA (12 samples, 15.79%)</title><rect x="5.2632%" y="933" width="15.7895%" height="15" fill="rgb(214,148,48)" fg:x="4" fg:w="12"/><text x="5.5132%" y="943.50">`0x7FFB809831BA</text></g><g><title>`0x7FFB80992230 (11 samples, 14.47%)</title><rect x="6.5789%" y="917" width="14.4737%" height="15" fill="rgb(232,36,49)" fg:x="5" fg:w="11"/><text x="6.8289%" y="927.50">`0x7FFB80992230</text></g><g><title>`0x7FFB8098EBE3 (11 samples, 14.47%)</title><rect x="6.5789%" y="901" width="14.4737%" height="15" fill="rgb(209,103,24)" fg:x="5" fg:w="11"/><text x="6.8289%" y="911.50">`0x7FFB8098EBE3</text></g><g><title>`0x7FFB8098EC70 (4 samples, 5.26%)</title><rect x="15.7895%" y="885" width="5.2632%" height="15" fill="rgb(229,88,8)" fg:x="12" fg:w="4"/><text x="16.0395%" y="895.50">`0x7FF..</text></g><g><title>`0x7FFB8098F7B0 (3 samples, 3.95%)</title><rect x="17.1053%" y="869" width="3.9474%" height="15" fill="rgb(213,181,19)" fg:x="13" fg:w="3"/><text x="17.3553%" y="879.50">`0x7..</text></g><g><title>`0x7FFB8098FCFE (1 samples, 1.32%)</title><rect x="19.7368%" y="853" width="1.3158%" height="15" fill="rgb(254,191,54)" fg:x="15" fg:w="1"/><text x="19.9868%" y="863.50"></text></g><g><title>`0x7FFB809CD924 (1 samples, 1.32%)</title><rect x="19.7368%" y="837" width="1.3158%" height="15" fill="rgb(241,83,37)" fg:x="15" fg:w="1"/><text x="19.9868%" y="847.50"></text></g><g><title>`0x7FFB7E61E4C3 (1 samples, 1.32%)</title><rect x="21.0526%" y="917" width="1.3158%" height="15" fill="rgb(233,36,39)" fg:x="16" fg:w="1"/><text x="21.3026%" y="927.50"></text></g><g><title>my-solutions.exe`pre_c_initialization() (1 samples, 1.32%)</title><rect x="21.0526%" y="901" width="1.3158%" height="15" fill="rgb(226,3,54)" fg:x="16" fg:w="1"/><text x="21.3026%" y="911.50"></text></g><g><title>`0x7FFB7E60455A (1 samples, 1.32%)</title><rect x="21.0526%" y="885" width="1.3158%" height="15" fill="rgb(245,192,40)" fg:x="16" fg:w="1"/><text x="21.3026%" y="895.50"></text></g><g><title>`0x7FFB7E60595F (1 samples, 1.32%)</title><rect x="21.0526%" y="869" width="1.3158%" height="15" fill="rgb(238,167,29)" fg:x="16" fg:w="1"/><text x="21.3026%" y="879.50"></text></g><g><title>`0x7FFB80944AAA (1 samples, 1.32%)</title><rect x="22.3684%" y="741" width="1.3158%" height="15" fill="rgb(232,182,51)" fg:x="17" fg:w="1"/><text x="22.6184%" y="751.50"></text></g><g><title>`0x7FFB80944D42 (1 samples, 1.32%)</title><rect x="22.3684%" y="725" width="1.3158%" height="15" fill="rgb(231,60,39)" fg:x="17" fg:w="1"/><text x="22.6184%" y="735.50"></text></g><g><title>`0x7FFB809CD4E4 (1 samples, 1.32%)</title><rect x="22.3684%" y="709" width="1.3158%" height="15" fill="rgb(208,69,12)" fg:x="17" fg:w="1"/><text x="22.6184%" y="719.50"></text></g><g><title>`0x7FFB7E6205A2 (2 samples, 2.63%)</title><rect x="22.3684%" y="901" width="2.6316%" height="15" fill="rgb(235,93,37)" fg:x="17" fg:w="2"/><text x="22.6184%" y="911.50">`0..</text></g><g><title>`0x7FFB7E6219C7 (2 samples, 2.63%)</title><rect x="22.3684%" y="885" width="2.6316%" height="15" fill="rgb(213,116,39)" fg:x="17" fg:w="2"/><text x="22.6184%" y="895.50">`0..</text></g><g><title>`0x7FFB7E61C050 (2 samples, 2.63%)</title><rect x="22.3684%" y="869" width="2.6316%" height="15" fill="rgb(222,207,29)" fg:x="17" fg:w="2"/><text x="22.6184%" y="879.50">`0..</text></g><g><title>`0x7FFB7E2856B2 (2 samples, 2.63%)</title><rect x="22.3684%" y="853" width="2.6316%" height="15" fill="rgb(206,96,30)" fg:x="17" fg:w="2"/><text x="22.6184%" y="863.50">`0..</text></g><g><title>`0x7FFB80946AF4 (2 samples, 2.63%)</title><rect x="22.3684%" y="837" width="2.6316%" height="15" fill="rgb(218,138,4)" fg:x="17" fg:w="2"/><text x="22.6184%" y="847.50">`0..</text></g><g><title>`0x7FFB809473E4 (2 samples, 2.63%)</title><rect x="22.3684%" y="821" width="2.6316%" height="15" fill="rgb(250,191,14)" fg:x="17" fg:w="2"/><text x="22.6184%" y="831.50">`0..</text></g><g><title>`0x7FFB8094FB53 (2 samples, 2.63%)</title><rect x="22.3684%" y="805" width="2.6316%" height="15" fill="rgb(239,60,40)" fg:x="17" fg:w="2"/><text x="22.6184%" y="815.50">`0..</text></g><g><title>`0x7FFB8098ED1F (2 samples, 2.63%)</title><rect x="22.3684%" y="789" width="2.6316%" height="15" fill="rgb(206,27,48)" fg:x="17" fg:w="2"/><text x="22.6184%" y="799.50">`0..</text></g><g><title>`0x7FFB8098FA80 (2 samples, 2.63%)</title><rect x="22.3684%" y="773" width="2.6316%" height="15" fill="rgb(225,35,8)" fg:x="17" fg:w="2"/><text x="22.6184%" y="783.50">`0..</text></g><g><title>`0x7FFB8098FD53 (2 samples, 2.63%)</title><rect x="22.3684%" y="757" width="2.6316%" height="15" fill="rgb(250,213,24)" fg:x="17" fg:w="2"/><text x="22.6184%" y="767.50">`0..</text></g><g><title>`0x7FFB80944C14 (1 samples, 1.32%)</title><rect x="23.6842%" y="741" width="1.3158%" height="15" fill="rgb(247,123,22)" fg:x="18" fg:w="1"/><text x="23.9342%" y="751.50"></text></g><g><title>`0x7FFB80947BC4 (1 samples, 1.32%)</title><rect x="23.6842%" y="725" width="1.3158%" height="15" fill="rgb(231,138,38)" fg:x="18" fg:w="1"/><text x="23.9342%" y="735.50"></text></g><g><title>`0x7FFB809626D3 (1 samples, 1.32%)</title><rect x="23.6842%" y="709" width="1.3158%" height="15" fill="rgb(231,145,46)" fg:x="18" fg:w="1"/><text x="23.9342%" y="719.50"></text></g><g><title>`0x7FFB7E62045F (3 samples, 3.95%)</title><rect x="22.3684%" y="917" width="3.9474%" height="15" fill="rgb(251,118,11)" fg:x="17" fg:w="3"/><text x="22.6184%" y="927.50">`0x7..</text></g><g><title>`0x7FFB7E6205BC (1 samples, 1.32%)</title><rect x="25.0000%" y="901" width="1.3158%" height="15" fill="rgb(217,147,25)" fg:x="19" fg:w="1"/><text x="25.2500%" y="911.50"></text></g><g><title>`0x7FFB8023E3BB (1 samples, 1.32%)</title><rect x="25.0000%" y="885" width="1.3158%" height="15" fill="rgb(247,81,37)" fg:x="19" fg:w="1"/><text x="25.2500%" y="895.50"></text></g><g><title>`0x7FFB8098DA8D (1 samples, 1.32%)</title><rect x="25.0000%" y="869" width="1.3158%" height="15" fill="rgb(209,12,38)" fg:x="19" fg:w="1"/><text x="25.2500%" y="879.50"></text></g><g><title>`0x7FFB8098DCDA (1 samples, 1.32%)</title><rect x="25.0000%" y="853" width="1.3158%" height="15" fill="rgb(227,1,9)" fg:x="19" fg:w="1"/><text x="25.2500%" y="863.50"></text></g><g><title>`0x7FFB80949A1D (1 samples, 1.32%)</title><rect x="25.0000%" y="837" width="1.3158%" height="15" fill="rgb(248,47,43)" fg:x="19" fg:w="1"/><text x="25.2500%" y="847.50"></text></g><g><title>`0x7FFB7FDFCF34 (1 samples, 1.32%)</title><rect x="25.0000%" y="821" width="1.3158%" height="15" fill="rgb(221,10,30)" fg:x="19" fg:w="1"/><text x="25.2500%" y="831.50"></text></g><g><title>`0x7FFB7FDFD8D5 (1 samples, 1.32%)</title><rect x="25.0000%" y="805" width="1.3158%" height="15" fill="rgb(210,229,1)" fg:x="19" fg:w="1"/><text x="25.2500%" y="815.50"></text></g><g><title>`0x7FFB7FDF5B89 (1 samples, 1.32%)</title><rect x="25.0000%" y="789" width="1.3158%" height="15" fill="rgb(222,148,37)" fg:x="19" fg:w="1"/><text x="25.2500%" y="799.50"></text></g><g><title>`0x7FFB7FDF7E82 (1 samples, 1.32%)</title><rect x="25.0000%" y="773" width="1.3158%" height="15" fill="rgb(234,67,33)" fg:x="19" fg:w="1"/><text x="25.2500%" y="783.50"></text></g><g><title>`0x7FFB7FDEC882 (1 samples, 1.32%)</title><rect x="25.0000%" y="757" width="1.3158%" height="15" fill="rgb(247,98,35)" fg:x="19" fg:w="1"/><text x="25.2500%" y="767.50"></text></g><g><title>`0x7FFB809547B1 (1 samples, 1.32%)</title><rect x="25.0000%" y="741" width="1.3158%" height="15" fill="rgb(247,138,52)" fg:x="19" fg:w="1"/><text x="25.2500%" y="751.50"></text></g><g><title>`0x7FFB80955BBB (1 samples, 1.32%)</title><rect x="25.0000%" y="725" width="1.3158%" height="15" fill="rgb(213,79,30)" fg:x="19" fg:w="1"/><text x="25.2500%" y="735.50"></text></g><g><title>my-solutions.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result (1 samples, 1.32%)</title><rect x="26.3158%" y="661" width="1.3158%" height="15" fill="rgb(246,177,23)" fg:x="20" fg:w="1"/><text x="26.5658%" y="671.50"></text></g><g><title>my-solutions.exe`rudvent_lib::advent_interactions::DayData::html (1 samples, 1.32%)</title><rect x="26.3158%" y="645" width="1.3158%" height="15" fill="rgb(230,62,27)" fg:x="20" fg:w="1"/><text x="26.5658%" y="655.50"></text></g><g><title>my-solutions.exe`std::path::impl$44::deref (1 samples, 1.32%)</title><rect x="26.3158%" y="629" width="1.3158%" height="15" fill="rgb(216,154,8)" fg:x="20" fg:w="1"/><text x="26.5658%" y="639.50"></text></g><g><title>my-solutions.exe`std::fs::metadata(ref$ (1 samples, 1.32%)</title><rect x="26.3158%" y="613" width="1.3158%" height="15" fill="rgb(244,35,45)" fg:x="20" fg:w="1"/><text x="26.5658%" y="623.50"></text></g><g><title>my-solutions.exe`enum2$&lt;core::result::Result&lt;std::sys::windows::fs::FileAttr,std::io::error::Error&gt; &gt;::map(enum2$&lt;core::result::Result&lt;std::sys::windows::fs::FileAttr,std::io::error::Error&gt; &gt;, std::fs::Metadata (*) (1 samples, 1.32%)</title><rect x="26.3158%" y="597" width="1.3158%" height="15" fill="rgb(251,115,12)" fg:x="20" fg:w="1"/><text x="26.5658%" y="607.50"></text></g><g><title>my-solutions.exe`std::sys::windows::fs::stat (1 samples, 1.32%)</title><rect x="26.3158%" y="581" width="1.3158%" height="15" fill="rgb(240,54,50)" fg:x="20" fg:w="1"/><text x="26.5658%" y="591.50"></text></g><g><title>my-solutions.exe`std::sys::windows::fs::metadata (1 samples, 1.32%)</title><rect x="26.3158%" y="565" width="1.3158%" height="15" fill="rgb(233,84,52)" fg:x="20" fg:w="1"/><text x="26.5658%" y="575.50"></text></g><g><title>my-solutions.exe`std::sys::windows::fs::File::open (1 samples, 1.32%)</title><rect x="26.3158%" y="549" width="1.3158%" height="15" fill="rgb(207,117,47)" fg:x="20" fg:w="1"/><text x="26.5658%" y="559.50"></text></g><g><title>my-solutions.exe`core::convert::impl$6::try_into (1 samples, 1.32%)</title><rect x="26.3158%" y="533" width="1.3158%" height="15" fill="rgb(249,43,39)" fg:x="20" fg:w="1"/><text x="26.5658%" y="543.50"></text></g><g><title>my-solutions.exe`std::os::windows::io::handle::impl$12::try_from (1 samples, 1.32%)</title><rect x="26.3158%" y="517" width="1.3158%" height="15" fill="rgb(209,38,44)" fg:x="20" fg:w="1"/><text x="26.5658%" y="527.50"></text></g><g><title>`0x7FFB7E285FE6 (1 samples, 1.32%)</title><rect x="26.3158%" y="501" width="1.3158%" height="15" fill="rgb(236,212,23)" fg:x="20" fg:w="1"/><text x="26.5658%" y="511.50"></text></g><g><title>`0x7FFB7E286579 (1 samples, 1.32%)</title><rect x="26.3158%" y="485" width="1.3158%" height="15" fill="rgb(242,79,21)" fg:x="20" fg:w="1"/><text x="26.5658%" y="495.50"></text></g><g><title>`0x7FFB809CDA84 (1 samples, 1.32%)</title><rect x="26.3158%" y="469" width="1.3158%" height="15" fill="rgb(211,96,35)" fg:x="20" fg:w="1"/><text x="26.5658%" y="479.50"></text></g><g><title>my-solutions.exe`core::ptr::drop_in_place(enum2$ (1 samples, 1.32%)</title><rect x="27.6316%" y="309" width="1.3158%" height="15" fill="rgb(253,215,40)" fg:x="21" fg:w="1"/><text x="27.8816%" y="319.50"></text></g><g><title>my-solutions.exe`core::ptr::drop_in_place(tendril::tendril::Tendril (1 samples, 1.32%)</title><rect x="27.6316%" y="293" width="1.3158%" height="15" fill="rgb(211,81,21)" fg:x="21" fg:w="1"/><text x="27.8816%" y="303.50"></text></g><g><title>my-solutions.exe`tendril::tendril::impl$5::drop(tendril::tendril::Tendril (1 samples, 1.32%)</title><rect x="27.6316%" y="277" width="1.3158%" height="15" fill="rgb(208,190,38)" fg:x="21" fg:w="1"/><text x="27.8816%" y="287.50"></text></g><g><title>my-solutions.exe`tendril::tendril::Tendril&lt;tendril::fmt::UTF8,tendril::tendril::NonAtomic&gt;::push_bytes_without_validating&lt;tendril::fmt::UTF8,tendril::tendril::NonAtomic&gt;(ref$&lt;slice2$ (1 samples, 1.32%)</title><rect x="27.6316%" y="261" width="1.3158%" height="15" fill="rgb(235,213,38)" fg:x="21" fg:w="1"/><text x="27.8816%" y="271.50"></text></g><g><title>my-solutions.exe`tendril::tendril::Tendril&lt;tendril::fmt::UTF8,tendril::tendril::NonAtomic&gt;::make_owned_with_capacity (1 samples, 1.32%)</title><rect x="27.6316%" y="245" width="1.3158%" height="15" fill="rgb(237,122,38)" fg:x="21" fg:w="1"/><text x="27.8816%" y="255.50"></text></g><g><title>my-solutions.exe`tendril::buf32::Buf32&lt;tendril::tendril::Header&lt;tendril::tendril::NonAtomic&gt; &gt;::grow (1 samples, 1.32%)</title><rect x="27.6316%" y="229" width="1.3158%" height="15" fill="rgb(244,218,35)" fg:x="21" fg:w="1"/><text x="27.8816%" y="239.50"></text></g><g><title>my-solutions.exe`alloc::vec::Vec&lt;tendril::tendril::Header&lt;tendril::tendril::NonAtomic&gt;,alloc::alloc::Global&gt;::reserve_exact (1 samples, 1.32%)</title><rect x="27.6316%" y="213" width="1.3158%" height="15" fill="rgb(240,68,47)" fg:x="21" fg:w="1"/><text x="27.8816%" y="223.50"></text></g><g><title>my-solutions.exe`alloc::raw_vec::RawVec&lt;tendril::tendril::Header&lt;tendril::tendril::NonAtomic&gt;,alloc::alloc::Global&gt;::reserve_exact (1 samples, 1.32%)</title><rect x="27.6316%" y="197" width="1.3158%" height="15" fill="rgb(210,16,53)" fg:x="21" fg:w="1"/><text x="27.8816%" y="207.50"></text></g><g><title>my-solutions.exe`alloc::raw_vec::RawVec&lt;tendril::tendril::Header&lt;tendril::tendril::NonAtomic&gt;,alloc::alloc::Global&gt;::try_reserve_exact (1 samples, 1.32%)</title><rect x="27.6316%" y="181" width="1.3158%" height="15" fill="rgb(235,124,12)" fg:x="21" fg:w="1"/><text x="27.8816%" y="191.50"></text></g><g><title>my-solutions.exe`alloc::raw_vec::RawVec&lt;tendril::tendril::Header&lt;tendril::tendril::NonAtomic&gt;,alloc::alloc::Global&gt;::grow_exact (1 samples, 1.32%)</title><rect x="27.6316%" y="165" width="1.3158%" height="15" fill="rgb(224,169,11)" fg:x="21" fg:w="1"/><text x="27.8816%" y="175.50"></text></g><g><title>my-solutions.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 1.32%)</title><rect x="27.6316%" y="149" width="1.3158%" height="15" fill="rgb(250,166,2)" fg:x="21" fg:w="1"/><text x="27.8816%" y="159.50"></text></g><g><title>my-solutions.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(enum2$&lt;core::result::Result&lt;core::alloc::layout::Layout,core::alloc::layout::LayoutError&gt; &gt;, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 1.32%)</title><rect x="27.6316%" y="133" width="1.3158%" height="15" fill="rgb(242,216,29)" fg:x="21" fg:w="1"/><text x="27.8816%" y="143.50"></text></g><g><title>my-solutions.exe`enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;, alloc::raw_vec::finish_grow::closure_env$1 (1 samples, 1.32%)</title><rect x="27.6316%" y="117" width="1.3158%" height="15" fill="rgb(230,116,27)" fg:x="21" fg:w="1"/><text x="27.8816%" y="127.50"></text></g><g><title>`0x7FFB809536BD (1 samples, 1.32%)</title><rect x="27.6316%" y="101" width="1.3158%" height="15" fill="rgb(228,99,48)" fg:x="21" fg:w="1"/><text x="27.8816%" y="111.50"></text></g><g><title>`0x7FFB809538E3 (1 samples, 1.32%)</title><rect x="27.6316%" y="85" width="1.3158%" height="15" fill="rgb(253,11,6)" fg:x="21" fg:w="1"/><text x="27.8816%" y="95.50"></text></g><g><title>`0x7FFB80951BF2 (1 samples, 1.32%)</title><rect x="27.6316%" y="69" width="1.3158%" height="15" fill="rgb(247,143,39)" fg:x="21" fg:w="1"/><text x="27.8816%" y="79.50"></text></g><g><title>`0x7FFB8095B3C7 (1 samples, 1.32%)</title><rect x="27.6316%" y="53" width="1.3158%" height="15" fill="rgb(236,97,10)" fg:x="21" fg:w="1"/><text x="27.8816%" y="63.50"></text></g><g><title>`0x7FFB8095B655 (1 samples, 1.32%)</title><rect x="27.6316%" y="37" width="1.3158%" height="15" fill="rgb(233,208,19)" fg:x="21" fg:w="1"/><text x="27.8816%" y="47.50"></text></g><g><title>my-solutions.exe`html5ever::tokenizer::Tokenizer&lt;html5ever::tree_builder::TreeBuilder&lt;ego_tree::NodeId,scraper::html::Html&gt; &gt;::emit_current_tag&lt;html5ever::tree_builder::TreeBuilder&lt;ego_tree::NodeId,scraper::html::Html&gt; &gt; (1 samples, 1.32%)</title><rect x="28.9474%" y="309" width="1.3158%" height="15" fill="rgb(216,164,2)" fg:x="22" fg:w="1"/><text x="29.1974%" y="319.50"></text></g><g><title>my-solutions.exe`tendril::tendril::impl$18::deref(tendril::tendril::Tendril (1 samples, 1.32%)</title><rect x="28.9474%" y="293" width="1.3158%" height="15" fill="rgb(220,129,5)" fg:x="22" fg:w="1"/><text x="29.1974%" y="303.50"></text></g><g><title>my-solutions.exe`string_cache::atom::impl$4::from&lt;markup5ever::LocalNameStaticSet&gt;(enum2$&lt;alloc::borrow::Cow (1 samples, 1.32%)</title><rect x="28.9474%" y="277" width="1.3158%" height="15" fill="rgb(242,17,10)" fg:x="22" fg:w="1"/><text x="29.1974%" y="287.50"></text></g><g><title>my-solutions.exe`string_cache::atom::Atom&lt;markup5ever::LocalNameStaticSet&gt;::try_static_internal(ref$ (1 samples, 1.32%)</title><rect x="28.9474%" y="261" width="1.3158%" height="15" fill="rgb(242,107,0)" fg:x="22" fg:w="1"/><text x="29.1974%" y="271.50"></text></g><g><title>my-solutions.exe`phf_shared::get_index(phf_shared::Hashes*, ref$&lt;slice2$&lt;tuple$ (1 samples, 1.32%)</title><rect x="28.9474%" y="245" width="1.3158%" height="15" fill="rgb(251,28,31)" fg:x="22" fg:w="1"/><text x="29.1974%" y="255.50"></text></g><g><title>my-solutions.exe`alloc::fmt::format (3 samples, 3.95%)</title><rect x="27.6316%" y="645" width="3.9474%" height="15" fill="rgb(233,223,10)" fg:x="21" fg:w="3"/><text x="27.8816%" y="655.50">my-s..</text></g><g><title>my-solutions.exe`enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;::map_or_else(enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;, alloc::fmt::format::closure_env$0, alloc::string::String (*)(ref$ (3 samples, 3.95%)</title><rect x="27.6316%" y="629" width="3.9474%" height="15" fill="rgb(215,21,27)" fg:x="21" fg:w="3"/><text x="27.8816%" y="639.50">my-s..</text></g><g><title>my-solutions.exe`core::ops::function::FnOnce::call_once(alloc::string::String (*)(ref$&lt;str$&gt;), ref$ (3 samples, 3.95%)</title><rect x="27.6316%" y="613" width="3.9474%" height="15" fill="rgb(232,23,21)" fg:x="21" fg:w="3"/><text x="27.8816%" y="623.50">my-s..</text></g><g><title>my-solutions.exe`alloc::str::impl$4::to_owned(ref$ (3 samples, 3.95%)</title><rect x="27.6316%" y="597" width="3.9474%" height="15" fill="rgb(244,5,23)" fg:x="21" fg:w="3"/><text x="27.8816%" y="607.50">my-s..</text></g><g><title>my-solutions.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (3 samples, 3.95%)</title><rect x="27.6316%" y="581" width="3.9474%" height="15" fill="rgb(226,81,46)" fg:x="21" fg:w="3"/><text x="27.8816%" y="591.50">my-s..</text></g><g><title>my-solutions.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (3 samples, 3.95%)</title><rect x="27.6316%" y="565" width="3.9474%" height="15" fill="rgb(247,70,30)" fg:x="21" fg:w="3"/><text x="27.8816%" y="575.50">my-s..</text></g><g><title>my-solutions.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (3 samples, 3.95%)</title><rect x="27.6316%" y="549" width="3.9474%" height="15" fill="rgb(212,68,19)" fg:x="21" fg:w="3"/><text x="27.8816%" y="559.50">my-s..</text></g><g><title>my-solutions.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (3 samples, 3.95%)</title><rect x="27.6316%" y="533" width="3.9474%" height="15" fill="rgb(240,187,13)" fg:x="21" fg:w="3"/><text x="27.8816%" y="543.50">my-s..</text></g><g><title>my-solutions.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (3 samples, 3.95%)</title><rect x="27.6316%" y="517" width="3.9474%" height="15" fill="rgb(223,113,26)" fg:x="21" fg:w="3"/><text x="27.8816%" y="527.50">my-s..</text></g><g><title>my-solutions.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (3 samples, 3.95%)</title><rect x="27.6316%" y="501" width="3.9474%" height="15" fill="rgb(206,192,2)" fg:x="21" fg:w="3"/><text x="27.8816%" y="511.50">my-s..</text></g><g><title>my-solutions.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (3 samples, 3.95%)</title><rect x="27.6316%" y="485" width="3.9474%" height="15" fill="rgb(241,108,4)" fg:x="21" fg:w="3"/><text x="27.8816%" y="495.50">my-s..</text></g><g><title>my-solutions.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::allocate_in (3 samples, 3.95%)</title><rect x="27.6316%" y="469" width="3.9474%" height="15" fill="rgb(247,173,49)" fg:x="21" fg:w="3"/><text x="27.8816%" y="479.50">my-s..</text></g><g><title>my-solutions.exe`alloc::alloc::impl$1::allocate (3 samples, 3.95%)</title><rect x="27.6316%" y="453" width="3.9474%" height="15" fill="rgb(224,114,35)" fg:x="21" fg:w="3"/><text x="27.8816%" y="463.50">my-s..</text></g><g><title>my-solutions.exe`alloc::alloc::Global::alloc_impl (3 samples, 3.95%)</title><rect x="27.6316%" y="437" width="3.9474%" height="15" fill="rgb(245,159,27)" fg:x="21" fg:w="3"/><text x="27.8816%" y="447.50">my-s..</text></g><g><title>my-solutions.exe`alloc::alloc::alloc (3 samples, 3.95%)</title><rect x="27.6316%" y="421" width="3.9474%" height="15" fill="rgb(245,172,44)" fg:x="21" fg:w="3"/><text x="27.8816%" y="431.50">my-s..</text></g><g><title>my-solutions.exe`core::ptr::read_volatile (3 samples, 3.95%)</title><rect x="27.6316%" y="405" width="3.9474%" height="15" fill="rgb(236,23,11)" fg:x="21" fg:w="3"/><text x="27.8816%" y="415.50">my-s..</text></g><g><title>my-solutions.exe`scraper::html::Html::parse_document(ref$ (3 samples, 3.95%)</title><rect x="27.6316%" y="389" width="3.9474%" height="15" fill="rgb(205,117,38)" fg:x="21" fg:w="3"/><text x="27.8816%" y="399.50">my-s..</text></g><g><title>my-solutions.exe`tendril::stream::TendrilSink::one&lt;html5ever::driver::Parser&lt;scraper::html::Html&gt;,tendril::fmt::UTF8,tendril::tendril::NonAtomic,ref$&lt;str$&gt; &gt;(html5ever::driver::Parser&lt;scraper::html::Html&gt;, ref$ (3 samples, 3.95%)</title><rect x="27.6316%" y="373" width="3.9474%" height="15" fill="rgb(237,72,25)" fg:x="21" fg:w="3"/><text x="27.8816%" y="383.50">my-s..</text></g><g><title>my-solutions.exe`html5ever::driver::impl$0::process(html5ever::driver::Parser&lt;scraper::html::Html&gt;*, tendril::tendril::Tendril (3 samples, 3.95%)</title><rect x="27.6316%" y="357" width="3.9474%" height="15" fill="rgb(244,70,9)" fg:x="21" fg:w="3"/><text x="27.8816%" y="367.50">my-s..</text></g><g><title>my-solutions.exe`html5ever::tokenizer::Tokenizer&lt;html5ever::tree_builder::TreeBuilder&lt;ego_tree::NodeId,scraper::html::Html&gt; &gt;::run&lt;html5ever::tree_builder::TreeBuilder&lt;ego_tree::NodeId,scraper::html::Html&gt; &gt; (3 samples, 3.95%)</title><rect x="27.6316%" y="341" width="3.9474%" height="15" fill="rgb(217,125,39)" fg:x="21" fg:w="3"/><text x="27.8816%" y="351.50">my-s..</text></g><g><title>my-solutions.exe`html5ever::tokenizer::Tokenizer&lt;html5ever::tree_builder::TreeBuilder&lt;ego_tree::NodeId,scraper::html::Html&gt; &gt;::step&lt;html5ever::tree_builder::TreeBuilder&lt;ego_tree::NodeId,scraper::html::Html&gt; &gt; (3 samples, 3.95%)</title><rect x="27.6316%" y="325" width="3.9474%" height="15" fill="rgb(235,36,10)" fg:x="21" fg:w="3"/><text x="27.8816%" y="335.50">my-s..</text></g><g><title>my-solutions.exe`html5ever::tokenizer::Tokenizer&lt;html5ever::tree_builder::TreeBuilder&lt;ego_tree::NodeId,scraper::html::Html&gt; &gt;::get_char (1 samples, 1.32%)</title><rect x="30.2632%" y="309" width="1.3158%" height="15" fill="rgb(251,123,47)" fg:x="23" fg:w="1"/><text x="30.5132%" y="319.50"></text></g><g><title>my-solutions.exe`enum2$&lt;core::option::Option&lt;char&gt; &gt;::and_then(enum2$&lt;core::option::Option&lt;char&gt; &gt;, html5ever::tokenizer::impl$1::get_char::closure_env$0&lt;html5ever::tree_builder::TreeBuilder (1 samples, 1.32%)</title><rect x="30.2632%" y="293" width="1.3158%" height="15" fill="rgb(221,13,13)" fg:x="23" fg:w="1"/><text x="30.5132%" y="303.50"></text></g><g><title>my-solutions.exe`markup5ever::util::buffer_queue::BufferQueue::next (1 samples, 1.32%)</title><rect x="30.2632%" y="277" width="1.3158%" height="15" fill="rgb(238,131,9)" fg:x="23" fg:w="1"/><text x="30.5132%" y="287.50"></text></g><g><title>my-solutions.exe`enum2$&lt;core::option::Option&lt;char&gt; &gt;::expect(enum2$&lt;core::option::Option&lt;char&gt; &gt;, ref$ (1 samples, 1.32%)</title><rect x="30.2632%" y="261" width="1.3158%" height="15" fill="rgb(211,50,8)" fg:x="23" fg:w="1"/><text x="30.5132%" y="271.50"></text></g><g><title>my-solutions.exe`tendril::tendril::Tendril&lt;tendril::fmt::UTF8,tendril::tendril::NonAtomic&gt;::pop_front_char&lt;tendril::fmt::UTF8,tendril::tendril::NonAtomic&gt; (1 samples, 1.32%)</title><rect x="30.2632%" y="245" width="1.3158%" height="15" fill="rgb(245,182,24)" fg:x="23" fg:w="1"/><text x="30.5132%" y="255.50"></text></g><g><title>my-solutions.exe`alloc::vec::Vec&lt;scraper::element_ref::ElementRef,alloc::alloc::Global&gt;::len (1 samples, 1.32%)</title><rect x="31.5789%" y="645" width="1.3158%" height="15" fill="rgb(242,14,37)" fg:x="24" fg:w="1"/><text x="31.8289%" y="655.50"></text></g><g><title>my-solutions.exe`alloc::vec::spec_from_iter::impl$0::from_iter&lt;scraper::element_ref::ElementRef,scraper::html::Select&gt; (1 samples, 1.32%)</title><rect x="31.5789%" y="629" width="1.3158%" height="15" fill="rgb(246,228,12)" fg:x="24" fg:w="1"/><text x="31.8289%" y="639.50"></text></g><g><title>my-solutions.exe`alloc::vec::spec_from_iter_nested::impl$0::from_iter (1 samples, 1.32%)</title><rect x="31.5789%" y="613" width="1.3158%" height="15" fill="rgb(213,55,15)" fg:x="24" fg:w="1"/><text x="31.8289%" y="623.50"></text></g><g><title>my-solutions.exe`scraper::html::impl$1::next (1 samples, 1.32%)</title><rect x="31.5789%" y="597" width="1.3158%" height="15" fill="rgb(209,9,3)" fg:x="24" fg:w="1"/><text x="31.8289%" y="607.50"></text></g><g><title>my-solutions.exe`scraper::selector::Selector::matches_with_scope(scraper::element_ref::ElementRef*, enum2$&lt;core::option::Option (1 samples, 1.32%)</title><rect x="31.5789%" y="581" width="1.3158%" height="15" fill="rgb(230,59,30)" fg:x="24" fg:w="1"/><text x="31.8289%" y="591.50"></text></g><g><title>my-solutions.exe`core::slice::iter::impl$181::any(core::slice::iter::Iter&lt;selectors::parser::Selector (1 samples, 1.32%)</title><rect x="31.5789%" y="565" width="1.3158%" height="15" fill="rgb(209,121,21)" fg:x="24" fg:w="1"/><text x="31.8289%" y="575.50"></text></g><g><title>my-solutions.exe`scraper::selector::impl$0::matches_with_scope::closure$1(scraper::selector::impl$0::matches_with_scope::closure_env$1*, selectors::parser::Selector (1 samples, 1.32%)</title><rect x="31.5789%" y="549" width="1.3158%" height="15" fill="rgb(220,109,13)" fg:x="24" fg:w="1"/><text x="31.8289%" y="559.50"></text></g><g><title>my-solutions.exe`selectors::matching::matches_selector(selectors::parser::Selector&lt;scraper::selector::Simple&gt;*, unsigned long long, enum2$&lt;core::option::Option&lt;ref$&lt;selectors::parser::AncestorHashes&gt; &gt; &gt;, scraper::element_ref::ElementRef*, selectors::context::MatchingContext (1 samples, 1.32%)</title><rect x="31.5789%" y="533" width="1.3158%" height="15" fill="rgb(232,18,1)" fg:x="24" fg:w="1"/><text x="31.8289%" y="543.50"></text></g><g><title>my-solutions.exe`selectors::matching::matches_complex_selector(selectors::parser::SelectorIter&lt;scraper::selector::Simple&gt;, scraper::element_ref::ElementRef*, selectors::context::MatchingContext (1 samples, 1.32%)</title><rect x="31.5789%" y="517" width="1.3158%" height="15" fill="rgb(215,41,42)" fg:x="24" fg:w="1"/><text x="31.8289%" y="527.50"></text></g><g><title>my-solutions.exe`selectors::matching::matches_complex_selector_internal&lt;scraper::element_ref::ElementRef&gt;(selectors::parser::SelectorIter&lt;scraper::selector::Simple&gt;, scraper::element_ref::ElementRef*, selectors::context::MatchingContext (1 samples, 1.32%)</title><rect x="31.5789%" y="501" width="1.3158%" height="15" fill="rgb(224,123,36)" fg:x="24" fg:w="1"/><text x="31.8289%" y="511.50"></text></g><g><title>my-solutions.exe`selectors::matching::matches_compound_selector(selectors::parser::SelectorIter&lt;scraper::selector::Simple&gt;*, scraper::element_ref::ElementRef*, selectors::context::MatchingContext (1 samples, 1.32%)</title><rect x="31.5789%" y="485" width="1.3158%" height="15" fill="rgb(240,125,3)" fg:x="24" fg:w="1"/><text x="31.8289%" y="495.50"></text></g><g><title>my-solutions.exe`core::iter::traits::iterator::Iterator::all(selectors::parser::SelectorIter&lt;scraper::selector::Simple&gt;*, selectors::matching::matches_compound_selector::closure_env$0 (1 samples, 1.32%)</title><rect x="31.5789%" y="469" width="1.3158%" height="15" fill="rgb(205,98,50)" fg:x="24" fg:w="1"/><text x="31.8289%" y="479.50"></text></g><g><title>my-solutions.exe`core::iter::traits::iterator::Iterator::try_fold(selectors::parser::SelectorIter&lt;scraper::selector::Simple&gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::all::check::closure_env$0&lt;ref$&lt;enum2$&lt;selectors::parser::Component&lt;scraper::selector::Simple&gt; &gt; &gt;,selectors::matching::matches_compound_selector::closure_env$0 (1 samples, 1.32%)</title><rect x="31.5789%" y="453" width="1.3158%" height="15" fill="rgb(205,185,37)" fg:x="24" fg:w="1"/><text x="31.8289%" y="463.50"></text></g><g><title>my-solutions.exe`core::iter::traits::iterator::Iterator::all::check::closure$0(core::iter::traits::iterator::Iterator::all::check::closure_env$0&lt;ref$&lt;enum2$&lt;selectors::parser::Component&lt;scraper::selector::Simple&gt; &gt; &gt;,selectors::matching::matches_compound_selector::closure_env$0&lt;scraper::element_ref::ElementRef&gt; &gt;*, tuple$&lt;&gt;, enum2$&lt;selectors::parser::Component (1 samples, 1.32%)</title><rect x="31.5789%" y="437" width="1.3158%" height="15" fill="rgb(238,207,15)" fg:x="24" fg:w="1"/><text x="31.8289%" y="447.50"></text></g><g><title>my-solutions.exe`selectors::matching::matches_compound_selector::closure$0(selectors::matching::matches_compound_selector::closure_env$0&lt;scraper::element_ref::ElementRef&gt;*, enum2$&lt;selectors::parser::Component (1 samples, 1.32%)</title><rect x="31.5789%" y="421" width="1.3158%" height="15" fill="rgb(213,199,42)" fg:x="24" fg:w="1"/><text x="31.8289%" y="431.50"></text></g><g><title>my-solutions.exe`selectors::matching::matches_simple_selector(enum2$&lt;selectors::parser::Component&lt;scraper::selector::Simple&gt; &gt;*, scraper::element_ref::ElementRef*, selectors::matching::LocalMatchingContext (1 samples, 1.32%)</title><rect x="31.5789%" y="405" width="1.3158%" height="15" fill="rgb(235,201,11)" fg:x="24" fg:w="1"/><text x="31.8289%" y="415.50"></text></g><g><title>my-solutions.exe`scraper::node::Element::has_class(ref$ (1 samples, 1.32%)</title><rect x="31.5789%" y="389" width="1.3158%" height="15" fill="rgb(207,46,11)" fg:x="24" fg:w="1"/><text x="31.8289%" y="399.50"></text></g><g><title>my-solutions.exe`scraper::node::Element::classes (1 samples, 1.32%)</title><rect x="31.5789%" y="373" width="1.3158%" height="15" fill="rgb(241,35,35)" fg:x="24" fg:w="1"/><text x="31.8289%" y="383.50"></text></g><g><title>my-solutions.exe`once_cell::unsync::OnceCell&lt;alloc::vec::Vec&lt;string_cache::atom::Atom&lt;markup5ever::LocalNameStaticSet&gt;,alloc::alloc::Global&gt; &gt;::get_or_init (1 samples, 1.32%)</title><rect x="31.5789%" y="357" width="1.3158%" height="15" fill="rgb(243,32,47)" fg:x="24" fg:w="1"/><text x="31.8289%" y="367.50"></text></g><g><title>my-solutions.exe`once_cell::unsync::OnceCell&lt;alloc::vec::Vec&lt;string_cache::atom::Atom&lt;markup5ever::LocalNameStaticSet&gt;,alloc::alloc::Global&gt; &gt;::get_or_try_init(once_cell::unsync::impl$8::get_or_init::closure_env$0&lt;alloc::vec::Vec&lt;string_cache::atom::Atom (1 samples, 1.32%)</title><rect x="31.5789%" y="341" width="1.3158%" height="15" fill="rgb(247,202,23)" fg:x="24" fg:w="1"/><text x="31.8289%" y="351.50"></text></g><g><title>my-solutions.exe`once_cell::unsync::impl$8::get_or_init::closure$0(once_cell::unsync::impl$8::get_or_init::closure_env$0&lt;alloc::vec::Vec&lt;string_cache::atom::Atom (1 samples, 1.32%)</title><rect x="31.5789%" y="325" width="1.3158%" height="15" fill="rgb(219,102,11)" fg:x="24" fg:w="1"/><text x="31.8289%" y="335.50"></text></g><g><title>my-solutions.exe`scraper::node::impl$8::classes::closure$0 (1 samples, 1.32%)</title><rect x="31.5789%" y="309" width="1.3158%" height="15" fill="rgb(243,110,44)" fg:x="24" fg:w="1"/><text x="31.8289%" y="319.50"></text></g><g><title>my-solutions.exe`alloc::vec::Vec&lt;string_cache::atom::Atom&lt;markup5ever::LocalNameStaticSet&gt;,alloc::alloc::Global&gt;::dedup (1 samples, 1.32%)</title><rect x="31.5789%" y="293" width="1.3158%" height="15" fill="rgb(222,74,54)" fg:x="24" fg:w="1"/><text x="31.8289%" y="303.50"></text></g><g><title>my-solutions.exe`core::slice::sort::recurse&lt;string_cache::atom::Atom&lt;markup5ever::LocalNameStaticSet&gt;,bool (*)(ref$&lt;string_cache::atom::Atom&lt;markup5ever::LocalNameStaticSet&gt; &gt;,ref$&lt;string_cache::atom::Atom&lt;markup5ever::LocalNameStaticSet&gt; &gt;)&gt;(ref_mut$&lt;slice2$&lt;string_cache::atom::Atom&lt;markup5ever::LocalNameStaticSet&gt; &gt; &gt;, bool (**)(string_cache::atom::Atom&lt;markup5ever::LocalNameStaticSet&gt;*, string_cache::atom::Atom&lt;markup5ever::LocalNameStaticSet&gt;*), enum2$&lt;core::option::Option&lt;ref$&lt;string_cache::atom::Atom (1 samples, 1.32%)</title><rect x="31.5789%" y="277" width="1.3158%" height="15" fill="rgb(216,99,12)" fg:x="24" fg:w="1"/><text x="31.8289%" y="287.50"></text></g><g><title>my-solutions.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option (6 samples, 7.89%)</title><rect x="26.3158%" y="693" width="7.8947%" height="15" fill="rgb(226,22,26)" fg:x="20" fg:w="6"/><text x="26.5658%" y="703.50">my-solution..</text></g><g><title>my-solutions.exe`rudvent_lib::advent_interactions::DayData::check_for_posting (6 samples, 7.89%)</title><rect x="26.3158%" y="677" width="7.8947%" height="15" fill="rgb(217,163,10)" fg:x="20" fg:w="6"/><text x="26.5658%" y="687.50">my-solution..</text></g><g><title>my-solutions.exe`rudvent_lib::advent_interactions::DayData::has_been_posted(bool, ref$ (5 samples, 6.58%)</title><rect x="27.6316%" y="661" width="6.5789%" height="15" fill="rgb(213,25,53)" fg:x="21" fg:w="5"/><text x="27.8816%" y="671.50">my-soluti..</text></g><g><title>my-solutions.exe`enum2$&lt;core::result::Result&lt;scraper::selector::Selector,enum2$&lt;scraper::error::SelectorErrorKind&gt; &gt; &gt;::unwrap(enum2$&lt;core::result::Result&lt;scraper::selector::Selector,enum2$ (1 samples, 1.32%)</title><rect x="32.8947%" y="645" width="1.3158%" height="15" fill="rgb(252,105,26)" fg:x="25" fg:w="1"/><text x="33.1447%" y="655.50"></text></g><g><title>my-solutions.exe`scraper::selector::Selector::parse(ref$ (1 samples, 1.32%)</title><rect x="32.8947%" y="629" width="1.3158%" height="15" fill="rgb(220,39,43)" fg:x="25" fg:w="1"/><text x="33.1447%" y="639.50"></text></g><g><title>my-solutions.exe`selectors::parser::SelectorList&lt;scraper::selector::Simple&gt;::parse (1 samples, 1.32%)</title><rect x="32.8947%" y="613" width="1.3158%" height="15" fill="rgb(229,68,48)" fg:x="25" fg:w="1"/><text x="33.1447%" y="623.50"></text></g><g><title>my-solutions.exe`selectors::parser::SelectorList&lt;scraper::selector::Simple&gt;::parse_with_state (1 samples, 1.32%)</title><rect x="32.8947%" y="597" width="1.3158%" height="15" fill="rgb(252,8,32)" fg:x="25" fg:w="1"/><text x="33.1447%" y="607.50"></text></g><g><title>my-solutions.exe`cssparser::parser::parse_until_before&lt;selectors::parser::impl$1::parse_with_state::closure_env$0&lt;scraper::selector::Simple,scraper::selector::Parser&gt;,selectors::parser::Selector&lt;scraper::selector::Simple&gt;,enum2$&lt;selectors::parser::SelectorParseErrorKind&gt; &gt;(cssparser::parser::Parser*, cssparser::parser::Delimiters, selectors::parser::impl$1::parse_with_state::closure_env$0 (1 samples, 1.32%)</title><rect x="32.8947%" y="581" width="1.3158%" height="15" fill="rgb(223,20,43)" fg:x="25" fg:w="1"/><text x="33.1447%" y="591.50"></text></g><g><title>my-solutions.exe`cssparser::parser::Parser::parse_entirely(selectors::parser::impl$1::parse_with_state::closure_env$0 (1 samples, 1.32%)</title><rect x="32.8947%" y="565" width="1.3158%" height="15" fill="rgb(229,81,49)" fg:x="25" fg:w="1"/><text x="33.1447%" y="575.50"></text></g><g><title>my-solutions.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;selectors::parser::Selector&lt;scraper::selector::Simple&gt;,cssparser::parser::ParseError&lt;enum2$ (1 samples, 1.32%)</title><rect x="32.8947%" y="549" width="1.3158%" height="15" fill="rgb(236,28,36)" fg:x="25" fg:w="1"/><text x="33.1447%" y="559.50"></text></g><g><title>my-solutions.exe`selectors::parser::parse_selector&lt;scraper::selector::Parser,scraper::selector::Simple&gt; (1 samples, 1.32%)</title><rect x="32.8947%" y="533" width="1.3158%" height="15" fill="rgb(249,185,26)" fg:x="25" fg:w="1"/><text x="33.1447%" y="543.50"></text></g><g><title>my-solutions.exe`selectors::builder::SelectorBuilder&lt;scraper::selector::Simple&gt;::build (1 samples, 1.32%)</title><rect x="32.8947%" y="517" width="1.3158%" height="15" fill="rgb(249,174,33)" fg:x="25" fg:w="1"/><text x="33.1447%" y="527.50"></text></g><g><title>my-solutions.exe`selectors::builder::SelectorBuilder&lt;scraper::selector::Simple&gt;::build_with_specificity_and_flags (1 samples, 1.32%)</title><rect x="32.8947%" y="501" width="1.3158%" height="15" fill="rgb(233,201,37)" fg:x="25" fg:w="1"/><text x="33.1447%" y="511.50"></text></g><g><title>my-solutions.exe`servo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;,slice2$&lt;enum2$&lt;selectors::parser::Component&lt;scraper::selector::Simple&gt; &gt; &gt; &gt; &gt;::from_header_and_iter(servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;, selectors::builder::SelectorBuilderIter (1 samples, 1.32%)</title><rect x="32.8947%" y="485" width="1.3158%" height="15" fill="rgb(221,78,26)" fg:x="25" fg:w="1"/><text x="33.1447%" y="495.50"></text></g><g><title>my-solutions.exe`servo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;,slice2$&lt;enum2$&lt;selectors::parser::Component&lt;scraper::selector::Simple&gt; &gt; &gt; &gt; &gt;::from_header_and_iter_with_size(servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;, selectors::builder::SelectorBuilderIter (1 samples, 1.32%)</title><rect x="32.8947%" y="469" width="1.3158%" height="15" fill="rgb(250,127,30)" fg:x="25" fg:w="1"/><text x="33.1447%" y="479.50"></text></g><g><title>my-solutions.exe`servo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;,slice2$&lt;enum2$&lt;selectors::parser::Component&lt;scraper::selector::Simple&gt; &gt; &gt; &gt; &gt;::from_header_and_iter_alloc(servo_arc::impl$29::from_header_and_iter_with_size::closure_env$0&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;,enum2$&lt;selectors::parser::Component&lt;scraper::selector::Simple&gt; &gt;,selectors::builder::SelectorBuilderIter&lt;scraper::selector::Simple&gt; &gt;, servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;, selectors::builder::SelectorBuilderIter (1 samples, 1.32%)</title><rect x="32.8947%" y="453" width="1.3158%" height="15" fill="rgb(230,49,44)" fg:x="25" fg:w="1"/><text x="33.1447%" y="463.50"></text></g><g><title>my-solutions.exe`enum2$&lt;core::option::Option&lt;enum2$&lt;selectors::parser::Component&lt;scraper::selector::Simple&gt; &gt; &gt; &gt;::expect(enum2$&lt;core::option::Option&lt;enum2$&lt;selectors::parser::Component&lt;scraper::selector::Simple&gt; &gt; &gt; &gt;, ref$ (1 samples, 1.32%)</title><rect x="32.8947%" y="437" width="1.3158%" height="15" fill="rgb(229,67,23)" fg:x="25" fg:w="1"/><text x="33.1447%" y="447.50"></text></g><g><title>my-solutions.exe`rudvent_lib::advent_interactions::DayData::is_data_available (1 samples, 1.32%)</title><rect x="34.2105%" y="693" width="1.3158%" height="15" fill="rgb(249,83,47)" fg:x="26" fg:w="1"/><text x="34.4605%" y="703.50"></text></g><g><title>my-solutions.exe`std::path::impl$44::deref (1 samples, 1.32%)</title><rect x="34.2105%" y="677" width="1.3158%" height="15" fill="rgb(215,43,3)" fg:x="26" fg:w="1"/><text x="34.4605%" y="687.50"></text></g><g><title>my-solutions.exe`std::fs::metadata(ref$ (1 samples, 1.32%)</title><rect x="34.2105%" y="661" width="1.3158%" height="15" fill="rgb(238,154,13)" fg:x="26" fg:w="1"/><text x="34.4605%" y="671.50"></text></g><g><title>my-solutions.exe`enum2$&lt;core::result::Result&lt;std::sys::windows::fs::FileAttr,std::io::error::Error&gt; &gt;::map(enum2$&lt;core::result::Result&lt;std::sys::windows::fs::FileAttr,std::io::error::Error&gt; &gt;, std::fs::Metadata (*) (1 samples, 1.32%)</title><rect x="34.2105%" y="645" width="1.3158%" height="15" fill="rgb(219,56,2)" fg:x="26" fg:w="1"/><text x="34.4605%" y="655.50"></text></g><g><title>my-solutions.exe`std::sys::windows::fs::stat (1 samples, 1.32%)</title><rect x="34.2105%" y="629" width="1.3158%" height="15" fill="rgb(233,0,4)" fg:x="26" fg:w="1"/><text x="34.4605%" y="639.50"></text></g><g><title>my-solutions.exe`std::sys::windows::fs::metadata (1 samples, 1.32%)</title><rect x="34.2105%" y="613" width="1.3158%" height="15" fill="rgb(235,30,7)" fg:x="26" fg:w="1"/><text x="34.4605%" y="623.50"></text></g><g><title>my-solutions.exe`std::sys::windows::fs::File::open (1 samples, 1.32%)</title><rect x="34.2105%" y="597" width="1.3158%" height="15" fill="rgb(250,79,13)" fg:x="26" fg:w="1"/><text x="34.4605%" y="607.50"></text></g><g><title>my-solutions.exe`core::convert::impl$6::try_into (1 samples, 1.32%)</title><rect x="34.2105%" y="581" width="1.3158%" height="15" fill="rgb(211,146,34)" fg:x="26" fg:w="1"/><text x="34.4605%" y="591.50"></text></g><g><title>my-solutions.exe`std::os::windows::io::handle::impl$12::try_from (1 samples, 1.32%)</title><rect x="34.2105%" y="565" width="1.3158%" height="15" fill="rgb(228,22,38)" fg:x="26" fg:w="1"/><text x="34.4605%" y="575.50"></text></g><g><title>`0x7FFB7E285FE6 (1 samples, 1.32%)</title><rect x="34.2105%" y="549" width="1.3158%" height="15" fill="rgb(235,168,5)" fg:x="26" fg:w="1"/><text x="34.4605%" y="559.50"></text></g><g><title>`0x7FFB7E286579 (1 samples, 1.32%)</title><rect x="34.2105%" y="533" width="1.3158%" height="15" fill="rgb(221,155,16)" fg:x="26" fg:w="1"/><text x="34.4605%" y="543.50"></text></g><g><title>`0x7FFB809CDA84 (1 samples, 1.32%)</title><rect x="34.2105%" y="517" width="1.3158%" height="15" fill="rgb(215,215,53)" fg:x="26" fg:w="1"/><text x="34.4605%" y="527.50"></text></g><g><title>my-solutions.exe`enum2$&lt;core::result::Result&lt;cached_path::cache::Cache,enum2$&lt;cached_path::error::Error&gt; &gt; &gt;::unwrap(enum2$&lt;core::result::Result&lt;cached_path::cache::Cache,enum2$ (1 samples, 1.32%)</title><rect x="35.5263%" y="661" width="1.3158%" height="15" fill="rgb(223,4,10)" fg:x="27" fg:w="1"/><text x="35.7763%" y="671.50"></text></g><g><title>my-solutions.exe`cached_path::cache::CacheBuilder::build (1 samples, 1.32%)</title><rect x="35.5263%" y="645" width="1.3158%" height="15" fill="rgb(234,103,6)" fg:x="27" fg:w="1"/><text x="35.7763%" y="655.50"></text></g><g><title>my-solutions.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$ (1 samples, 1.32%)</title><rect x="35.5263%" y="629" width="1.3158%" height="15" fill="rgb(227,97,0)" fg:x="27" fg:w="1"/><text x="35.7763%" y="639.50"></text></g><g><title>my-solutions.exe`std::fs::DirBuilder::create_dir_all (1 samples, 1.32%)</title><rect x="35.5263%" y="613" width="1.3158%" height="15" fill="rgb(234,150,53)" fg:x="27" fg:w="1"/><text x="35.7763%" y="623.50"></text></g><g><title>my-solutions.exe`std::sys::windows::fs::DirBuilder::mkdir (1 samples, 1.32%)</title><rect x="35.5263%" y="597" width="1.3158%" height="15" fill="rgb(228,201,54)" fg:x="27" fg:w="1"/><text x="35.7763%" y="607.50"></text></g><g><title>my-solutions.exe`std::sys::windows::cvt (1 samples, 1.32%)</title><rect x="35.5263%" y="581" width="1.3158%" height="15" fill="rgb(222,22,37)" fg:x="27" fg:w="1"/><text x="35.7763%" y="591.50"></text></g><g><title>my-solutions.exe`std::sys::windows::impl$2::is_zero (1 samples, 1.32%)</title><rect x="35.5263%" y="565" width="1.3158%" height="15" fill="rgb(237,53,32)" fg:x="27" fg:w="1"/><text x="35.7763%" y="575.50"></text></g><g><title>`0x7FFB7E289DD2 (1 samples, 1.32%)</title><rect x="35.5263%" y="549" width="1.3158%" height="15" fill="rgb(233,25,53)" fg:x="27" fg:w="1"/><text x="35.7763%" y="559.50"></text></g><g><title>`0x7FFB809CDA84 (1 samples, 1.32%)</title><rect x="35.5263%" y="533" width="1.3158%" height="15" fill="rgb(210,40,34)" fg:x="27" fg:w="1"/><text x="35.7763%" y="543.50"></text></g><g><title>my-solutions.exe`rudvent_lib::solution::impl$0::build&lt;my_solutions::days::day_8::Map,usize,my_solutions::days::day_8::Map,usize,tuple$&lt;&gt;,rudvent_lib::solution::execution::EmptyUserMonitor&gt;(rudvent_lib::solution::StructSolutionBuilder&lt;my_solutions::days::day_8::Map,usize,my_solutions::days::day_8::Map,usize,tuple$&lt;&gt;,rudvent_lib::solution::execution::EmptyUserMonitor&gt;*, rudvent_lib::cli::app::App*, unsigned char, alloc::vec::Vec (2 samples, 2.63%)</title><rect x="35.5263%" y="693" width="2.6316%" height="15" fill="rgb(241,220,44)" fg:x="27" fg:w="2"/><text x="35.7763%" y="703.50">my..</text></g><g><title>my-solutions.exe`rudvent_lib::advent_interactions::DayData::new (2 samples, 2.63%)</title><rect x="35.5263%" y="677" width="2.6316%" height="15" fill="rgb(235,28,35)" fg:x="27" fg:w="2"/><text x="35.7763%" y="687.50">my..</text></g><g><title>my-solutions.exe`enum2$&lt;core::result::Result&lt;reqwest::blocking::client::Client,reqwest::error::Error&gt; &gt;::unwrap(enum2$&lt;core::result::Result (1 samples, 1.32%)</title><rect x="36.8421%" y="661" width="1.3158%" height="15" fill="rgb(210,56,17)" fg:x="28" fg:w="1"/><text x="37.0921%" y="671.50"></text></g><g><title>my-solutions.exe`reqwest::blocking::client::ClientBuilder::build (1 samples, 1.32%)</title><rect x="36.8421%" y="645" width="1.3158%" height="15" fill="rgb(224,130,29)" fg:x="28" fg:w="1"/><text x="37.0921%" y="655.50"></text></g><g><title>my-solutions.exe`reqwest::blocking::client::ClientHandle::new (1 samples, 1.32%)</title><rect x="36.8421%" y="629" width="1.3158%" height="15" fill="rgb(235,212,8)" fg:x="28" fg:w="1"/><text x="37.0921%" y="639.50"></text></g><g><title>my-solutions.exe`std::thread::Builder::spawn (1 samples, 1.32%)</title><rect x="36.8421%" y="613" width="1.3158%" height="15" fill="rgb(223,33,50)" fg:x="28" fg:w="1"/><text x="37.0921%" y="623.50"></text></g><g><title>my-solutions.exe`std::thread::Builder::spawn_unchecked (1 samples, 1.32%)</title><rect x="36.8421%" y="597" width="1.3158%" height="15" fill="rgb(219,149,13)" fg:x="28" fg:w="1"/><text x="37.0921%" y="607.50"></text></g><g><title>my-solutions.exe`std::thread::Builder::spawn_unchecked_(std::thread::Builder, reqwest::blocking::client::impl$8::new::closure_env$0, enum2$&lt;core::option::Option&lt;alloc::sync::Arc (1 samples, 1.32%)</title><rect x="36.8421%" y="581" width="1.3158%" height="15" fill="rgb(250,156,29)" fg:x="28" fg:w="1"/><text x="37.0921%" y="591.50"></text></g><g><title>my-solutions.exe`std::sys::windows::thread::Thread::new (1 samples, 1.32%)</title><rect x="36.8421%" y="565" width="1.3158%" height="15" fill="rgb(216,193,19)" fg:x="28" fg:w="1"/><text x="37.0921%" y="575.50"></text></g><g><title>`0x7FFB8023B8ED (1 samples, 1.32%)</title><rect x="36.8421%" y="549" width="1.3158%" height="15" fill="rgb(216,135,14)" fg:x="28" fg:w="1"/><text x="37.0921%" y="559.50"></text></g><g><title>`0x7FFB7E27CC1F (1 samples, 1.32%)</title><rect x="36.8421%" y="533" width="1.3158%" height="15" fill="rgb(241,47,5)" fg:x="28" fg:w="1"/><text x="37.0921%" y="543.50"></text></g><g><title>`0x7FFB809CE814 (1 samples, 1.32%)</title><rect x="36.8421%" y="517" width="1.3158%" height="15" fill="rgb(233,42,35)" fg:x="28" fg:w="1"/><text x="37.0921%" y="527.50"></text></g><g><title>my-solutions.exe`core::hash::impls::impl$5::hash(tuple$ (1 samples, 1.32%)</title><rect x="38.1579%" y="581" width="1.3158%" height="15" fill="rgb(231,13,6)" fg:x="29" fg:w="1"/><text x="38.4079%" y="591.50"></text></g><g><title>my-solutions.exe`core::hash::impls::impl$24::hash(tuple$ (1 samples, 1.32%)</title><rect x="38.1579%" y="565" width="1.3158%" height="15" fill="rgb(207,181,40)" fg:x="29" fg:w="1"/><text x="38.4079%" y="575.50"></text></g><g><title>my-solutions.exe`core::hash::impls::impl$11::hash (1 samples, 1.32%)</title><rect x="38.1579%" y="549" width="1.3158%" height="15" fill="rgb(254,173,49)" fg:x="29" fg:w="1"/><text x="38.4079%" y="559.50"></text></g><g><title>my-solutions.exe`core::hash::Hasher::write_u32 (1 samples, 1.32%)</title><rect x="38.1579%" y="533" width="1.3158%" height="15" fill="rgb(221,1,38)" fg:x="29" fg:w="1"/><text x="38.4079%" y="543.50"></text></g><g><title>my-solutions.exe`std::collections::hash::map::impl$86::write(std::collections::hash::map::DefaultHasher*, ref$&lt;slice2$ (1 samples, 1.32%)</title><rect x="38.1579%" y="517" width="1.3158%" height="15" fill="rgb(206,124,46)" fg:x="29" fg:w="1"/><text x="38.4079%" y="527.50"></text></g><g><title>my-solutions.exe`core::hash::sip::impl$4::write(core::hash::sip::SipHasher13*, ref$&lt;slice2$ (1 samples, 1.32%)</title><rect x="38.1579%" y="501" width="1.3158%" height="15" fill="rgb(249,21,11)" fg:x="29" fg:w="1"/><text x="38.4079%" y="511.50"></text></g><g><title>my-solutions.exe`core::hash::sip::impl$5::write&lt;core::hash::sip::Sip13Rounds&gt;(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (1 samples, 1.32%)</title><rect x="39.4737%" y="533" width="1.3158%" height="15" fill="rgb(222,201,40)" fg:x="30" fg:w="1"/><text x="39.7237%" y="543.50"></text></g><g><title>my-solutions.exe`my_solutions::days::day_8::part_1(my_solutions::days::day_8::Map, rudvent_lib::solution::execution::RunParams&lt;tuple$&lt;&gt; &gt;*, rudvent_lib::solution::execution::RuntimeMonitor (3 samples, 3.95%)</title><rect x="38.1579%" y="661" width="3.9474%" height="15" fill="rgb(235,61,29)" fg:x="29" fg:w="3"/><text x="38.4079%" y="671.50">my-s..</text></g><g><title>my-solutions.exe`std::collections::hash::map::HashMap&lt;tuple$&lt;u32,u32,u32&gt;,tuple$&lt;tuple$&lt;u32,u32,u32&gt;,tuple$&lt;u32,u32,u32&gt; &gt;,std::collections::hash::map::RandomState&gt;::get(tuple$ (3 samples, 3.95%)</title><rect x="38.1579%" y="645" width="3.9474%" height="15" fill="rgb(219,207,3)" fg:x="29" fg:w="3"/><text x="38.4079%" y="655.50">my-s..</text></g><g><title>my-solutions.exe`hashbrown::map::HashMap&lt;tuple$&lt;u32,u32,u32&gt;,tuple$&lt;tuple$&lt;u32,u32,u32&gt;,tuple$&lt;u32,u32,u32&gt; &gt;,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::get(tuple$ (3 samples, 3.95%)</title><rect x="38.1579%" y="629" width="3.9474%" height="15" fill="rgb(222,56,46)" fg:x="29" fg:w="3"/><text x="38.4079%" y="639.50">my-s..</text></g><g><title>my-solutions.exe`hashbrown::map::HashMap&lt;tuple$&lt;u32,u32,u32&gt;,tuple$&lt;tuple$&lt;u32,u32,u32&gt;,tuple$&lt;u32,u32,u32&gt; &gt;,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::get_inner(tuple$ (3 samples, 3.95%)</title><rect x="38.1579%" y="613" width="3.9474%" height="15" fill="rgb(239,76,54)" fg:x="29" fg:w="3"/><text x="38.4079%" y="623.50">my-s..</text></g><g><title>my-solutions.exe`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$&lt;tuple$&lt;u32,u32,u32&gt; &gt; &gt;(std::collections::hash::map::RandomState*, tuple$ (3 samples, 3.95%)</title><rect x="38.1579%" y="597" width="3.9474%" height="15" fill="rgb(231,124,27)" fg:x="29" fg:w="3"/><text x="38.4079%" y="607.50">my-s..</text></g><g><title>my-solutions.exe`std::collections::hash::map::impl$86::finish (2 samples, 2.63%)</title><rect x="39.4737%" y="581" width="2.6316%" height="15" fill="rgb(249,195,6)" fg:x="30" fg:w="2"/><text x="39.7237%" y="591.50">my..</text></g><g><title>my-solutions.exe`core::hash::sip::impl$4::finish (2 samples, 2.63%)</title><rect x="39.4737%" y="565" width="2.6316%" height="15" fill="rgb(237,174,47)" fg:x="30" fg:w="2"/><text x="39.7237%" y="575.50">my..</text></g><g><title>my-solutions.exe`core::hash::sip::impl$5::finish(core::hash::sip::Hasher (2 samples, 2.63%)</title><rect x="39.4737%" y="549" width="2.6316%" height="15" fill="rgb(206,201,31)" fg:x="30" fg:w="2"/><text x="39.7237%" y="559.50">my..</text></g><g><title>my-solutions.exe`core::hash::sip::impl$8::c_rounds (1 samples, 1.32%)</title><rect x="40.7895%" y="533" width="1.3158%" height="15" fill="rgb(231,57,52)" fg:x="31" fg:w="1"/><text x="41.0395%" y="543.50"></text></g><g><title>my-solutions.exe`core::num::impl$9::wrapping_add (1 samples, 1.32%)</title><rect x="40.7895%" y="517" width="1.3158%" height="15" fill="rgb(248,177,22)" fg:x="31" fg:w="1"/><text x="41.0395%" y="527.50"></text></g><g><title>my-solutions.exe`core::iter::traits::iterator::Iterator::for_each::call::closure$0(core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;tuple$&lt;tuple$&lt;u32,u32,u32&gt;,tuple$&lt;tuple$&lt;u32,u32,u32&gt;,tuple$&lt;u32,u32,u32&gt; &gt; &gt;,hashbrown::map::impl$95::extend::closure_env$0&lt;tuple$&lt;u32,u32,u32&gt;,tuple$&lt;tuple$&lt;u32,u32,u32&gt;,tuple$&lt;u32,u32,u32&gt; &gt;,std::collections::hash::map::RandomState,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::str::iter::Lines,my_solutions::days::day_8::prepare::closure_env$0&gt; &gt; &gt;*, tuple$&lt;&gt;, tuple$&lt;tuple$&lt;u32,u32,u32&gt;,tuple$&lt;tuple$&lt;u32,u32,u32&gt;,tuple$ (1 samples, 1.32%)</title><rect x="42.1053%" y="565" width="1.3158%" height="15" fill="rgb(215,211,37)" fg:x="32" fg:w="1"/><text x="42.3553%" y="575.50"></text></g><g><title>my-solutions.exe`hashbrown::map::impl$95::extend::closure$0(hashbrown::map::impl$95::extend::closure_env$0&lt;tuple$&lt;u32,u32,u32&gt;,tuple$&lt;tuple$&lt;u32,u32,u32&gt;,tuple$&lt;u32,u32,u32&gt; &gt;,std::collections::hash::map::RandomState,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::str::iter::Lines,my_solutions::days::day_8::prepare::closure_env$0&gt; &gt;*, tuple$&lt;tuple$&lt;u32,u32,u32&gt;,tuple$&lt;tuple$&lt;u32,u32,u32&gt;,tuple$ (1 samples, 1.32%)</title><rect x="42.1053%" y="549" width="1.3158%" height="15" fill="rgb(241,128,51)" fg:x="32" fg:w="1"/><text x="42.3553%" y="559.50"></text></g><g><title>my-solutions.exe`core::str::impl$0::get_unchecked(ref$&lt;str$&gt;, core::ops::range::Range (1 samples, 1.32%)</title><rect x="43.4211%" y="533" width="1.3158%" height="15" fill="rgb(227,165,31)" fg:x="33" fg:w="1"/><text x="43.6711%" y="543.50"></text></g><g><title>my-solutions.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::extend_from_slice(ref$&lt;slice2$ (1 samples, 1.32%)</title><rect x="43.4211%" y="517" width="1.3158%" height="15" fill="rgb(228,167,24)" fg:x="33" fg:w="1"/><text x="43.6711%" y="527.50"></text></g><g><title>my-solutions.exe`alloc::vec::spec_extend::impl$4::spec_extend(alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, core::slice::iter::Iter (1 samples, 1.32%)</title><rect x="43.4211%" y="501" width="1.3158%" height="15" fill="rgb(228,143,12)" fg:x="33" fg:w="1"/><text x="43.6711%" y="511.50"></text></g><g><title>my-solutions.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::append_elements(ptr_const$&lt;slice2$ (1 samples, 1.32%)</title><rect x="43.4211%" y="485" width="1.3158%" height="15" fill="rgb(249,149,8)" fg:x="33" fg:w="1"/><text x="43.6711%" y="495.50"></text></g><g><title>my-solutions.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::len (1 samples, 1.32%)</title><rect x="43.4211%" y="469" width="1.3158%" height="15" fill="rgb(243,35,44)" fg:x="33" fg:w="1"/><text x="43.6711%" y="479.50"></text></g><g><title>my-solutions.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,eyre::Report&gt; &gt;::unwrap(enum2$&lt;core::result::Result&lt;tuple$ (15 samples, 19.74%)</title><rect x="26.3158%" y="741" width="19.7368%" height="15" fill="rgb(246,89,9)" fg:x="20" fg:w="15"/><text x="26.5658%" y="751.50">my-solutions.exe`enum2$&lt;core::r..</text></g><g><title>my-solutions.exe`rudvent_lib::cli::app::App::run (15 samples, 19.74%)</title><rect x="26.3158%" y="725" width="19.7368%" height="15" fill="rgb(233,213,13)" fg:x="20" fg:w="15"/><text x="26.5658%" y="735.50">my-solutions.exe`rudvent_lib::c..</text></g><g><title>my-solutions.exe`rudvent_lib::cli::solve::SolveInstructions::execute (15 samples, 19.74%)</title><rect x="26.3158%" y="709" width="19.7368%" height="15" fill="rgb(233,141,41)" fg:x="20" fg:w="15"/><text x="26.5658%" y="719.50">my-solutions.exe`rudvent_lib::c..</text></g><g><title>my-solutions.exe`rudvent_lib::solution::impl$3::run&lt;my_solutions::days::day_8::Map,usize,my_solutions::days::day_8::Map,usize,tuple$&lt;&gt;,rudvent_lib::solution::execution::EmptyUserMonitor&gt;(rudvent_lib::solution::StructSolution&lt;my_solutions::days::day_8::Map,usize,my_solutions::days::day_8::Map,usize,tuple$ (6 samples, 7.89%)</title><rect x="38.1579%" y="693" width="7.8947%" height="15" fill="rgb(239,167,4)" fg:x="29" fg:w="6"/><text x="38.4079%" y="703.50">my-solution..</text></g><g><title>my-solutions.exe`rudvent_lib::solution::StructSolution&lt;my_solutions::days::day_8::Map,usize,my_solutions::days::day_8::Map,usize,tuple$&lt;&gt;,rudvent_lib::solution::execution::EmptyUserMonitor&gt;::run_part_1 (6 samples, 7.89%)</title><rect x="38.1579%" y="677" width="7.8947%" height="15" fill="rgb(209,217,16)" fg:x="29" fg:w="6"/><text x="38.4079%" y="687.50">my-solution..</text></g><g><title>my-solutions.exe`my_solutions::days::day_8::prepare (3 samples, 3.95%)</title><rect x="42.1053%" y="661" width="3.9474%" height="15" fill="rgb(219,88,35)" fg:x="32" fg:w="3"/><text x="42.3553%" y="671.50">my-s..</text></g><g><title>my-solutions.exe`core::iter::traits::iterator::Iterator::collect(core::iter::adapters::map::Map (3 samples, 3.95%)</title><rect x="42.1053%" y="645" width="3.9474%" height="15" fill="rgb(220,193,23)" fg:x="32" fg:w="3"/><text x="42.3553%" y="655.50">my-s..</text></g><g><title>my-solutions.exe`std::collections::hash::map::impl$79::from_iter(core::iter::adapters::map::Map (3 samples, 3.95%)</title><rect x="42.1053%" y="629" width="3.9474%" height="15" fill="rgb(230,90,52)" fg:x="32" fg:w="3"/><text x="42.3553%" y="639.50">my-s..</text></g><g><title>my-solutions.exe`core::iter::adapters::map::impl$2::fold&lt;tuple$&lt;tuple$&lt;u32,u32,u32&gt;,tuple$&lt;tuple$&lt;u32,u32,u32&gt;,tuple$&lt;u32,u32,u32&gt; &gt; &gt;,core::str::iter::Lines,my_solutions::days::day_8::prepare::closure_env$0,tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;tuple$&lt;tuple$&lt;u32,u32,u32&gt;,tuple$&lt;tuple$&lt;u32,u32,u32&gt;,tuple$&lt;u32,u32,u32&gt; &gt; &gt;,hashbrown::map::impl$95::extend::closure_env$0&lt;tuple$&lt;u32,u32,u32&gt;,tuple$&lt;tuple$&lt;u32,u32,u32&gt;,tuple$&lt;u32,u32,u32&gt; &gt;,std::collections::hash::map::RandomState,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::str::iter::Lines,my_solutions::days::day_8::prepare::closure_env$0&gt; &gt; &gt; &gt;(core::iter::adapters::map::Map&lt;core::str::iter::Lines,my_solutions::days::day_8::prepare::closure_env$0&gt;, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;tuple$&lt;tuple$&lt;u32,u32,u32&gt;,tuple$&lt;tuple$&lt;u32,u32,u32&gt;,tuple$&lt;u32,u32,u32&gt; &gt; &gt;,hashbrown::map::impl$95::extend::closure_env$0&lt;tuple$&lt;u32,u32,u32&gt;,tuple$&lt;tuple$&lt;u32,u32,u32&gt;,tuple$&lt;u32,u32,u32&gt; &gt;,std::collections::hash::map::RandomState,alloc::alloc::Global,core::iter::adapters::map::Map (3 samples, 3.95%)</title><rect x="42.1053%" y="613" width="3.9474%" height="15" fill="rgb(252,106,19)" fg:x="32" fg:w="3"/><text x="42.3553%" y="623.50">my-s..</text></g><g><title>my-solutions.exe`core::iter::traits::iterator::Iterator::fold(core::str::iter::Lines, tuple$&lt;&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;tuple$&lt;u32,u32,u32&gt;,tuple$&lt;tuple$&lt;u32,u32,u32&gt;,tuple$&lt;u32,u32,u32&gt; &gt; &gt;,tuple$&lt;&gt;,my_solutions::days::day_8::prepare::closure_env$0,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;tuple$&lt;tuple$&lt;u32,u32,u32&gt;,tuple$&lt;tuple$&lt;u32,u32,u32&gt;,tuple$&lt;u32,u32,u32&gt; &gt; &gt;,hashbrown::map::impl$95::extend::closure_env$0&lt;tuple$&lt;u32,u32,u32&gt;,tuple$&lt;tuple$&lt;u32,u32,u32&gt;,tuple$&lt;u32,u32,u32&gt; &gt;,std::collections::hash::map::RandomState,alloc::alloc::Global,core::iter::adapters::map::Map (3 samples, 3.95%)</title><rect x="42.1053%" y="597" width="3.9474%" height="15" fill="rgb(206,74,20)" fg:x="32" fg:w="3"/><text x="42.3553%" y="607.50">my-s..</text></g><g><title>my-solutions.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;tuple$&lt;u32,u32,u32&gt;,tuple$&lt;tuple$&lt;u32,u32,u32&gt;,tuple$&lt;u32,u32,u32&gt; &gt; &gt;,tuple$&lt;&gt;,my_solutions::days::day_8::prepare::closure_env$0,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;tuple$&lt;tuple$&lt;u32,u32,u32&gt;,tuple$&lt;tuple$&lt;u32,u32,u32&gt;,tuple$&lt;u32,u32,u32&gt; &gt; &gt;,hashbrown::map::impl$95::extend::closure_env$0&lt;tuple$&lt;u32,u32,u32&gt;,tuple$&lt;tuple$&lt;u32,u32,u32&gt;,tuple$&lt;u32,u32,u32&gt; &gt;,std::collections::hash::map::RandomState,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::str::iter::Lines,my_solutions::days::day_8::prepare::closure_env$0&gt; &gt; &gt; &gt;*, tuple$&lt;&gt;, ref$ (3 samples, 3.95%)</title><rect x="42.1053%" y="581" width="3.9474%" height="15" fill="rgb(230,138,44)" fg:x="32" fg:w="3"/><text x="42.3553%" y="591.50">my-s..</text></g><g><title>my-solutions.exe`my_solutions::days::day_8::prepare::closure$0(my_solutions::days::day_8::prepare::closure_env$0*, ref$ (2 samples, 2.63%)</title><rect x="43.4211%" y="565" width="2.6316%" height="15" fill="rgb(235,182,43)" fg:x="33" fg:w="2"/><text x="43.6711%" y="575.50">my..</text></g><g><title>my-solutions.exe`alloc::str::impl$5::replace(ref$&lt;str$&gt;, ref$&lt;str$&gt;, ref$ (2 samples, 2.63%)</title><rect x="43.4211%" y="549" width="2.6316%" height="15" fill="rgb(242,16,51)" fg:x="33" fg:w="2"/><text x="43.6711%" y="559.50">my..</text></g><g><title>my-solutions.exe`core::str::iter::impl$90::next(core::str::iter::MatchIndices&lt;ref$ (1 samples, 1.32%)</title><rect x="44.7368%" y="533" width="1.3158%" height="15" fill="rgb(248,9,4)" fg:x="34" fg:w="1"/><text x="44.9868%" y="543.50"></text></g><g><title>my-solutions.exe`core::str::iter::MatchIndicesInternal&lt;ref$&lt;str$&gt; &gt;::next (1 samples, 1.32%)</title><rect x="44.7368%" y="517" width="1.3158%" height="15" fill="rgb(210,31,22)" fg:x="34" fg:w="1"/><text x="44.9868%" y="527.50"></text></g><g><title>my-solutions.exe`enum2$&lt;core::option::Option&lt;tuple$&lt;usize,usize&gt; &gt; &gt;::map(enum2$&lt;core::option::Option&lt;tuple$&lt;usize,usize&gt; &gt; &gt;, core::str::iter::impl$27::next::closure_env$0&lt;ref$ (1 samples, 1.32%)</title><rect x="44.7368%" y="501" width="1.3158%" height="15" fill="rgb(239,54,39)" fg:x="34" fg:w="1"/><text x="44.9868%" y="511.50"></text></g><g><title>my-solutions.exe`core::str::pattern::impl$30::next_match (1 samples, 1.32%)</title><rect x="44.7368%" y="485" width="1.3158%" height="15" fill="rgb(230,99,41)" fg:x="34" fg:w="1"/><text x="44.9868%" y="495.50"></text></g><g><title>my-solutions.exe`core::str::pattern::TwoWaySearcher::next&lt;enum2$&lt;core::str::pattern::MatchOnly&gt; &gt;(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (1 samples, 1.32%)</title><rect x="44.7368%" y="469" width="1.3158%" height="15" fill="rgb(253,106,12)" fg:x="34" fg:w="1"/><text x="44.9868%" y="479.50"></text></g><g><title>my-solutions.exe`clap_builder::builder::command::Command::get_matches (1 samples, 1.32%)</title><rect x="46.0526%" y="677" width="1.3158%" height="15" fill="rgb(213,46,41)" fg:x="35" fg:w="1"/><text x="46.3026%" y="687.50"></text></g><g><title>my-solutions.exe`clap_builder::builder::command::Command::get_matches_from (1 samples, 1.32%)</title><rect x="46.0526%" y="661" width="1.3158%" height="15" fill="rgb(215,133,35)" fg:x="35" fg:w="1"/><text x="46.3026%" y="671.50"></text></g><g><title>my-solutions.exe`clap_builder::builder::command::Command::try_get_matches_from_mut (1 samples, 1.32%)</title><rect x="46.0526%" y="645" width="1.3158%" height="15" fill="rgb(213,28,5)" fg:x="35" fg:w="1"/><text x="46.3026%" y="655.50"></text></g><g><title>my-solutions.exe`core::ptr::drop_in_place (1 samples, 1.32%)</title><rect x="46.0526%" y="629" width="1.3158%" height="15" fill="rgb(215,77,49)" fg:x="35" fg:w="1"/><text x="46.3026%" y="639.50"></text></g><g><title>my-solutions.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 1.32%)</title><rect x="46.0526%" y="613" width="1.3158%" height="15" fill="rgb(248,100,22)" fg:x="35" fg:w="1"/><text x="46.3026%" y="623.50"></text></g><g><title>my-solutions.exe`alloc::vec::impl$24::drop(alloc::vec::Vec (1 samples, 1.32%)</title><rect x="46.0526%" y="597" width="1.3158%" height="15" fill="rgb(208,67,9)" fg:x="35" fg:w="1"/><text x="46.3026%" y="607.50"></text></g><g><title>my-solutions.exe`clap_builder::builder::command::Command::_do_parse (1 samples, 1.32%)</title><rect x="46.0526%" y="581" width="1.3158%" height="15" fill="rgb(219,133,21)" fg:x="35" fg:w="1"/><text x="46.3026%" y="591.50"></text></g><g><title>my-solutions.exe`clap_builder::parser::parser::Parser::get_matches_with (1 samples, 1.32%)</title><rect x="46.0526%" y="565" width="1.3158%" height="15" fill="rgb(246,46,29)" fg:x="35" fg:w="1"/><text x="46.3026%" y="575.50"></text></g><g><title>my-solutions.exe`clap_builder::parser::parser::Parser::parse_subcommand(ref$ (1 samples, 1.32%)</title><rect x="46.0526%" y="549" width="1.3158%" height="15" fill="rgb(246,185,52)" fg:x="35" fg:w="1"/><text x="46.3026%" y="559.50"></text></g><g><title>my-solutions.exe`clap_builder::parser::parser::Parser::get_matches_with (1 samples, 1.32%)</title><rect x="46.0526%" y="533" width="1.3158%" height="15" fill="rgb(252,136,11)" fg:x="35" fg:w="1"/><text x="46.3026%" y="543.50"></text></g><g><title>my-solutions.exe`clap_builder::parser::parser::Parser::parse_short_arg(clap_builder::parser::arg_matcher::ArgMatcher*, clap_lex::ShortFlags, enum2$ (1 samples, 1.32%)</title><rect x="46.0526%" y="517" width="1.3158%" height="15" fill="rgb(219,138,53)" fg:x="35" fg:w="1"/><text x="46.3026%" y="527.50"></text></g><g><title>my-solutions.exe`clap_builder::parser::parser::Parser::react(enum2$&lt;core::option::Option&lt;clap_builder::parser::parser::Identifier&gt; &gt;, clap_builder::parser::matches::value_source::ValueSource, clap_builder::builder::arg::Arg*, alloc::vec::Vec&lt;std::ffi::os_str::OsString,alloc::alloc::Global&gt;, enum2$&lt;core::option::Option (1 samples, 1.32%)</title><rect x="46.0526%" y="501" width="1.3158%" height="15" fill="rgb(211,51,23)" fg:x="35" fg:w="1"/><text x="46.3026%" y="511.50"></text></g><g><title>my-solutions.exe`clap_builder::parser::parser::Parser::push_arg_values(clap_builder::builder::arg::Arg*, alloc::vec::Vec (1 samples, 1.32%)</title><rect x="46.0526%" y="485" width="1.3158%" height="15" fill="rgb(247,221,28)" fg:x="35" fg:w="1"/><text x="46.3026%" y="495.50"></text></g><g><title>my-solutions.exe`core::cell::Cell&lt;usize&gt;::get (1 samples, 1.32%)</title><rect x="46.0526%" y="469" width="1.3158%" height="15" fill="rgb(251,222,45)" fg:x="35" fg:w="1"/><text x="46.3026%" y="479.50"></text></g><g><title>my-solutions.exe`clap_builder::parser::arg_matcher::ArgMatcher::add_val_to (1 samples, 1.32%)</title><rect x="46.0526%" y="453" width="1.3158%" height="15" fill="rgb(217,162,53)" fg:x="35" fg:w="1"/><text x="46.3026%" y="463.50"></text></g><g><title>my-solutions.exe`clap_builder::parser::matches::matched_arg::MatchedArg::append_val (1 samples, 1.32%)</title><rect x="46.0526%" y="437" width="1.3158%" height="15" fill="rgb(229,93,14)" fg:x="35" fg:w="1"/><text x="46.3026%" y="447.50"></text></g><g><title>my-solutions.exe`alloc::vec::Vec&lt;clap_builder::util::any_value::AnyValue,alloc::alloc::Global&gt;::push (1 samples, 1.32%)</title><rect x="46.0526%" y="421" width="1.3158%" height="15" fill="rgb(209,67,49)" fg:x="35" fg:w="1"/><text x="46.3026%" y="431.50"></text></g><g><title>my-solutions.exe`alloc::raw_vec::RawVec&lt;my_solutions::days::day_3::Number,alloc::alloc::Global&gt;::reserve_for_push&lt;my_solutions::days::day_3::Number,alloc::alloc::Global&gt; (1 samples, 1.32%)</title><rect x="46.0526%" y="405" width="1.3158%" height="15" fill="rgb(213,87,29)" fg:x="35" fg:w="1"/><text x="46.3026%" y="415.50"></text></g><g><title>my-solutions.exe`alloc::raw_vec::RawVec&lt;my_solutions::days::day_3::Number,alloc::alloc::Global&gt;::grow_amortized (1 samples, 1.32%)</title><rect x="46.0526%" y="389" width="1.3158%" height="15" fill="rgb(205,151,52)" fg:x="35" fg:w="1"/><text x="46.3026%" y="399.50"></text></g><g><title>my-solutions.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 1.32%)</title><rect x="46.0526%" y="373" width="1.3158%" height="15" fill="rgb(253,215,39)" fg:x="35" fg:w="1"/><text x="46.3026%" y="383.50"></text></g><g><title>my-solutions.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(enum2$&lt;core::result::Result&lt;core::alloc::layout::Layout,core::alloc::layout::LayoutError&gt; &gt;, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 1.32%)</title><rect x="46.0526%" y="357" width="1.3158%" height="15" fill="rgb(221,220,41)" fg:x="35" fg:w="1"/><text x="46.3026%" y="367.50"></text></g><g><title>my-solutions.exe`enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;, alloc::raw_vec::finish_grow::closure_env$1 (1 samples, 1.32%)</title><rect x="46.0526%" y="341" width="1.3158%" height="15" fill="rgb(218,133,21)" fg:x="35" fg:w="1"/><text x="46.3026%" y="351.50"></text></g><g><title>`0x7FFB8095B44D (1 samples, 1.32%)</title><rect x="46.0526%" y="325" width="1.3158%" height="15" fill="rgb(221,193,43)" fg:x="35" fg:w="1"/><text x="46.3026%" y="335.50"></text></g><g><title>`0x7FFB8095D9F7 (1 samples, 1.32%)</title><rect x="46.0526%" y="309" width="1.3158%" height="15" fill="rgb(240,128,52)" fg:x="35" fg:w="1"/><text x="46.3026%" y="319.50"></text></g><g><title>my-solutions.exe`clap_verbosity_flag::Verbosity&lt;clap_verbosity_flag::ErrorLevel&gt;::log_level_filter (2 samples, 2.63%)</title><rect x="46.0526%" y="725" width="2.6316%" height="15" fill="rgb(253,114,12)" fg:x="35" fg:w="2"/><text x="46.3026%" y="735.50">my..</text></g><g><title>my-solutions.exe`clap_verbosity_flag::Verbosity&lt;clap_verbosity_flag::ErrorLevel&gt;::verbosity (2 samples, 2.63%)</title><rect x="46.0526%" y="709" width="2.6316%" height="15" fill="rgb(215,223,47)" fg:x="35" fg:w="2"/><text x="46.3026%" y="719.50">my..</text></g><g><title>my-solutions.exe`clap_builder::derive::Parser::parse&lt;rudvent_lib::cli::Cli&gt; (2 samples, 2.63%)</title><rect x="46.0526%" y="693" width="2.6316%" height="15" fill="rgb(248,225,23)" fg:x="35" fg:w="2"/><text x="46.3026%" y="703.50">my..</text></g><g><title>my-solutions.exe`rudvent_lib::cli::impl$2::command (1 samples, 1.32%)</title><rect x="47.3684%" y="677" width="1.3158%" height="15" fill="rgb(250,108,0)" fg:x="36" fg:w="1"/><text x="47.6184%" y="687.50"></text></g><g><title>my-solutions.exe`rudvent_lib::cli::impl$4::augment_args (1 samples, 1.32%)</title><rect x="47.3684%" y="661" width="1.3158%" height="15" fill="rgb(228,208,7)" fg:x="36" fg:w="1"/><text x="47.6184%" y="671.50"></text></g><g><title>my-solutions.exe`rudvent_lib::cli::impl$10::augment_subcommands (1 samples, 1.32%)</title><rect x="47.3684%" y="645" width="1.3158%" height="15" fill="rgb(244,45,10)" fg:x="36" fg:w="1"/><text x="47.6184%" y="655.50"></text></g><g><title>my-solutions.exe`clap_builder::builder::command::Command::trailing_var_arg (1 samples, 1.32%)</title><rect x="47.3684%" y="629" width="1.3158%" height="15" fill="rgb(207,125,25)" fg:x="36" fg:w="1"/><text x="47.6184%" y="639.50"></text></g><g><title>my-solutions.exe`dotenvy::iter::Iter&lt;std::fs::File&gt;::load&lt;std::fs::File&gt;(dotenvy::iter::Iter (1 samples, 1.32%)</title><rect x="48.6842%" y="725" width="1.3158%" height="15" fill="rgb(210,195,18)" fg:x="37" fg:w="1"/><text x="48.9342%" y="735.50"></text></g><g><title>my-solutions.exe`dotenvy::iter::impl$2::next(dotenvy::iter::Iter (1 samples, 1.32%)</title><rect x="48.6842%" y="709" width="1.3158%" height="15" fill="rgb(249,80,12)" fg:x="37" fg:w="1"/><text x="48.9342%" y="719.50"></text></g><g><title>my-solutions.exe`dotenvy::parse::parse_line(ref$&lt;str$&gt;, std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;core::option::Option (1 samples, 1.32%)</title><rect x="48.6842%" y="693" width="1.3158%" height="15" fill="rgb(221,65,9)" fg:x="37" fg:w="1"/><text x="48.9342%" y="703.50"></text></g><g><title>my-solutions.exe`dotenvy::parse::LineParser::parse_line (1 samples, 1.32%)</title><rect x="48.6842%" y="677" width="1.3158%" height="15" fill="rgb(235,49,36)" fg:x="37" fg:w="1"/><text x="48.9342%" y="687.50"></text></g><g><title>my-solutions.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option&lt;enum2$&lt;core::option::Option (1 samples, 1.32%)</title><rect x="48.6842%" y="661" width="1.3158%" height="15" fill="rgb(225,32,20)" fg:x="37" fg:w="1"/><text x="48.9342%" y="671.50"></text></g><g><title>my-solutions.exe`hashbrown::map::HashMap&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt;,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::insert&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt;,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;(alloc::string::String, enum2$&lt;core::option::Option (1 samples, 1.32%)</title><rect x="48.6842%" y="645" width="1.3158%" height="15" fill="rgb(215,141,46)" fg:x="37" fg:w="1"/><text x="48.9342%" y="655.50"></text></g><g><title>my-solutions.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt; &gt;,alloc::alloc::Global&gt;::find_or_find_insert_slot(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;alloc::string::String,alloc::string::String,enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt; &gt;, hashbrown::map::make_hasher::closure_env$0&lt;alloc::string::String,enum2$&lt;core::option::Option (1 samples, 1.32%)</title><rect x="48.6842%" y="629" width="1.3158%" height="15" fill="rgb(250,160,47)" fg:x="37" fg:w="1"/><text x="48.9342%" y="639.50"></text></g><g><title>my-solutions.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt; &gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt;,std::collections::hash::map::RandomState&gt; &gt;(unsigned long long, hashbrown::map::make_hasher::closure_env$0&lt;alloc::string::String,enum2$&lt;core::option::Option (1 samples, 1.32%)</title><rect x="48.6842%" y="613" width="1.3158%" height="15" fill="rgb(216,222,40)" fg:x="37" fg:w="1"/><text x="48.9342%" y="623.50"></text></g><g><title>my-solutions.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::reserve_rehash_inner(unsigned long long, ref$&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;ref_mut$&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt; &gt;,usize&gt;,assoc$&lt;Output,u64&gt; &gt; &gt; &gt;, hashbrown::raw::Fallibility, hashbrown::raw::TableLayout, enum2$&lt;core::option::Option&lt;void (*)(ptr_mut$ (1 samples, 1.32%)</title><rect x="48.6842%" y="597" width="1.3158%" height="15" fill="rgb(234,217,39)" fg:x="37" fg:w="1"/><text x="48.9342%" y="607.50"></text></g><g><title>my-solutions.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::resize_inner(unsigned long long, ref$&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;ref_mut$&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt; &gt;,usize&gt;,assoc$ (1 samples, 1.32%)</title><rect x="48.6842%" y="581" width="1.3158%" height="15" fill="rgb(207,178,40)" fg:x="37" fg:w="1"/><text x="48.9342%" y="591.50"></text></g><g><title>my-solutions.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::is_bucket_full (1 samples, 1.32%)</title><rect x="48.6842%" y="565" width="1.3158%" height="15" fill="rgb(221,136,13)" fg:x="37" fg:w="1"/><text x="48.9342%" y="575.50"></text></g><g><title>my-solutions.exe`hashbrown::raw::is_full (1 samples, 1.32%)</title><rect x="48.6842%" y="549" width="1.3158%" height="15" fill="rgb(249,199,10)" fg:x="37" fg:w="1"/><text x="48.9342%" y="559.50"></text></g><g><title>my-solutions.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$ (1 samples, 1.32%)</title><rect x="50.0000%" y="597" width="1.3158%" height="15" fill="rgb(249,222,13)" fg:x="38" fg:w="1"/><text x="50.2500%" y="607.50"></text></g><g><title>my-solutions.exe`dotenvy::iter::Iter&lt;std::fs::File&gt;::load&lt;std::fs::File&gt;(dotenvy::iter::Iter (1 samples, 1.32%)</title><rect x="50.0000%" y="581" width="1.3158%" height="15" fill="rgb(244,185,38)" fg:x="38" fg:w="1"/><text x="50.2500%" y="591.50"></text></g><g><title>my-solutions.exe`dotenvy::iter::Iter&lt;std::fs::File&gt;::remove_bom (1 samples, 1.32%)</title><rect x="50.0000%" y="565" width="1.3158%" height="15" fill="rgb(236,202,9)" fg:x="38" fg:w="1"/><text x="50.2500%" y="575.50"></text></g><g><title>my-solutions.exe`std::io::buffered::bufreader::impl$4::fill_buf(std::io::buffered::bufreader::BufReader (1 samples, 1.32%)</title><rect x="50.0000%" y="549" width="1.3158%" height="15" fill="rgb(250,229,37)" fg:x="38" fg:w="1"/><text x="50.2500%" y="559.50"></text></g><g><title>my-solutions.exe`std::io::buffered::bufreader::buffer::Buffer::fill_buf (1 samples, 1.32%)</title><rect x="50.0000%" y="533" width="1.3158%" height="15" fill="rgb(206,174,23)" fg:x="38" fg:w="1"/><text x="50.2500%" y="543.50"></text></g><g><title>my-solutions.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$ (1 samples, 1.32%)</title><rect x="50.0000%" y="517" width="1.3158%" height="15" fill="rgb(211,33,43)" fg:x="38" fg:w="1"/><text x="50.2500%" y="527.50"></text></g><g><title>my-solutions.exe`std::sys::windows::handle::Handle::read_buf (1 samples, 1.32%)</title><rect x="50.0000%" y="501" width="1.3158%" height="15" fill="rgb(245,58,50)" fg:x="38" fg:w="1"/><text x="50.2500%" y="511.50"></text></g><g><title>my-solutions.exe`std::sys::windows::handle::Handle::synchronous_read (1 samples, 1.32%)</title><rect x="50.0000%" y="485" width="1.3158%" height="15" fill="rgb(244,68,36)" fg:x="38" fg:w="1"/><text x="50.2500%" y="495.50"></text></g><g><title>`0x7FFB809CD0A4 (1 samples, 1.32%)</title><rect x="50.0000%" y="469" width="1.3158%" height="15" fill="rgb(232,229,15)" fg:x="38" fg:w="1"/><text x="50.2500%" y="479.50"></text></g><g><title>`0x7FFB7E135964 (1 samples, 1.32%)</title><rect x="51.3158%" y="421" width="1.3158%" height="15" fill="rgb(254,30,23)" fg:x="39" fg:w="1"/><text x="51.5658%" y="431.50"></text></g><g><title>`0x7FFB7E1351DE (1 samples, 1.32%)</title><rect x="51.3158%" y="405" width="1.3158%" height="15" fill="rgb(235,160,14)" fg:x="39" fg:w="1"/><text x="51.5658%" y="415.50"></text></g><g><title>`0x7FFB7E134F88 (1 samples, 1.32%)</title><rect x="51.3158%" y="389" width="1.3158%" height="15" fill="rgb(212,155,44)" fg:x="39" fg:w="1"/><text x="51.5658%" y="399.50"></text></g><g><title>`0x7FFB7E136F25 (1 samples, 1.32%)</title><rect x="51.3158%" y="373" width="1.3158%" height="15" fill="rgb(226,2,50)" fg:x="39" fg:w="1"/><text x="51.5658%" y="383.50"></text></g><g><title>`0x7FFB809CD0C4 (1 samples, 1.32%)</title><rect x="51.3158%" y="357" width="1.3158%" height="15" fill="rgb(234,177,6)" fg:x="39" fg:w="1"/><text x="51.5658%" y="367.50"></text></g><g><title>my-solutions.exe`dotenvy::iter::Iter&lt;std::fs::File&gt;::new&lt;std::fs::File&gt; (2 samples, 2.63%)</title><rect x="51.3158%" y="565" width="2.6316%" height="15" fill="rgb(217,24,9)" fg:x="39" fg:w="2"/><text x="51.5658%" y="575.50">my..</text></g><g><title>my-solutions.exe`std::sys::common::thread_local::fast_local::Key&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::try_initialize&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt;,std::collections::hash::map::impl$82::new::KEYS::__getit::closure_env$0&gt; (2 samples, 2.63%)</title><rect x="51.3158%" y="549" width="2.6316%" height="15" fill="rgb(220,13,46)" fg:x="39" fg:w="2"/><text x="51.5658%" y="559.50">my..</text></g><g><title>my-solutions.exe`std::sys::common::thread_local::lazy::LazyKeyInner&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::initialize (2 samples, 2.63%)</title><rect x="51.3158%" y="533" width="2.6316%" height="15" fill="rgb(239,221,27)" fg:x="39" fg:w="2"/><text x="51.5658%" y="543.50">my..</text></g><g><title>my-solutions.exe`core::mem::replace(enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$ (2 samples, 2.63%)</title><rect x="51.3158%" y="517" width="2.6316%" height="15" fill="rgb(222,198,25)" fg:x="39" fg:w="2"/><text x="51.5658%" y="527.50">my..</text></g><g><title>my-solutions.exe`core::ptr::write(enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$ (2 samples, 2.63%)</title><rect x="51.3158%" y="501" width="2.6316%" height="15" fill="rgb(211,99,13)" fg:x="39" fg:w="2"/><text x="51.5658%" y="511.50">my..</text></g><g><title>my-solutions.exe`std::sys::windows::rand::hashmap_random_keys (2 samples, 2.63%)</title><rect x="51.3158%" y="485" width="2.6316%" height="15" fill="rgb(232,111,31)" fg:x="39" fg:w="2"/><text x="51.5658%" y="495.50">my..</text></g><g><title>my-solutions.exe`std::sys::windows::c::nt_success (2 samples, 2.63%)</title><rect x="51.3158%" y="469" width="2.6316%" height="15" fill="rgb(245,82,37)" fg:x="39" fg:w="2"/><text x="51.5658%" y="479.50">my..</text></g><g><title>`0x7FFB7E133559 (2 samples, 2.63%)</title><rect x="51.3158%" y="453" width="2.6316%" height="15" fill="rgb(227,149,46)" fg:x="39" fg:w="2"/><text x="51.5658%" y="463.50">`0..</text></g><g><title>`0x7FFB7E133642 (2 samples, 2.63%)</title><rect x="51.3158%" y="437" width="2.6316%" height="15" fill="rgb(218,36,50)" fg:x="39" fg:w="2"/><text x="51.5658%" y="447.50">`0..</text></g><g><title>`0x7FFB7E136435 (1 samples, 1.32%)</title><rect x="52.6316%" y="421" width="1.3158%" height="15" fill="rgb(226,80,48)" fg:x="40" fg:w="1"/><text x="52.8816%" y="431.50"></text></g><g><title>`0x7FFB7E131E98 (1 samples, 1.32%)</title><rect x="52.6316%" y="405" width="1.3158%" height="15" fill="rgb(238,224,15)" fg:x="40" fg:w="1"/><text x="52.8816%" y="415.50"></text></g><g><title>`0x7FFB7E132199 (1 samples, 1.32%)</title><rect x="52.6316%" y="389" width="1.3158%" height="15" fill="rgb(241,136,10)" fg:x="40" fg:w="1"/><text x="52.8816%" y="399.50"></text></g><g><title>`0x7FFB7E2856B2 (1 samples, 1.32%)</title><rect x="52.6316%" y="373" width="1.3158%" height="15" fill="rgb(208,32,45)" fg:x="40" fg:w="1"/><text x="52.8816%" y="383.50"></text></g><g><title>`0x7FFB80946AF4 (1 samples, 1.32%)</title><rect x="52.6316%" y="357" width="1.3158%" height="15" fill="rgb(207,135,9)" fg:x="40" fg:w="1"/><text x="52.8816%" y="367.50"></text></g><g><title>`0x7FFB809473E4 (1 samples, 1.32%)</title><rect x="52.6316%" y="341" width="1.3158%" height="15" fill="rgb(206,86,44)" fg:x="40" fg:w="1"/><text x="52.8816%" y="351.50"></text></g><g><title>`0x7FFB8094FBAE (1 samples, 1.32%)</title><rect x="52.6316%" y="325" width="1.3158%" height="15" fill="rgb(245,177,15)" fg:x="40" fg:w="1"/><text x="52.8816%" y="335.50"></text></g><g><title>`0x7FFB8096D947 (1 samples, 1.32%)</title><rect x="52.6316%" y="309" width="1.3158%" height="15" fill="rgb(206,64,50)" fg:x="40" fg:w="1"/><text x="52.8816%" y="319.50"></text></g><g><title>`0x7FFB8099C05A (1 samples, 1.32%)</title><rect x="52.6316%" y="293" width="1.3158%" height="15" fill="rgb(234,36,40)" fg:x="40" fg:w="1"/><text x="52.8816%" y="303.50"></text></g><g><title>`0x7FFB8099C2C7 (1 samples, 1.32%)</title><rect x="52.6316%" y="277" width="1.3158%" height="15" fill="rgb(213,64,8)" fg:x="40" fg:w="1"/><text x="52.8816%" y="287.50"></text></g><g><title>`0x7FFB80949A1D (1 samples, 1.32%)</title><rect x="52.6316%" y="261" width="1.3158%" height="15" fill="rgb(210,75,36)" fg:x="40" fg:w="1"/><text x="52.8816%" y="271.50"></text></g><g><title>`0x7FFB7E0D8C59 (1 samples, 1.32%)</title><rect x="52.6316%" y="245" width="1.3158%" height="15" fill="rgb(229,88,21)" fg:x="40" fg:w="1"/><text x="52.8816%" y="255.50"></text></g><g><title>`0x7FFB7E0BF96D (1 samples, 1.32%)</title><rect x="52.6316%" y="229" width="1.3158%" height="15" fill="rgb(252,204,47)" fg:x="40" fg:w="1"/><text x="52.8816%" y="239.50"></text></g><g><title>`0x7FFB80972AAA (1 samples, 1.32%)</title><rect x="52.6316%" y="213" width="1.3158%" height="15" fill="rgb(208,77,27)" fg:x="40" fg:w="1"/><text x="52.8816%" y="223.50"></text></g><g><title>`0x7FFB809730E5 (1 samples, 1.32%)</title><rect x="52.6316%" y="197" width="1.3158%" height="15" fill="rgb(221,76,26)" fg:x="40" fg:w="1"/><text x="52.8816%" y="207.50"></text></g><g><title>`0x7FFB80972F86 (1 samples, 1.32%)</title><rect x="52.6316%" y="181" width="1.3158%" height="15" fill="rgb(225,139,18)" fg:x="40" fg:w="1"/><text x="52.8816%" y="191.50"></text></g><g><title>`0x7FFB809D0874 (1 samples, 1.32%)</title><rect x="52.6316%" y="165" width="1.3158%" height="15" fill="rgb(230,137,11)" fg:x="40" fg:w="1"/><text x="52.8816%" y="175.50"></text></g><g><title>my-solutions.exe`dotenvy::var(ref$ (4 samples, 5.26%)</title><rect x="50.0000%" y="725" width="5.2632%" height="15" fill="rgb(212,28,1)" fg:x="38" fg:w="4"/><text x="50.2500%" y="735.50">my-sol..</text></g><g><title>my-solutions.exe`std::env::var(ref$ (4 samples, 5.26%)</title><rect x="50.0000%" y="709" width="5.2632%" height="15" fill="rgb(248,164,17)" fg:x="38" fg:w="4"/><text x="50.2500%" y="719.50">my-sol..</text></g><g><title>my-solutions.exe`std::sys_common::once::queue::Once::call (4 samples, 5.26%)</title><rect x="50.0000%" y="693" width="5.2632%" height="15" fill="rgb(222,171,42)" fg:x="38" fg:w="4"/><text x="50.2500%" y="703.50">my-sol..</text></g><g><title>my-solutions.exe`core::cell::Cell::get (4 samples, 5.26%)</title><rect x="50.0000%" y="677" width="5.2632%" height="15" fill="rgb(243,84,45)" fg:x="38" fg:w="4"/><text x="50.2500%" y="687.50">my-sol..</text></g><g><title>my-solutions.exe`std::sync::once::impl$2::call_once::closure$0&lt;dotenvy::var::closure_env$0&lt;ref$&lt;str$&gt; &gt; &gt;(std::sync::once::impl$2::call_once::closure_env$0&lt;dotenvy::var::closure_env$0&lt;ref$ (4 samples, 5.26%)</title><rect x="50.0000%" y="661" width="5.2632%" height="15" fill="rgb(252,49,23)" fg:x="38" fg:w="4"/><text x="50.2500%" y="671.50">my-sol..</text></g><g><title>my-solutions.exe`dotenvy::var::closure$0(dotenvy::var::closure_env$0&lt;ref$ (4 samples, 5.26%)</title><rect x="50.0000%" y="645" width="5.2632%" height="15" fill="rgb(215,19,7)" fg:x="38" fg:w="4"/><text x="50.2500%" y="655.50">my-sol..</text></g><g><title>my-solutions.exe`enum2$&lt;core::result::Result&lt;std::path::PathBuf,enum2$&lt;dotenvy::errors::Error&gt; &gt; &gt;::ok(enum2$&lt;core::result::Result&lt;std::path::PathBuf,enum2$ (4 samples, 5.26%)</title><rect x="50.0000%" y="629" width="5.2632%" height="15" fill="rgb(238,81,41)" fg:x="38" fg:w="4"/><text x="50.2500%" y="639.50">my-sol..</text></g><g><title>my-solutions.exe`dotenvy::dotenv (4 samples, 5.26%)</title><rect x="50.0000%" y="613" width="5.2632%" height="15" fill="rgb(210,199,37)" fg:x="38" fg:w="4"/><text x="50.2500%" y="623.50">my-sol..</text></g><g><title>my-solutions.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$&lt;std::path::PathBuf,dotenvy::iter::Iter&lt;std::fs::File&gt; &gt;,enum2$ (3 samples, 3.95%)</title><rect x="51.3158%" y="597" width="3.9474%" height="15" fill="rgb(244,192,49)" fg:x="39" fg:w="3"/><text x="51.5658%" y="607.50">my-s..</text></g><g><title>my-solutions.exe`dotenvy::find::Finder::find (3 samples, 3.95%)</title><rect x="51.3158%" y="581" width="3.9474%" height="15" fill="rgb(226,211,11)" fg:x="39" fg:w="3"/><text x="51.5658%" y="591.50">my-s..</text></g><g><title>my-solutions.exe`enum2$&lt;core::result::Result&lt;std::fs::File,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;std::fs::File,std::io::error::Error&gt; &gt;, enum2$&lt;dotenvy::errors::Error&gt; (*) (1 samples, 1.32%)</title><rect x="53.9474%" y="565" width="1.3158%" height="15" fill="rgb(236,162,54)" fg:x="41" fg:w="1"/><text x="54.1974%" y="575.50"></text></g><g><title>my-solutions.exe`std::sys::windows::fs::File::open (1 samples, 1.32%)</title><rect x="53.9474%" y="549" width="1.3158%" height="15" fill="rgb(220,229,9)" fg:x="41" fg:w="1"/><text x="54.1974%" y="559.50"></text></g><g><title>my-solutions.exe`core::convert::impl$6::try_into (1 samples, 1.32%)</title><rect x="53.9474%" y="533" width="1.3158%" height="15" fill="rgb(250,87,22)" fg:x="41" fg:w="1"/><text x="54.1974%" y="543.50"></text></g><g><title>my-solutions.exe`std::os::windows::io::handle::impl$12::try_from (1 samples, 1.32%)</title><rect x="53.9474%" y="517" width="1.3158%" height="15" fill="rgb(239,43,17)" fg:x="41" fg:w="1"/><text x="54.1974%" y="527.50"></text></g><g><title>`0x7FFB7E285FE6 (1 samples, 1.32%)</title><rect x="53.9474%" y="501" width="1.3158%" height="15" fill="rgb(231,177,25)" fg:x="41" fg:w="1"/><text x="54.1974%" y="511.50"></text></g><g><title>`0x7FFB7E2865FB (1 samples, 1.32%)</title><rect x="53.9474%" y="485" width="1.3158%" height="15" fill="rgb(219,179,1)" fg:x="41" fg:w="1"/><text x="54.1974%" y="495.50"></text></g><g><title>`0x7FFB8094A320 (1 samples, 1.32%)</title><rect x="53.9474%" y="469" width="1.3158%" height="15" fill="rgb(238,219,53)" fg:x="41" fg:w="1"/><text x="54.1974%" y="479.50"></text></g><g><title>my-solutions.exe`__scrt_common_main_seh() (27 samples, 35.53%)</title><rect x="21.0526%" y="933" width="35.5263%" height="15" fill="rgb(232,167,36)" fg:x="16" fg:w="27"/><text x="21.3026%" y="943.50">my-solutions.exe`__scrt_common_main_seh()</text></g><g><title>my-solutions.exe`invoke_main() (23 samples, 30.26%)</title><rect x="26.3158%" y="917" width="30.2632%" height="15" fill="rgb(244,19,51)" fg:x="20" fg:w="23"/><text x="26.5658%" y="927.50">my-solutions.exe`invoke_main()</text></g><g><title>my-solutions.exe`main (23 samples, 30.26%)</title><rect x="26.3158%" y="901" width="30.2632%" height="15" fill="rgb(224,6,22)" fg:x="20" fg:w="23"/><text x="26.5658%" y="911.50">my-solutions.exe`main</text></g><g><title>my-solutions.exe`std::rt::lang_start_internal (23 samples, 30.26%)</title><rect x="26.3158%" y="885" width="30.2632%" height="15" fill="rgb(224,145,5)" fg:x="20" fg:w="23"/><text x="26.5658%" y="895.50">my-solutions.exe`std::rt::lang_start_internal</text></g><g><title>my-solutions.exe`std::panic::catch_unwind (23 samples, 30.26%)</title><rect x="26.3158%" y="869" width="30.2632%" height="15" fill="rgb(234,130,49)" fg:x="20" fg:w="23"/><text x="26.5658%" y="879.50">my-solutions.exe`std::panic::catch_unwind</text></g><g><title>my-solutions.exe`std::panicking::try (23 samples, 30.26%)</title><rect x="26.3158%" y="853" width="30.2632%" height="15" fill="rgb(254,6,2)" fg:x="20" fg:w="23"/><text x="26.5658%" y="863.50">my-solutions.exe`std::panicking::try</text></g><g><title>my-solutions.exe`std::panicking::try::do_call (23 samples, 30.26%)</title><rect x="26.3158%" y="837" width="30.2632%" height="15" fill="rgb(208,96,46)" fg:x="20" fg:w="23"/><text x="26.5658%" y="847.50">my-solutions.exe`std::panicking::try::do_call</text></g><g><title>my-solutions.exe`std::rt::lang_start_internal::closure$2 (23 samples, 30.26%)</title><rect x="26.3158%" y="821" width="30.2632%" height="15" fill="rgb(239,3,39)" fg:x="20" fg:w="23"/><text x="26.5658%" y="831.50">my-solutions.exe`std::rt::lang_start_internal::cl..</text></g><g><title>my-solutions.exe`std::panic::catch_unwind (23 samples, 30.26%)</title><rect x="26.3158%" y="805" width="30.2632%" height="15" fill="rgb(233,210,1)" fg:x="20" fg:w="23"/><text x="26.5658%" y="815.50">my-solutions.exe`std::panic::catch_unwind</text></g><g><title>my-solutions.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$ (23 samples, 30.26%)</title><rect x="26.3158%" y="789" width="30.2632%" height="15" fill="rgb(244,137,37)" fg:x="20" fg:w="23"/><text x="26.5658%" y="799.50">my-solutions.exe`std::rt::lang_start::closure$0&lt;t..</text></g><g><title>my-solutions.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (23 samples, 30.26%)</title><rect x="26.3158%" y="773" width="30.2632%" height="15" fill="rgb(240,136,2)" fg:x="20" fg:w="23"/><text x="26.5658%" y="783.50">my-solutions.exe`std::sys_common::backtrace::__ru..</text></g><g><title>my-solutions.exe`my_solutions::main (23 samples, 30.26%)</title><rect x="26.3158%" y="757" width="30.2632%" height="15" fill="rgb(239,18,37)" fg:x="20" fg:w="23"/><text x="26.5658%" y="767.50">my-solutions.exe`my_solutions::main</text></g><g><title>my-solutions.exe`rudvent_lib::cli::app_builder::AppBuilder::build (8 samples, 10.53%)</title><rect x="46.0526%" y="741" width="10.5263%" height="15" fill="rgb(218,185,22)" fg:x="35" fg:w="8"/><text x="46.3026%" y="751.50">my-solutions.ex..</text></g><g><title>my-solutions.exe`tracing_subscriber::fmt::SubscriberBuilder&lt;tracing_subscriber::fmt::format::DefaultFields,tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,tracing_subscriber::fmt::time::SystemTime&gt;,tracing_core::metadata::LevelFilter,std::io::stdio::Stdout (*)()&gt;::init(tracing_subscriber::fmt::SubscriberBuilder&lt;tracing_subscriber::fmt::format::DefaultFields,tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,tracing_subscriber::fmt::time::SystemTime&gt;,tracing_core::metadata::LevelFilter,std::io::stdio::Stdout (*) (1 samples, 1.32%)</title><rect x="55.2632%" y="725" width="1.3158%" height="15" fill="rgb(225,218,4)" fg:x="42" fg:w="1"/><text x="55.5132%" y="735.50"></text></g><g><title>my-solutions.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::error::Error,core::marker::Send,core::marker::Sync&gt;,alloc::alloc::Global&gt; &gt; &gt;::expect(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::error::Error,core::marker::Send,core::marker::Sync&gt;,alloc::alloc::Global&gt; &gt; &gt;, ref$ (1 samples, 1.32%)</title><rect x="55.2632%" y="709" width="1.3158%" height="15" fill="rgb(230,182,32)" fg:x="42" fg:w="1"/><text x="55.5132%" y="719.50"></text></g><g><title>my-solutions.exe`tracing_subscriber::fmt::SubscriberBuilder&lt;tracing_subscriber::fmt::format::DefaultFields,tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,tracing_subscriber::fmt::time::SystemTime&gt;,tracing_core::metadata::LevelFilter,std::io::stdio::Stdout (*)()&gt;::try_init&lt;tracing_subscriber::fmt::format::DefaultFields,tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,tracing_subscriber::fmt::time::SystemTime&gt;,tracing_core::metadata::LevelFilter,std::io::stdio::Stdout (*)()&gt;(tracing_subscriber::fmt::SubscriberBuilder&lt;tracing_subscriber::fmt::format::DefaultFields,tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,tracing_subscriber::fmt::time::SystemTime&gt;,tracing_core::metadata::LevelFilter,std::io::stdio::Stdout (*) (1 samples, 1.32%)</title><rect x="55.2632%" y="693" width="1.3158%" height="15" fill="rgb(242,56,43)" fg:x="42" fg:w="1"/><text x="55.5132%" y="703.50"></text></g><g><title>my-solutions.exe`tracing_subscriber::util::SubscriberInitExt::try_init(tracing_subscriber::fmt::Subscriber&lt;tracing_subscriber::fmt::format::DefaultFields,tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,tracing_subscriber::fmt::time::SystemTime&gt;,tracing_core::metadata::LevelFilter,std::io::stdio::Stdout (*) (1 samples, 1.32%)</title><rect x="55.2632%" y="677" width="1.3158%" height="15" fill="rgb(233,99,24)" fg:x="42" fg:w="1"/><text x="55.5132%" y="687.50"></text></g><g><title>my-solutions.exe`core::convert::impl$3::into(tracing_subscriber::fmt::Subscriber&lt;tracing_subscriber::fmt::format::DefaultFields,tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,tracing_subscriber::fmt::time::SystemTime&gt;,tracing_core::metadata::LevelFilter,std::io::stdio::Stdout (*) (1 samples, 1.32%)</title><rect x="55.2632%" y="661" width="1.3158%" height="15" fill="rgb(234,209,42)" fg:x="42" fg:w="1"/><text x="55.5132%" y="671.50"></text></g><g><title>my-solutions.exe`tracing_core::dispatcher::impl$7::from(tracing_subscriber::fmt::Subscriber&lt;tracing_subscriber::fmt::format::DefaultFields,tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,tracing_subscriber::fmt::time::SystemTime&gt;,tracing_core::metadata::LevelFilter,std::io::stdio::Stdout (*) (1 samples, 1.32%)</title><rect x="55.2632%" y="645" width="1.3158%" height="15" fill="rgb(227,7,12)" fg:x="42" fg:w="1"/><text x="55.5132%" y="655.50"></text></g><g><title>my-solutions.exe`tracing_core::dispatcher::Dispatch::new(tracing_subscriber::fmt::Subscriber&lt;tracing_subscriber::fmt::format::DefaultFields,tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,tracing_subscriber::fmt::time::SystemTime&gt;,tracing_core::metadata::LevelFilter,std::io::stdio::Stdout (*) (1 samples, 1.32%)</title><rect x="55.2632%" y="629" width="1.3158%" height="15" fill="rgb(245,203,43)" fg:x="42" fg:w="1"/><text x="55.5132%" y="639.50"></text></g><g><title>my-solutions.exe`tracing_core::callsite::register_dispatch (1 samples, 1.32%)</title><rect x="55.2632%" y="613" width="1.3158%" height="15" fill="rgb(238,205,33)" fg:x="42" fg:w="1"/><text x="55.5132%" y="623.50"></text></g><g><title>my-solutions.exe`tracing_core::dispatcher::Dispatch::subscriber (1 samples, 1.32%)</title><rect x="55.2632%" y="597" width="1.3158%" height="15" fill="rgb(231,56,7)" fg:x="42" fg:w="1"/><text x="55.5132%" y="607.50"></text></g><g><title>my-solutions.exe`alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle,alloc::alloc::Global&gt;::drop_slow&lt;tokio::runtime::scheduler::current_thread::Handle,alloc::alloc::Global&gt; (1 samples, 1.32%)</title><rect x="57.8947%" y="661" width="1.3158%" height="15" fill="rgb(244,186,29)" fg:x="44" fg:w="1"/><text x="58.1447%" y="671.50"></text></g><g><title>my-solutions.exe`core::ptr::drop_in_place (1 samples, 1.32%)</title><rect x="57.8947%" y="645" width="1.3158%" height="15" fill="rgb(234,111,31)" fg:x="44" fg:w="1"/><text x="58.1447%" y="655.50"></text></g><g><title>my-solutions.exe`core::ptr::drop_in_place (1 samples, 1.32%)</title><rect x="57.8947%" y="629" width="1.3158%" height="15" fill="rgb(241,149,10)" fg:x="44" fg:w="1"/><text x="58.1447%" y="639.50"></text></g><g><title>my-solutions.exe`core::ptr::drop_in_place(alloc::sync::Arc (1 samples, 1.32%)</title><rect x="57.8947%" y="613" width="1.3158%" height="15" fill="rgb(249,206,44)" fg:x="44" fg:w="1"/><text x="58.1447%" y="623.50"></text></g><g><title>my-solutions.exe`alloc::sync::impl$33::drop(alloc::sync::Arc (1 samples, 1.32%)</title><rect x="57.8947%" y="597" width="1.3158%" height="15" fill="rgb(251,153,30)" fg:x="44" fg:w="1"/><text x="58.1447%" y="607.50"></text></g><g><title>my-solutions.exe`alloc::sync::Arc&lt;tokio::runtime::blocking::pool::Inner,alloc::alloc::Global&gt;::inner (1 samples, 1.32%)</title><rect x="57.8947%" y="581" width="1.3158%" height="15" fill="rgb(239,152,38)" fg:x="44" fg:w="1"/><text x="58.1447%" y="591.50"></text></g><g><title>my-solutions.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;tokio::runtime::blocking::pool::Inner&gt; &gt;::as_ref (1 samples, 1.32%)</title><rect x="57.8947%" y="565" width="1.3158%" height="15" fill="rgb(249,139,47)" fg:x="44" fg:w="1"/><text x="58.1447%" y="575.50"></text></g><g><title>my-solutions.exe`core::ptr::drop_in_place&lt;tokio::runtime::driver::Handle&gt; (1 samples, 1.32%)</title><rect x="57.8947%" y="549" width="1.3158%" height="15" fill="rgb(244,64,35)" fg:x="44" fg:w="1"/><text x="58.1447%" y="559.50"></text></g><g><title>my-solutions.exe`core::ptr::drop_in_place(enum2$ (1 samples, 1.32%)</title><rect x="57.8947%" y="533" width="1.3158%" height="15" fill="rgb(216,46,15)" fg:x="44" fg:w="1"/><text x="58.1447%" y="543.50"></text></g><g><title>my-solutions.exe`core::ptr::drop_in_place (1 samples, 1.32%)</title><rect x="57.8947%" y="517" width="1.3158%" height="15" fill="rgb(250,74,19)" fg:x="44" fg:w="1"/><text x="58.1447%" y="527.50"></text></g><g><title>my-solutions.exe`core::ptr::drop_in_place(tokio::loom::std::mutex::Mutex (1 samples, 1.32%)</title><rect x="57.8947%" y="501" width="1.3158%" height="15" fill="rgb(249,42,33)" fg:x="44" fg:w="1"/><text x="58.1447%" y="511.50"></text></g><g><title>my-solutions.exe`core::ptr::drop_in_place(std::sync::mutex::Mutex (1 samples, 1.32%)</title><rect x="57.8947%" y="485" width="1.3158%" height="15" fill="rgb(242,149,17)" fg:x="44" fg:w="1"/><text x="58.1447%" y="495.50"></text></g><g><title>my-solutions.exe`core::ptr::drop_in_place(core::cell::UnsafeCell (1 samples, 1.32%)</title><rect x="57.8947%" y="469" width="1.3158%" height="15" fill="rgb(244,29,21)" fg:x="44" fg:w="1"/><text x="58.1447%" y="479.50"></text></g><g><title>my-solutions.exe`core::ptr::drop_in_place (1 samples, 1.32%)</title><rect x="57.8947%" y="453" width="1.3158%" height="15" fill="rgb(220,130,37)" fg:x="44" fg:w="1"/><text x="58.1447%" y="463.50"></text></g><g><title>my-solutions.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;alloc::sync::Arc (1 samples, 1.32%)</title><rect x="57.8947%" y="437" width="1.3158%" height="15" fill="rgb(211,67,2)" fg:x="44" fg:w="1"/><text x="58.1447%" y="447.50"></text></g><g><title>my-solutions.exe`alloc::vec::impl$24::drop(alloc::vec::Vec&lt;alloc::sync::Arc (1 samples, 1.32%)</title><rect x="57.8947%" y="421" width="1.3158%" height="15" fill="rgb(235,68,52)" fg:x="44" fg:w="1"/><text x="58.1447%" y="431.50"></text></g><g><title>my-solutions.exe`alloc::sync::Arc&lt;mio::sys::windows::selector::SelectorInner,alloc::alloc::Global&gt;::drop_slow&lt;mio::sys::windows::selector::SelectorInner,alloc::alloc::Global&gt; (1 samples, 1.32%)</title><rect x="57.8947%" y="405" width="1.3158%" height="15" fill="rgb(246,142,3)" fg:x="44" fg:w="1"/><text x="58.1447%" y="415.50"></text></g><g><title>my-solutions.exe`core::ptr::drop_in_place (1 samples, 1.32%)</title><rect x="57.8947%" y="389" width="1.3158%" height="15" fill="rgb(241,25,7)" fg:x="44" fg:w="1"/><text x="58.1447%" y="399.50"></text></g><g><title>my-solutions.exe`core::ptr::drop_in_place(alloc::sync::Arc (1 samples, 1.32%)</title><rect x="57.8947%" y="373" width="1.3158%" height="15" fill="rgb(242,119,39)" fg:x="44" fg:w="1"/><text x="58.1447%" y="383.50"></text></g><g><title>my-solutions.exe`alloc::sync::impl$33::drop(alloc::sync::Arc (1 samples, 1.32%)</title><rect x="57.8947%" y="357" width="1.3158%" height="15" fill="rgb(241,98,45)" fg:x="44" fg:w="1"/><text x="58.1447%" y="367.50"></text></g><g><title>my-solutions.exe`alloc::sync::Arc&lt;mio::sys::windows::iocp::CompletionPort,alloc::alloc::Global&gt;::inner (1 samples, 1.32%)</title><rect x="57.8947%" y="341" width="1.3158%" height="15" fill="rgb(254,28,30)" fg:x="44" fg:w="1"/><text x="58.1447%" y="351.50"></text></g><g><title>my-solutions.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;mio::sys::windows::iocp::CompletionPort&gt; &gt;::as_ref (1 samples, 1.32%)</title><rect x="57.8947%" y="325" width="1.3158%" height="15" fill="rgb(241,142,54)" fg:x="44" fg:w="1"/><text x="58.1447%" y="335.50"></text></g><g><title>my-solutions.exe`mio::sys::windows::selector::impl$6::drop (1 samples, 1.32%)</title><rect x="57.8947%" y="309" width="1.3158%" height="15" fill="rgb(222,85,15)" fg:x="44" fg:w="1"/><text x="58.1447%" y="319.50"></text></g><g><title>my-solutions.exe`__chkstk() (1 samples, 1.32%)</title><rect x="57.8947%" y="293" width="1.3158%" height="15" fill="rgb(210,85,47)" fg:x="44" fg:w="1"/><text x="58.1447%" y="303.50"></text></g><g><title>my-solutions.exe`core::ptr::drop_in_place&lt;tokio::runtime::runtime::Runtime&gt; (2 samples, 2.63%)</title><rect x="57.8947%" y="677" width="2.6316%" height="15" fill="rgb(224,206,25)" fg:x="44" fg:w="2"/><text x="58.1447%" y="687.50">my..</text></g><g><title>my-solutions.exe`core::ptr::drop_in_place (1 samples, 1.32%)</title><rect x="59.2105%" y="661" width="1.3158%" height="15" fill="rgb(243,201,19)" fg:x="45" fg:w="1"/><text x="59.4605%" y="671.50"></text></g><g><title>my-solutions.exe`core::ptr::drop_in_place(enum2$ (1 samples, 1.32%)</title><rect x="59.2105%" y="645" width="1.3158%" height="15" fill="rgb(236,59,4)" fg:x="45" fg:w="1"/><text x="59.4605%" y="655.50"></text></g><g><title>my-solutions.exe`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::scheduler::current_thread::Core,alloc::alloc::Global&gt; &gt; (1 samples, 1.32%)</title><rect x="59.2105%" y="629" width="1.3158%" height="15" fill="rgb(254,179,45)" fg:x="45" fg:w="1"/><text x="59.4605%" y="639.50"></text></g><g><title>my-solutions.exe`core::ptr::drop_in_place (1 samples, 1.32%)</title><rect x="59.2105%" y="613" width="1.3158%" height="15" fill="rgb(226,14,10)" fg:x="45" fg:w="1"/><text x="59.4605%" y="623.50"></text></g><g><title>my-solutions.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option (1 samples, 1.32%)</title><rect x="59.2105%" y="597" width="1.3158%" height="15" fill="rgb(244,27,41)" fg:x="45" fg:w="1"/><text x="59.4605%" y="607.50"></text></g><g><title>my-solutions.exe`core::ptr::drop_in_place (1 samples, 1.32%)</title><rect x="59.2105%" y="581" width="1.3158%" height="15" fill="rgb(235,35,32)" fg:x="45" fg:w="1"/><text x="59.4605%" y="591.50"></text></g><g><title>my-solutions.exe`core::ptr::drop_in_place(enum2$ (1 samples, 1.32%)</title><rect x="59.2105%" y="565" width="1.3158%" height="15" fill="rgb(218,68,31)" fg:x="45" fg:w="1"/><text x="59.4605%" y="575.50"></text></g><g><title>my-solutions.exe`core::ptr::drop_in_place(enum2$ (1 samples, 1.32%)</title><rect x="59.2105%" y="549" width="1.3158%" height="15" fill="rgb(207,120,37)" fg:x="45" fg:w="1"/><text x="59.4605%" y="559.50"></text></g><g><title>my-solutions.exe`core::ptr::drop_in_place (1 samples, 1.32%)</title><rect x="59.2105%" y="533" width="1.3158%" height="15" fill="rgb(227,98,0)" fg:x="45" fg:w="1"/><text x="59.4605%" y="543.50"></text></g><g><title>my-solutions.exe`core::ptr::drop_in_place (1 samples, 1.32%)</title><rect x="59.2105%" y="517" width="1.3158%" height="15" fill="rgb(207,7,3)" fg:x="45" fg:w="1"/><text x="59.4605%" y="527.50"></text></g><g><title>my-solutions.exe`core::ptr::drop_in_place (1 samples, 1.32%)</title><rect x="59.2105%" y="501" width="1.3158%" height="15" fill="rgb(206,98,19)" fg:x="45" fg:w="1"/><text x="59.4605%" y="511.50"></text></g><g><title>my-solutions.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 1.32%)</title><rect x="59.2105%" y="485" width="1.3158%" height="15" fill="rgb(217,5,26)" fg:x="45" fg:w="1"/><text x="59.4605%" y="495.50"></text></g><g><title>my-solutions.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 1.32%)</title><rect x="59.2105%" y="469" width="1.3158%" height="15" fill="rgb(235,190,38)" fg:x="45" fg:w="1"/><text x="59.4605%" y="479.50"></text></g><g><title>my-solutions.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (1 samples, 1.32%)</title><rect x="59.2105%" y="453" width="1.3158%" height="15" fill="rgb(247,86,24)" fg:x="45" fg:w="1"/><text x="59.4605%" y="463.50"></text></g><g><title>`0x7FFB809547B1 (1 samples, 1.32%)</title><rect x="59.2105%" y="437" width="1.3158%" height="15" fill="rgb(205,101,16)" fg:x="45" fg:w="1"/><text x="59.4605%" y="447.50"></text></g><g><title>`0x7FFB80955B74 (1 samples, 1.32%)</title><rect x="59.2105%" y="421" width="1.3158%" height="15" fill="rgb(246,168,33)" fg:x="45" fg:w="1"/><text x="59.4605%" y="431.50"></text></g><g><title>`0x7FFB809565F6 (1 samples, 1.32%)</title><rect x="59.2105%" y="405" width="1.3158%" height="15" fill="rgb(231,114,1)" fg:x="45" fg:w="1"/><text x="59.4605%" y="415.50"></text></g><g><title>`0x7FFB8094E412 (1 samples, 1.32%)</title><rect x="59.2105%" y="389" width="1.3158%" height="15" fill="rgb(207,184,53)" fg:x="45" fg:w="1"/><text x="59.4605%" y="399.50"></text></g><g><title>`0x7FFB8094F35E (1 samples, 1.32%)</title><rect x="59.2105%" y="373" width="1.3158%" height="15" fill="rgb(224,95,51)" fg:x="45" fg:w="1"/><text x="59.4605%" y="383.50"></text></g><g><title>`0x7FFB8095095C (1 samples, 1.32%)</title><rect x="59.2105%" y="357" width="1.3158%" height="15" fill="rgb(212,188,45)" fg:x="45" fg:w="1"/><text x="59.4605%" y="367.50"></text></g><g><title>`0x7FFB80939B1A (1 samples, 1.32%)</title><rect x="59.2105%" y="341" width="1.3158%" height="15" fill="rgb(223,154,38)" fg:x="45" fg:w="1"/><text x="59.4605%" y="351.50"></text></g><g><title>`0x7FFB809CD3A4 (1 samples, 1.32%)</title><rect x="59.2105%" y="325" width="1.3158%" height="15" fill="rgb(251,22,52)" fg:x="45" fg:w="1"/><text x="59.4605%" y="335.50"></text></g><g><title>my-solutions.exe`once_cell::imp::OnceCell&lt;alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt; &gt;::initialize&lt;alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt;,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt;,once_cell::sync::impl$11::force::closure_env$0&lt;alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt;,alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt; (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt;,once_cell::sync::impl$11::force::closure_env$0&lt;alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt;,alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt; (*) (1 samples, 1.32%)</title><rect x="60.5263%" y="309" width="1.3158%" height="15" fill="rgb(229,209,22)" fg:x="46" fg:w="1"/><text x="60.7763%" y="319.50"></text></g><g><title>my-solutions.exe`once_cell::imp::initialize_or_wait(core::sync::atomic::AtomicPtr&lt;once_cell::imp::Waiter&gt;*, enum2$&lt;core::option::Option&lt;ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;&gt;,assoc$ (1 samples, 1.32%)</title><rect x="60.5263%" y="293" width="1.3158%" height="15" fill="rgb(234,138,34)" fg:x="46" fg:w="1"/><text x="60.7763%" y="303.50"></text></g><g><title>my-solutions.exe`once_cell::imp::impl$4::initialize::closure$0&lt;alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt;,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt;,once_cell::sync::impl$11::force::closure_env$0&lt;alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt;,alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt; (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::imp::impl$4::initialize::closure_env$0&lt;alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt;,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt;,once_cell::sync::impl$11::force::closure_env$0&lt;alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt;,alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt; (*)()&gt; &gt;,enum2$ (1 samples, 1.32%)</title><rect x="60.5263%" y="277" width="1.3158%" height="15" fill="rgb(212,95,11)" fg:x="46" fg:w="1"/><text x="60.7763%" y="287.50"></text></g><g><title>my-solutions.exe`once_cell::sync::impl$6::get_or_init::closure$0(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt;,once_cell::sync::impl$11::force::closure_env$0&lt;alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt;,alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt; (*) (1 samples, 1.32%)</title><rect x="60.5263%" y="261" width="1.3158%" height="15" fill="rgb(240,179,47)" fg:x="46" fg:w="1"/><text x="60.7763%" y="271.50"></text></g><g><title>my-solutions.exe`once_cell::sync::impl$11::force::closure$0(once_cell::sync::impl$11::force::closure_env$0&lt;alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt;,alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt; (*) (1 samples, 1.32%)</title><rect x="60.5263%" y="245" width="1.3158%" height="15" fill="rgb(240,163,11)" fg:x="46" fg:w="1"/><text x="60.7763%" y="255.50"></text></g><g><title>my-solutions.exe`core::ops::function::FnOnce::call_once(alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt; (*) (1 samples, 1.32%)</title><rect x="60.5263%" y="229" width="1.3158%" height="15" fill="rgb(236,37,12)" fg:x="46" fg:w="1"/><text x="60.7763%" y="239.50"></text></g><g><title>my-solutions.exe`core::ops::function::FnOnce::call_once&lt;reqwest::proxy::SYS_PROXIES::closure_env$0,tuple$&lt;&gt; &gt; (1 samples, 1.32%)</title><rect x="60.5263%" y="213" width="1.3158%" height="15" fill="rgb(232,164,16)" fg:x="46" fg:w="1"/><text x="60.7763%" y="223.50"></text></g><g><title>my-solutions.exe`reqwest::proxy::SYS_PROXIES::closure$0 (1 samples, 1.32%)</title><rect x="60.5263%" y="197" width="1.3158%" height="15" fill="rgb(244,205,15)" fg:x="46" fg:w="1"/><text x="60.7763%" y="207.50"></text></g><g><title>my-solutions.exe`reqwest::proxy::get_from_platform (1 samples, 1.32%)</title><rect x="60.5263%" y="181" width="1.3158%" height="15" fill="rgb(223,117,47)" fg:x="46" fg:w="1"/><text x="60.7763%" y="191.50"></text></g><g><title>my-solutions.exe`reqwest::proxy::get_from_platform_impl (1 samples, 1.32%)</title><rect x="60.5263%" y="165" width="1.3158%" height="15" fill="rgb(244,107,35)" fg:x="46" fg:w="1"/><text x="60.7763%" y="175.50"></text></g><g><title>my-solutions.exe`winreg::reg_key::RegKey::get_value(ref$ (1 samples, 1.32%)</title><rect x="60.5263%" y="149" width="1.3158%" height="15" fill="rgb(205,140,8)" fg:x="46" fg:w="1"/><text x="60.7763%" y="159.50"></text></g><g><title>my-solutions.exe`winreg::types::impl$4::from_reg_value (1 samples, 1.32%)</title><rect x="60.5263%" y="133" width="1.3158%" height="15" fill="rgb(228,84,46)" fg:x="46" fg:w="1"/><text x="60.7763%" y="143.50"></text></g><g><title>`0x7FFB809826B1 (46 samples, 60.53%)</title><rect x="2.6316%" y="965" width="60.5263%" height="15" fill="rgb(254,188,9)" fg:x="2" fg:w="46"/><text x="2.8816%" y="975.50">`0x7FFB809826B1</text></g><g><title>`0x7FFB80237344 (46 samples, 60.53%)</title><rect x="2.6316%" y="949" width="60.5263%" height="15" fill="rgb(206,112,54)" fg:x="2" fg:w="46"/><text x="2.8816%" y="959.50">`0x7FFB80237344</text></g><g><title>my-solutions.exe`std::sys::windows::thread::impl$0::new::thread_start (5 samples, 6.58%)</title><rect x="56.5789%" y="933" width="6.5789%" height="15" fill="rgb(216,84,49)" fg:x="43" fg:w="5"/><text x="56.8289%" y="943.50">my-soluti..</text></g><g><title>my-solutions.exe`alloc::boxed::impl$47::call_once (5 samples, 6.58%)</title><rect x="56.5789%" y="917" width="6.5789%" height="15" fill="rgb(214,194,35)" fg:x="43" fg:w="5"/><text x="56.8289%" y="927.50">my-soluti..</text></g><g><title>my-solutions.exe`alloc::boxed::impl$47::call_once (5 samples, 6.58%)</title><rect x="56.5789%" y="901" width="6.5789%" height="15" fill="rgb(249,28,3)" fg:x="43" fg:w="5"/><text x="56.8289%" y="911.50">my-soluti..</text></g><g><title>my-solutions.exe`alloc::boxed::impl$8::drop (4 samples, 5.26%)</title><rect x="57.8947%" y="885" width="5.2632%" height="15" fill="rgb(222,56,52)" fg:x="44" fg:w="4"/><text x="58.1447%" y="895.50">my-sol..</text></g><g><title>my-solutions.exe`core::alloc::layout::Layout::for_value_raw (4 samples, 5.26%)</title><rect x="57.8947%" y="869" width="5.2632%" height="15" fill="rgb(245,217,50)" fg:x="44" fg:w="4"/><text x="58.1447%" y="879.50">my-sol..</text></g><g><title>my-solutions.exe`core::mem::size_of_val_raw (4 samples, 5.26%)</title><rect x="57.8947%" y="853" width="5.2632%" height="15" fill="rgb(213,201,24)" fg:x="44" fg:w="4"/><text x="58.1447%" y="863.50">my-sol..</text></g><g><title>my-solutions.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;reqwest::blocking::client::impl$8::new::closure_env$0,tuple$&lt;&gt; &gt;,tuple$&lt;&gt; &gt;(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;reqwest::blocking::client::impl$8::new::closure_env$0,tuple$ (4 samples, 5.26%)</title><rect x="57.8947%" y="837" width="5.2632%" height="15" fill="rgb(248,116,28)" fg:x="44" fg:w="4"/><text x="58.1447%" y="847.50">my-sol..</text></g><g><title>my-solutions.exe`std::thread::impl$0::spawn_unchecked_::closure$1(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;reqwest::blocking::client::impl$8::new::closure_env$0,tuple$ (4 samples, 5.26%)</title><rect x="57.8947%" y="821" width="5.2632%" height="15" fill="rgb(219,72,43)" fg:x="44" fg:w="4"/><text x="58.1447%" y="831.50">my-sol..</text></g><g><title>my-solutions.exe`alloc::sync::impl$29::deref(alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$ (4 samples, 5.26%)</title><rect x="57.8947%" y="805" width="5.2632%" height="15" fill="rgb(209,138,14)" fg:x="44" fg:w="4"/><text x="58.1447%" y="815.50">my-sol..</text></g><g><title>my-solutions.exe`alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;&gt; &gt;,alloc::alloc::Global&gt;::inner (4 samples, 5.26%)</title><rect x="57.8947%" y="789" width="5.2632%" height="15" fill="rgb(222,18,33)" fg:x="44" fg:w="4"/><text x="58.1447%" y="799.50">my-sol..</text></g><g><title>my-solutions.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;std::thread::Packet&lt;tuple$&lt;&gt; &gt; &gt; &gt;::as_ref (4 samples, 5.26%)</title><rect x="57.8947%" y="773" width="5.2632%" height="15" fill="rgb(213,199,7)" fg:x="44" fg:w="4"/><text x="58.1447%" y="783.50">my-sol..</text></g><g><title>my-solutions.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;reqwest::blocking::client::impl$8::new::closure_env$0,tuple$&lt;&gt; &gt; (4 samples, 5.26%)</title><rect x="57.8947%" y="757" width="5.2632%" height="15" fill="rgb(250,110,10)" fg:x="44" fg:w="4"/><text x="58.1447%" y="767.50">my-sol..</text></g><g><title>my-solutions.exe`reqwest::blocking::client::impl$8::new::closure$0 (4 samples, 5.26%)</title><rect x="57.8947%" y="741" width="5.2632%" height="15" fill="rgb(248,123,6)" fg:x="44" fg:w="4"/><text x="58.1447%" y="751.50">my-sol..</text></g><g><title>my-solutions.exe`log::max_level (4 samples, 5.26%)</title><rect x="57.8947%" y="725" width="5.2632%" height="15" fill="rgb(206,91,31)" fg:x="44" fg:w="4"/><text x="58.1447%" y="735.50">my-sol..</text></g><g><title>my-solutions.exe`core::sync::atomic::AtomicUsize::load (4 samples, 5.26%)</title><rect x="57.8947%" y="709" width="5.2632%" height="15" fill="rgb(211,154,13)" fg:x="44" fg:w="4"/><text x="58.1447%" y="719.50">my-sol..</text></g><g><title>my-solutions.exe`core::sync::atomic::atomic_load (4 samples, 5.26%)</title><rect x="57.8947%" y="693" width="5.2632%" height="15" fill="rgb(225,148,7)" fg:x="44" fg:w="4"/><text x="58.1447%" y="703.50">my-sol..</text></g><g><title>my-solutions.exe`tokio::runtime::runtime::Runtime::block_on&lt;enum2$&lt;reqwest::blocking::client::impl$8::new::closure$0::async_block_env$0&gt; &gt;(enum2$ (2 samples, 2.63%)</title><rect x="60.5263%" y="677" width="2.6316%" height="15" fill="rgb(220,160,43)" fg:x="46" fg:w="2"/><text x="60.7763%" y="687.50">my..</text></g><g><title>my-solutions.exe`core::ptr::drop_in_place (2 samples, 2.63%)</title><rect x="60.5263%" y="661" width="2.6316%" height="15" fill="rgb(213,52,39)" fg:x="46" fg:w="2"/><text x="60.7763%" y="671.50">my..</text></g><g><title>my-solutions.exe`core::ptr::drop_in_place (2 samples, 2.63%)</title><rect x="60.5263%" y="645" width="2.6316%" height="15" fill="rgb(243,137,7)" fg:x="46" fg:w="2"/><text x="60.7763%" y="655.50">my..</text></g><g><title>my-solutions.exe`tokio::runtime::scheduler::current_thread::CurrentThread::block_on&lt;enum2$&lt;reqwest::blocking::client::impl$8::new::closure$0::async_block_env$0&gt; &gt;(enum2$&lt;tokio::runtime::scheduler::Handle&gt;*, enum2$ (2 samples, 2.63%)</title><rect x="60.5263%" y="629" width="2.6316%" height="15" fill="rgb(230,79,13)" fg:x="46" fg:w="2"/><text x="60.7763%" y="639.50">my..</text></g><g><title>my-solutions.exe`tokio::runtime::context::runtime::enter_runtime(enum2$&lt;tokio::runtime::scheduler::Handle&gt;*, bool, tokio::runtime::scheduler::current_thread::impl$0::block_on::closure_env$0&lt;enum2$ (2 samples, 2.63%)</title><rect x="60.5263%" y="613" width="2.6316%" height="15" fill="rgb(247,105,23)" fg:x="46" fg:w="2"/><text x="60.7763%" y="623.50">my..</text></g><g><title>my-solutions.exe`tokio::runtime::scheduler::current_thread::impl$0::block_on::closure$0(tokio::runtime::scheduler::current_thread::impl$0::block_on::closure_env$0&lt;enum2$ (2 samples, 2.63%)</title><rect x="60.5263%" y="597" width="2.6316%" height="15" fill="rgb(223,179,41)" fg:x="46" fg:w="2"/><text x="60.7763%" y="607.50">my..</text></g><g><title>my-solutions.exe`tokio::runtime::scheduler::current_thread::CoreGuard::block_on(tokio::runtime::scheduler::current_thread::CoreGuard, core::pin::Pin&lt;ref_mut$&lt;enum2$ (2 samples, 2.63%)</title><rect x="60.5263%" y="581" width="2.6316%" height="15" fill="rgb(218,9,34)" fg:x="46" fg:w="2"/><text x="60.7763%" y="591.50">my..</text></g><g><title>my-solutions.exe`tokio::runtime::scheduler::current_thread::CoreGuard::enter(tokio::runtime::scheduler::current_thread::CoreGuard, tokio::runtime::scheduler::current_thread::impl$8::block_on::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$ (2 samples, 2.63%)</title><rect x="60.5263%" y="565" width="2.6316%" height="15" fill="rgb(222,106,8)" fg:x="46" fg:w="2"/><text x="60.7763%" y="575.50">my..</text></g><g><title>my-solutions.exe`core::cell::RefCell&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box&lt;tokio::runtime::scheduler::current_thread::Core,alloc::alloc::Global&gt; &gt; &gt; &gt;::borrow_mut (2 samples, 2.63%)</title><rect x="60.5263%" y="549" width="2.6316%" height="15" fill="rgb(211,220,0)" fg:x="46" fg:w="2"/><text x="60.7763%" y="559.50">my..</text></g><g><title>my-solutions.exe`core::cell::RefCell&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box&lt;tokio::runtime::scheduler::current_thread::Core,alloc::alloc::Global&gt; &gt; &gt; &gt;::try_borrow_mut (2 samples, 2.63%)</title><rect x="60.5263%" y="533" width="2.6316%" height="15" fill="rgb(229,52,16)" fg:x="46" fg:w="2"/><text x="60.7763%" y="543.50">my..</text></g><g><title>my-solutions.exe`core::cell::BorrowRefMut::new(core::cell::Cell (2 samples, 2.63%)</title><rect x="60.5263%" y="517" width="2.6316%" height="15" fill="rgb(212,155,18)" fg:x="46" fg:w="2"/><text x="60.7763%" y="527.50">my..</text></g><g><title>my-solutions.exe`tokio::runtime::context::scoped::Scoped&lt;enum2$&lt;tokio::runtime::scheduler::Context&gt; &gt;::set&lt;enum2$&lt;tokio::runtime::scheduler::Context&gt;,tokio::runtime::scheduler::current_thread::impl$8::enter::closure_env$0&lt;tokio::runtime::scheduler::current_thread::impl$8::block_on::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;reqwest::blocking::client::impl$8::new::closure$0::async_block_env$0&gt; &gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;&gt; &gt; &gt; &gt;,tuple$&lt;alloc::boxed::Box&lt;tokio::runtime::scheduler::current_thread::Core,alloc::alloc::Global&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;&gt; &gt; &gt; &gt; &gt;(enum2$&lt;tokio::runtime::scheduler::Context&gt;*, tokio::runtime::scheduler::current_thread::impl$8::enter::closure_env$0&lt;tokio::runtime::scheduler::current_thread::impl$8::block_on::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;reqwest::blocking::client::impl$8::new::closure$0::async_block_env$0&gt; &gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;tuple$ (2 samples, 2.63%)</title><rect x="60.5263%" y="501" width="2.6316%" height="15" fill="rgb(242,21,14)" fg:x="46" fg:w="2"/><text x="60.7763%" y="511.50">my..</text></g><g><title>my-solutions.exe`tokio::runtime::scheduler::current_thread::impl$8::enter::closure$0(tokio::runtime::scheduler::current_thread::impl$8::enter::closure_env$0&lt;tokio::runtime::scheduler::current_thread::impl$8::block_on::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;reqwest::blocking::client::impl$8::new::closure$0::async_block_env$0&gt; &gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;tuple$ (2 samples, 2.63%)</title><rect x="60.5263%" y="485" width="2.6316%" height="15" fill="rgb(222,19,48)" fg:x="46" fg:w="2"/><text x="60.7763%" y="495.50">my..</text></g><g><title>my-solutions.exe`tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0(tokio::runtime::scheduler::current_thread::impl$8::block_on::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$ (2 samples, 2.63%)</title><rect x="60.5263%" y="469" width="2.6316%" height="15" fill="rgb(232,45,27)" fg:x="46" fg:w="2"/><text x="60.7763%" y="479.50">my..</text></g><g><title>my-solutions.exe`tokio::runtime::scheduler::current_thread::Context::enter&lt;enum2$&lt;core::task::poll::Poll&lt;tuple$&lt;&gt; &gt; &gt;,tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;reqwest::blocking::client::impl$8::new::closure$0::async_block_env$0&gt; &gt; &gt; &gt; &gt;(tokio::runtime::scheduler::current_thread::Core*, tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$ (2 samples, 2.63%)</title><rect x="60.5263%" y="453" width="2.6316%" height="15" fill="rgb(249,103,42)" fg:x="46" fg:w="2"/><text x="60.7763%" y="463.50">my..</text></g><g><title>my-solutions.exe`tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure$0(tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$ (2 samples, 2.63%)</title><rect x="60.5263%" y="437" width="2.6316%" height="15" fill="rgb(246,81,33)" fg:x="46" fg:w="2"/><text x="60.7763%" y="447.50">my..</text></g><g><title>my-solutions.exe`tokio::runtime::coop::budget(tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure$0::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$ (2 samples, 2.63%)</title><rect x="60.5263%" y="421" width="2.6316%" height="15" fill="rgb(252,33,42)" fg:x="46" fg:w="2"/><text x="60.7763%" y="431.50">my..</text></g><g><title>my-solutions.exe`tokio::runtime::coop::with_budget(tokio::runtime::coop::Budget, tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure$0::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$ (2 samples, 2.63%)</title><rect x="60.5263%" y="405" width="2.6316%" height="15" fill="rgb(209,212,41)" fg:x="46" fg:w="2"/><text x="60.7763%" y="415.50">my..</text></g><g><title>my-solutions.exe`tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure$0::closure$0(tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure$0::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$ (2 samples, 2.63%)</title><rect x="60.5263%" y="389" width="2.6316%" height="15" fill="rgb(207,154,6)" fg:x="46" fg:w="2"/><text x="60.7763%" y="399.50">my..</text></g><g><title>my-solutions.exe`core::future::future::impl$1::poll(core::pin::Pin&lt;ref_mut$&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$ (2 samples, 2.63%)</title><rect x="60.5263%" y="373" width="2.6316%" height="15" fill="rgb(223,64,47)" fg:x="46" fg:w="2"/><text x="60.7763%" y="383.50">my..</text></g><g><title>my-solutions.exe`reqwest::blocking::client::impl$8::new::closure$0::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (2 samples, 2.63%)</title><rect x="60.5263%" y="357" width="2.6316%" height="15" fill="rgb(211,161,38)" fg:x="46" fg:w="2"/><text x="60.7763%" y="367.50">my..</text></g><g><title>my-solutions.exe`reqwest::async_impl::client::ClientBuilder::build (2 samples, 2.63%)</title><rect x="60.5263%" y="341" width="2.6316%" height="15" fill="rgb(219,138,40)" fg:x="46" fg:w="2"/><text x="60.7763%" y="351.50">my..</text></g><g><title>my-solutions.exe`reqwest::proxy::Proxy::system (2 samples, 2.63%)</title><rect x="60.5263%" y="325" width="2.6316%" height="15" fill="rgb(241,228,46)" fg:x="46" fg:w="2"/><text x="60.7763%" y="335.50">my..</text></g><g><title>my-solutions.exe`reqwest::proxy::NoProxy::from_env (1 samples, 1.32%)</title><rect x="61.8421%" y="309" width="1.3158%" height="15" fill="rgb(223,209,38)" fg:x="47" fg:w="1"/><text x="62.0921%" y="319.50"></text></g><g><title>my-solutions.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,enum2$&lt;std::env::VarError&gt; &gt; &gt;::or_else(enum2$&lt;core::result::Result&lt;alloc::string::String,enum2$ (1 samples, 1.32%)</title><rect x="61.8421%" y="293" width="1.3158%" height="15" fill="rgb(236,164,45)" fg:x="47" fg:w="1"/><text x="62.0921%" y="303.50"></text></g><g><title>my-solutions.exe`reqwest::proxy::impl$5::from_env::closure$0(reqwest::proxy::impl$5::from_env::closure_env$0, enum2$ (1 samples, 1.32%)</title><rect x="61.8421%" y="277" width="1.3158%" height="15" fill="rgb(231,15,5)" fg:x="47" fg:w="1"/><text x="62.0921%" y="287.50"></text></g><g><title>my-solutions.exe`core::ptr::drop_in_place(enum2$ (1 samples, 1.32%)</title><rect x="61.8421%" y="261" width="1.3158%" height="15" fill="rgb(252,35,15)" fg:x="47" fg:w="1"/><text x="62.0921%" y="271.50"></text></g><g><title>my-solutions.exe`std::env::_var (1 samples, 1.32%)</title><rect x="61.8421%" y="245" width="1.3158%" height="15" fill="rgb(248,181,18)" fg:x="47" fg:w="1"/><text x="62.0921%" y="255.50"></text></g><g><title>my-solutions.exe`std::env::_var_os (1 samples, 1.32%)</title><rect x="61.8421%" y="229" width="1.3158%" height="15" fill="rgb(233,39,42)" fg:x="47" fg:w="1"/><text x="62.0921%" y="239.50"></text></g><g><title>my-solutions.exe`std::sys::windows::os::getenv (1 samples, 1.32%)</title><rect x="61.8421%" y="213" width="1.3158%" height="15" fill="rgb(238,110,33)" fg:x="47" fg:w="1"/><text x="62.0921%" y="223.50"></text></g><g><title>my-solutions.exe`core::result::Result::ok (1 samples, 1.32%)</title><rect x="61.8421%" y="197" width="1.3158%" height="15" fill="rgb(233,195,10)" fg:x="47" fg:w="1"/><text x="62.0921%" y="207.50"></text></g><g><title>my-solutions.exe`std::sys::windows::to_u16s::inner (1 samples, 1.32%)</title><rect x="61.8421%" y="181" width="1.3158%" height="15" fill="rgb(254,105,3)" fg:x="47" fg:w="1"/><text x="62.0921%" y="191.50"></text></g><g><title>my-solutions.exe`alloc::vec::Vec::with_capacity (1 samples, 1.32%)</title><rect x="61.8421%" y="165" width="1.3158%" height="15" fill="rgb(221,225,9)" fg:x="47" fg:w="1"/><text x="62.0921%" y="175.50"></text></g><g><title>my-solutions.exe`alloc::vec::Vec::with_capacity_in (1 samples, 1.32%)</title><rect x="61.8421%" y="149" width="1.3158%" height="15" fill="rgb(224,227,45)" fg:x="47" fg:w="1"/><text x="62.0921%" y="159.50"></text></g><g><title>my-solutions.exe`alloc::raw_vec::RawVec::with_capacity_in (1 samples, 1.32%)</title><rect x="61.8421%" y="133" width="1.3158%" height="15" fill="rgb(229,198,43)" fg:x="47" fg:w="1"/><text x="62.0921%" y="143.50"></text></g><g><title>my-solutions.exe`alloc::raw_vec::RawVec::allocate_in (1 samples, 1.32%)</title><rect x="61.8421%" y="117" width="1.3158%" height="15" fill="rgb(206,209,35)" fg:x="47" fg:w="1"/><text x="62.0921%" y="127.50"></text></g><g><title>`0x7FFB8095B3C7 (1 samples, 1.32%)</title><rect x="61.8421%" y="101" width="1.3158%" height="15" fill="rgb(245,195,53)" fg:x="47" fg:w="1"/><text x="62.0921%" y="111.50"></text></g><g><title>`0x7FFB8095BEDA (1 samples, 1.32%)</title><rect x="61.8421%" y="85" width="1.3158%" height="15" fill="rgb(240,92,26)" fg:x="47" fg:w="1"/><text x="62.0921%" y="95.50"></text></g><g><title>`0x7FFB80950AC4 (1 samples, 1.32%)</title><rect x="61.8421%" y="69" width="1.3158%" height="15" fill="rgb(207,40,23)" fg:x="47" fg:w="1"/><text x="62.0921%" y="79.50"></text></g><g><title>`0x7FFB809A4BE0 (1 samples, 1.32%)</title><rect x="63.1579%" y="965" width="1.3158%" height="15" fill="rgb(223,111,35)" fg:x="48" fg:w="1"/><text x="63.4079%" y="975.50"></text></g><g><title>`0x7FFB80A02112 (1 samples, 1.32%)</title><rect x="64.4737%" y="917" width="1.3158%" height="15" fill="rgb(229,147,28)" fg:x="49" fg:w="1"/><text x="64.7237%" y="927.50"></text></g><g><title>`0x7FFB80A00ECB (1 samples, 1.32%)</title><rect x="64.4737%" y="901" width="1.3158%" height="15" fill="rgb(211,29,28)" fg:x="49" fg:w="1"/><text x="64.7237%" y="911.50"></text></g><g><title>`0x7FFB809D22C7 (1 samples, 1.32%)</title><rect x="64.4737%" y="885" width="1.3158%" height="15" fill="rgb(228,72,33)" fg:x="49" fg:w="1"/><text x="64.7237%" y="895.50"></text></g><g><title>`0x7FFB80A0264C (1 samples, 1.32%)</title><rect x="65.7895%" y="917" width="1.3158%" height="15" fill="rgb(205,214,31)" fg:x="50" fg:w="1"/><text x="66.0395%" y="927.50"></text></g><g><title>`0x7FFB80A3B2F4 (1 samples, 1.32%)</title><rect x="65.7895%" y="901" width="1.3158%" height="15" fill="rgb(224,111,15)" fg:x="50" fg:w="1"/><text x="66.0395%" y="911.50"></text></g><g><title>`0x7FFB80A3DE77 (1 samples, 1.32%)</title><rect x="65.7895%" y="885" width="1.3158%" height="15" fill="rgb(253,21,26)" fg:x="50" fg:w="1"/><text x="66.0395%" y="895.50"></text></g><g><title>`0x7FFB80A3F5DF (1 samples, 1.32%)</title><rect x="65.7895%" y="869" width="1.3158%" height="15" fill="rgb(245,139,43)" fg:x="50" fg:w="1"/><text x="66.0395%" y="879.50"></text></g><g><title>`0x7FFB80936861 (1 samples, 1.32%)</title><rect x="65.7895%" y="853" width="1.3158%" height="15" fill="rgb(252,170,7)" fg:x="50" fg:w="1"/><text x="66.0395%" y="863.50"></text></g><g><title>`0x7FFB809CDE94 (1 samples, 1.32%)</title><rect x="65.7895%" y="837" width="1.3158%" height="15" fill="rgb(231,118,14)" fg:x="50" fg:w="1"/><text x="66.0395%" y="847.50"></text></g><g><title>`0x7FFB80A0285C (1 samples, 1.32%)</title><rect x="67.1053%" y="917" width="1.3158%" height="15" fill="rgb(238,83,0)" fg:x="51" fg:w="1"/><text x="67.3553%" y="927.50"></text></g><g><title>`0x7FFB8097DD35 (1 samples, 1.32%)</title><rect x="67.1053%" y="901" width="1.3158%" height="15" fill="rgb(221,39,39)" fg:x="51" fg:w="1"/><text x="67.3553%" y="911.50"></text></g><g><title>`0x7FFB8097DDE7 (1 samples, 1.32%)</title><rect x="67.1053%" y="885" width="1.3158%" height="15" fill="rgb(222,119,46)" fg:x="51" fg:w="1"/><text x="67.3553%" y="895.50"></text></g><g><title>`0x7FFB8097DEF1 (1 samples, 1.32%)</title><rect x="67.1053%" y="869" width="1.3158%" height="15" fill="rgb(222,165,49)" fg:x="51" fg:w="1"/><text x="67.3553%" y="879.50"></text></g><g><title>`0x7FFB8097E24F (1 samples, 1.32%)</title><rect x="67.1053%" y="853" width="1.3158%" height="15" fill="rgb(219,113,52)" fg:x="51" fg:w="1"/><text x="67.3553%" y="863.50"></text></g><g><title>`0x7FFB80A0367C (1 samples, 1.32%)</title><rect x="68.4211%" y="917" width="1.3158%" height="15" fill="rgb(214,7,15)" fg:x="52" fg:w="1"/><text x="68.6711%" y="927.50"></text></g><g><title>`0x7FFB809774AE (1 samples, 1.32%)</title><rect x="68.4211%" y="901" width="1.3158%" height="15" fill="rgb(235,32,4)" fg:x="52" fg:w="1"/><text x="68.6711%" y="911.50"></text></g><g><title>`0x7FFB809782A8 (1 samples, 1.32%)</title><rect x="68.4211%" y="885" width="1.3158%" height="15" fill="rgb(238,90,54)" fg:x="52" fg:w="1"/><text x="68.6711%" y="895.50"></text></g><g><title>`0x7FFB809D3ED2 (1 samples, 1.32%)</title><rect x="68.4211%" y="869" width="1.3158%" height="15" fill="rgb(213,208,19)" fg:x="52" fg:w="1"/><text x="68.6711%" y="879.50"></text></g><g><title>`0x7FFB809479D2 (1 samples, 1.32%)</title><rect x="69.7368%" y="805" width="1.3158%" height="15" fill="rgb(233,156,4)" fg:x="53" fg:w="1"/><text x="69.9868%" y="815.50"></text></g><g><title>`0x7FFB80945096 (1 samples, 1.32%)</title><rect x="69.7368%" y="789" width="1.3158%" height="15" fill="rgb(207,194,5)" fg:x="53" fg:w="1"/><text x="69.9868%" y="799.50"></text></g><g><title>`0x7FFB80947B29 (1 samples, 1.32%)</title><rect x="71.0526%" y="805" width="1.3158%" height="15" fill="rgb(206,111,30)" fg:x="54" fg:w="1"/><text x="71.3026%" y="815.50"></text></g><g><title>`0x7FFB809488A8 (1 samples, 1.32%)</title><rect x="71.0526%" y="789" width="1.3158%" height="15" fill="rgb(243,70,54)" fg:x="54" fg:w="1"/><text x="71.3026%" y="799.50"></text></g><g><title>`0x7FFB80944479 (1 samples, 1.32%)</title><rect x="71.0526%" y="773" width="1.3158%" height="15" fill="rgb(242,28,8)" fg:x="54" fg:w="1"/><text x="71.3026%" y="783.50"></text></g><g><title>`0x7FFB80944C14 (1 samples, 1.32%)</title><rect x="71.0526%" y="757" width="1.3158%" height="15" fill="rgb(219,106,18)" fg:x="54" fg:w="1"/><text x="71.3026%" y="767.50"></text></g><g><title>`0x7FFB809479D2 (1 samples, 1.32%)</title><rect x="71.0526%" y="741" width="1.3158%" height="15" fill="rgb(244,222,10)" fg:x="54" fg:w="1"/><text x="71.3026%" y="751.50"></text></g><g><title>`0x7FFB80945096 (1 samples, 1.32%)</title><rect x="71.0526%" y="725" width="1.3158%" height="15" fill="rgb(236,179,52)" fg:x="54" fg:w="1"/><text x="71.3026%" y="735.50"></text></g><g><title>`0x7FFB8094FB31 (4 samples, 5.26%)</title><rect x="69.7368%" y="869" width="5.2632%" height="15" fill="rgb(213,23,39)" fg:x="53" fg:w="4"/><text x="69.9868%" y="879.50">`0x7FF..</text></g><g><title>`0x7FFB8099B2BD (4 samples, 5.26%)</title><rect x="69.7368%" y="853" width="5.2632%" height="15" fill="rgb(238,48,10)" fg:x="53" fg:w="4"/><text x="69.9868%" y="863.50">`0x7FF..</text></g><g><title>`0x7FFB80944479 (4 samples, 5.26%)</title><rect x="69.7368%" y="837" width="5.2632%" height="15" fill="rgb(251,196,23)" fg:x="53" fg:w="4"/><text x="69.9868%" y="847.50">`0x7FF..</text></g><g><title>`0x7FFB80944C14 (4 samples, 5.26%)</title><rect x="69.7368%" y="821" width="5.2632%" height="15" fill="rgb(250,152,24)" fg:x="53" fg:w="4"/><text x="69.9868%" y="831.50">`0x7FF..</text></g><g><title>`0x7FFB80947BC4 (2 samples, 2.63%)</title><rect x="72.3684%" y="805" width="2.6316%" height="15" fill="rgb(209,150,17)" fg:x="55" fg:w="2"/><text x="72.6184%" y="815.50">`0..</text></g><g><title>`0x7FFB809626CC (2 samples, 2.63%)</title><rect x="72.3684%" y="789" width="2.6316%" height="15" fill="rgb(234,202,34)" fg:x="55" fg:w="2"/><text x="72.6184%" y="799.50">`0..</text></g><g><title>`0x7FFB7E266B37 (1 samples, 1.32%)</title><rect x="75.0000%" y="757" width="1.3158%" height="15" fill="rgb(253,148,53)" fg:x="57" fg:w="1"/><text x="75.2500%" y="767.50"></text></g><g><title>`0x7FFB7E26679E (1 samples, 1.32%)</title><rect x="75.0000%" y="741" width="1.3158%" height="15" fill="rgb(218,129,16)" fg:x="57" fg:w="1"/><text x="75.2500%" y="751.50"></text></g><g><title>`0x7FFB80938EF2 (1 samples, 1.32%)</title><rect x="75.0000%" y="725" width="1.3158%" height="15" fill="rgb(216,85,19)" fg:x="57" fg:w="1"/><text x="75.2500%" y="735.50"></text></g><g><title>`0x7FFB80939235 (1 samples, 1.32%)</title><rect x="75.0000%" y="709" width="1.3158%" height="15" fill="rgb(235,228,7)" fg:x="57" fg:w="1"/><text x="75.2500%" y="719.50"></text></g><g><title>`0x7FFB809CE3D4 (1 samples, 1.32%)</title><rect x="75.0000%" y="693" width="1.3158%" height="15" fill="rgb(245,175,0)" fg:x="57" fg:w="1"/><text x="75.2500%" y="703.50"></text></g><g><title>`0x7FFB7E266D92 (1 samples, 1.32%)</title><rect x="76.3158%" y="757" width="1.3158%" height="15" fill="rgb(208,168,36)" fg:x="58" fg:w="1"/><text x="76.5658%" y="767.50"></text></g><g><title>`0x7FFB7E267A2B (1 samples, 1.32%)</title><rect x="76.3158%" y="741" width="1.3158%" height="15" fill="rgb(246,171,24)" fg:x="58" fg:w="1"/><text x="76.5658%" y="751.50"></text></g><g><title>`0x7FFB7E265C67 (1 samples, 1.32%)</title><rect x="76.3158%" y="725" width="1.3158%" height="15" fill="rgb(215,142,24)" fg:x="58" fg:w="1"/><text x="76.5658%" y="735.50"></text></g><g><title>`0x7FFB809CDA84 (1 samples, 1.32%)</title><rect x="76.3158%" y="709" width="1.3158%" height="15" fill="rgb(250,187,7)" fg:x="58" fg:w="1"/><text x="76.5658%" y="719.50"></text></g><g><title>`0x7FFB7E2667BD (3 samples, 3.95%)</title><rect x="75.0000%" y="773" width="3.9474%" height="15" fill="rgb(228,66,33)" fg:x="57" fg:w="3"/><text x="75.2500%" y="783.50">`0x7..</text></g><g><title>`0x7FFB7E266DA1 (1 samples, 1.32%)</title><rect x="77.6316%" y="757" width="1.3158%" height="15" fill="rgb(234,215,21)" fg:x="59" fg:w="1"/><text x="77.8816%" y="767.50"></text></g><g><title>`0x7FFB7E2CA2A0 (1 samples, 1.32%)</title><rect x="77.6316%" y="741" width="1.3158%" height="15" fill="rgb(222,191,20)" fg:x="59" fg:w="1"/><text x="77.8816%" y="751.50"></text></g><g><title>`0x7FFB80A0375E (8 samples, 10.53%)</title><rect x="69.7368%" y="917" width="10.5263%" height="15" fill="rgb(245,79,54)" fg:x="53" fg:w="8"/><text x="69.9868%" y="927.50">`0x7FFB80A0375E</text></g><g><title>`0x7FFB80946AF4 (8 samples, 10.53%)</title><rect x="69.7368%" y="901" width="10.5263%" height="15" fill="rgb(240,10,37)" fg:x="53" fg:w="8"/><text x="69.9868%" y="911.50">`0x7FFB80946AF4</text></g><g><title>`0x7FFB809473E4 (8 samples, 10.53%)</title><rect x="69.7368%" y="885" width="10.5263%" height="15" fill="rgb(214,192,32)" fg:x="53" fg:w="8"/><text x="69.9868%" y="895.50">`0x7FFB809473E4</text></g><g><title>`0x7FFB8094FBAE (4 samples, 5.26%)</title><rect x="75.0000%" y="869" width="5.2632%" height="15" fill="rgb(209,36,54)" fg:x="57" fg:w="4"/><text x="75.2500%" y="879.50">`0x7FF..</text></g><g><title>`0x7FFB8096D947 (4 samples, 5.26%)</title><rect x="75.0000%" y="853" width="5.2632%" height="15" fill="rgb(220,10,11)" fg:x="57" fg:w="4"/><text x="75.2500%" y="863.50">`0x7FF..</text></g><g><title>`0x7FFB8099C0E0 (4 samples, 5.26%)</title><rect x="75.0000%" y="837" width="5.2632%" height="15" fill="rgb(221,106,17)" fg:x="57" fg:w="4"/><text x="75.2500%" y="847.50">`0x7FF..</text></g><g><title>`0x7FFB8099C05A (4 samples, 5.26%)</title><rect x="75.0000%" y="821" width="5.2632%" height="15" fill="rgb(251,142,44)" fg:x="57" fg:w="4"/><text x="75.2500%" y="831.50">`0x7FF..</text></g><g><title>`0x7FFB8099C2C7 (4 samples, 5.26%)</title><rect x="75.0000%" y="805" width="5.2632%" height="15" fill="rgb(238,13,15)" fg:x="57" fg:w="4"/><text x="75.2500%" y="815.50">`0x7FF..</text></g><g><title>`0x7FFB80949A1D (4 samples, 5.26%)</title><rect x="75.0000%" y="789" width="5.2632%" height="15" fill="rgb(208,107,27)" fg:x="57" fg:w="4"/><text x="75.2500%" y="799.50">`0x7FF..</text></g><g><title>`0x7FFB7E2667EE (1 samples, 1.32%)</title><rect x="78.9474%" y="773" width="1.3158%" height="15" fill="rgb(205,136,37)" fg:x="60" fg:w="1"/><text x="79.1974%" y="783.50"></text></g><g><title>`0x7FFB7E2ED70B (1 samples, 1.32%)</title><rect x="78.9474%" y="757" width="1.3158%" height="15" fill="rgb(250,205,27)" fg:x="60" fg:w="1"/><text x="79.1974%" y="767.50"></text></g><g><title>`0x7FFB7E302F93 (1 samples, 1.32%)</title><rect x="78.9474%" y="741" width="1.3158%" height="15" fill="rgb(210,80,43)" fg:x="60" fg:w="1"/><text x="79.1974%" y="751.50"></text></g><g><title>`0x7FFB7E2EE9EC (1 samples, 1.32%)</title><rect x="78.9474%" y="725" width="1.3158%" height="15" fill="rgb(247,160,36)" fg:x="60" fg:w="1"/><text x="79.1974%" y="735.50"></text></g><g><title>`0x7FFB7E2FA89E (1 samples, 1.32%)</title><rect x="78.9474%" y="709" width="1.3158%" height="15" fill="rgb(234,13,49)" fg:x="60" fg:w="1"/><text x="79.1974%" y="719.50"></text></g><g><title>`0x7FFB7E2FAAC4 (1 samples, 1.32%)</title><rect x="78.9474%" y="693" width="1.3158%" height="15" fill="rgb(234,122,0)" fg:x="60" fg:w="1"/><text x="79.1974%" y="703.50"></text></g><g><title>`0x7FFB7E2BF367 (1 samples, 1.32%)</title><rect x="78.9474%" y="677" width="1.3158%" height="15" fill="rgb(207,146,38)" fg:x="60" fg:w="1"/><text x="79.1974%" y="687.50"></text></g><g><title>`0x7FFB80987EF6 (1 samples, 1.32%)</title><rect x="78.9474%" y="661" width="1.3158%" height="15" fill="rgb(207,177,25)" fg:x="60" fg:w="1"/><text x="79.1974%" y="671.50"></text></g><g><title>`0x7FFB809CD224 (1 samples, 1.32%)</title><rect x="78.9474%" y="645" width="1.3158%" height="15" fill="rgb(211,178,42)" fg:x="60" fg:w="1"/><text x="79.1974%" y="655.50"></text></g><g><title>`0x7FFB80A0382D (1 samples, 1.32%)</title><rect x="80.2632%" y="917" width="1.3158%" height="15" fill="rgb(230,69,54)" fg:x="61" fg:w="1"/><text x="80.5132%" y="927.50"></text></g><g><title>`0x7FFB809470A6 (1 samples, 1.32%)</title><rect x="80.2632%" y="901" width="1.3158%" height="15" fill="rgb(214,135,41)" fg:x="61" fg:w="1"/><text x="80.5132%" y="911.50"></text></g><g><title>`0x7FFB809401FD (1 samples, 1.32%)</title><rect x="80.2632%" y="885" width="1.3158%" height="15" fill="rgb(237,67,25)" fg:x="61" fg:w="1"/><text x="80.5132%" y="895.50"></text></g><g><title>`0x7FFB80940446 (1 samples, 1.32%)</title><rect x="80.2632%" y="869" width="1.3158%" height="15" fill="rgb(222,189,50)" fg:x="61" fg:w="1"/><text x="80.5132%" y="879.50"></text></g><g><title>`0x7FFB80961CD7 (1 samples, 1.32%)</title><rect x="80.2632%" y="853" width="1.3158%" height="15" fill="rgb(245,148,34)" fg:x="61" fg:w="1"/><text x="80.5132%" y="863.50"></text></g><g><title>`0x7FFB80A03AA8 (1 samples, 1.32%)</title><rect x="81.5789%" y="917" width="1.3158%" height="15" fill="rgb(222,29,6)" fg:x="62" fg:w="1"/><text x="81.8289%" y="927.50"></text></g><g><title>`0x7FFB8099163B (1 samples, 1.32%)</title><rect x="81.5789%" y="901" width="1.3158%" height="15" fill="rgb(221,189,43)" fg:x="62" fg:w="1"/><text x="81.8289%" y="911.50"></text></g><g><title>`0x7FFB80991AF4 (1 samples, 1.32%)</title><rect x="81.5789%" y="885" width="1.3158%" height="15" fill="rgb(207,36,27)" fg:x="62" fg:w="1"/><text x="81.8289%" y="895.50"></text></g><g><title>`0x7FFB809CE974 (1 samples, 1.32%)</title><rect x="81.5789%" y="869" width="1.3158%" height="15" fill="rgb(217,90,24)" fg:x="62" fg:w="1"/><text x="81.8289%" y="879.50"></text></g><g><title>`0x7FFB80944AAA (2 samples, 2.63%)</title><rect x="82.8947%" y="853" width="2.6316%" height="15" fill="rgb(224,66,35)" fg:x="63" fg:w="2"/><text x="83.1447%" y="863.50">`0..</text></g><g><title>`0x7FFB80944D42 (2 samples, 2.63%)</title><rect x="82.8947%" y="837" width="2.6316%" height="15" fill="rgb(221,13,50)" fg:x="63" fg:w="2"/><text x="83.1447%" y="847.50">`0..</text></g><g><title>`0x7FFB809CD4E4 (2 samples, 2.63%)</title><rect x="82.8947%" y="821" width="2.6316%" height="15" fill="rgb(236,68,49)" fg:x="63" fg:w="2"/><text x="83.1447%" y="831.50">`0..</text></g><g><title>`0x7FFB80947EC7 (1 samples, 1.32%)</title><rect x="85.5263%" y="821" width="1.3158%" height="15" fill="rgb(229,146,28)" fg:x="65" fg:w="1"/><text x="85.7763%" y="831.50"></text></g><g><title>`0x7FFB8094A7DD (1 samples, 1.32%)</title><rect x="85.5263%" y="805" width="1.3158%" height="15" fill="rgb(225,31,38)" fg:x="65" fg:w="1"/><text x="85.7763%" y="815.50"></text></g><g><title>`0x7FFB8094D785 (1 samples, 1.32%)</title><rect x="85.5263%" y="789" width="1.3158%" height="15" fill="rgb(250,208,3)" fg:x="65" fg:w="1"/><text x="85.7763%" y="799.50"></text></g><g><title>`0x7FFB80944AAA (2 samples, 2.63%)</title><rect x="86.8421%" y="789" width="2.6316%" height="15" fill="rgb(246,54,23)" fg:x="66" fg:w="2"/><text x="87.0921%" y="799.50">`0..</text></g><g><title>`0x7FFB80944D42 (2 samples, 2.63%)</title><rect x="86.8421%" y="773" width="2.6316%" height="15" fill="rgb(243,76,11)" fg:x="66" fg:w="2"/><text x="87.0921%" y="783.50">`0..</text></g><g><title>`0x7FFB809CD4E4 (2 samples, 2.63%)</title><rect x="86.8421%" y="757" width="2.6316%" height="15" fill="rgb(245,21,50)" fg:x="66" fg:w="2"/><text x="87.0921%" y="767.50">`0..</text></g><g><title>`0x7FFB80944BCF (1 samples, 1.32%)</title><rect x="89.4737%" y="789" width="1.3158%" height="15" fill="rgb(228,9,43)" fg:x="68" fg:w="1"/><text x="89.7237%" y="799.50"></text></g><g><title>`0x7FFB8093FB05 (1 samples, 1.32%)</title><rect x="89.4737%" y="773" width="1.3158%" height="15" fill="rgb(208,100,47)" fg:x="68" fg:w="1"/><text x="89.7237%" y="783.50"></text></g><g><title>`0x7FFB80940921 (1 samples, 1.32%)</title><rect x="89.4737%" y="757" width="1.3158%" height="15" fill="rgb(232,26,8)" fg:x="68" fg:w="1"/><text x="89.7237%" y="767.50"></text></g><g><title>`0x7FFB80942252 (1 samples, 1.32%)</title><rect x="89.4737%" y="741" width="1.3158%" height="15" fill="rgb(216,166,38)" fg:x="68" fg:w="1"/><text x="89.7237%" y="751.50"></text></g><g><title>`0x7FFB8094354A (1 samples, 1.32%)</title><rect x="89.4737%" y="725" width="1.3158%" height="15" fill="rgb(251,202,51)" fg:x="68" fg:w="1"/><text x="89.7237%" y="735.50"></text></g><g><title>`0x7FFB809CD9E4 (1 samples, 1.32%)</title><rect x="89.4737%" y="709" width="1.3158%" height="15" fill="rgb(254,216,34)" fg:x="68" fg:w="1"/><text x="89.7237%" y="719.50"></text></g><g><title>`0x7FFB80A03AFD (7 samples, 9.21%)</title><rect x="82.8947%" y="917" width="9.2105%" height="15" fill="rgb(251,32,27)" fg:x="63" fg:w="7"/><text x="83.1447%" y="927.50">`0x7FFB80A03A..</text></g><g><title>`0x7FFB80947B29 (7 samples, 9.21%)</title><rect x="82.8947%" y="901" width="9.2105%" height="15" fill="rgb(208,127,28)" fg:x="63" fg:w="7"/><text x="83.1447%" y="911.50">`0x7FFB80947B..</text></g><g><title>`0x7FFB809488A8 (7 samples, 9.21%)</title><rect x="82.8947%" y="885" width="9.2105%" height="15" fill="rgb(224,137,22)" fg:x="63" fg:w="7"/><text x="83.1447%" y="895.50">`0x7FFB809488..</text></g><g><title>`0x7FFB80944479 (7 samples, 9.21%)</title><rect x="82.8947%" y="869" width="9.2105%" height="15" fill="rgb(254,70,32)" fg:x="63" fg:w="7"/><text x="83.1447%" y="879.50">`0x7FFB809444..</text></g><g><title>`0x7FFB80944C14 (5 samples, 6.58%)</title><rect x="85.5263%" y="853" width="6.5789%" height="15" fill="rgb(229,75,37)" fg:x="65" fg:w="5"/><text x="85.7763%" y="863.50">`0x7FFB80..</text></g><g><title>`0x7FFB80947B29 (5 samples, 6.58%)</title><rect x="85.5263%" y="837" width="6.5789%" height="15" fill="rgb(252,64,23)" fg:x="65" fg:w="5"/><text x="85.7763%" y="847.50">`0x7FFB80..</text></g><g><title>`0x7FFB809488A8 (4 samples, 5.26%)</title><rect x="86.8421%" y="821" width="5.2632%" height="15" fill="rgb(232,162,48)" fg:x="66" fg:w="4"/><text x="87.0921%" y="831.50">`0x7FF..</text></g><g><title>`0x7FFB80944479 (4 samples, 5.26%)</title><rect x="86.8421%" y="805" width="5.2632%" height="15" fill="rgb(246,160,12)" fg:x="66" fg:w="4"/><text x="87.0921%" y="815.50">`0x7FF..</text></g><g><title>`0x7FFB80944C14 (1 samples, 1.32%)</title><rect x="90.7895%" y="789" width="1.3158%" height="15" fill="rgb(247,166,0)" fg:x="69" fg:w="1"/><text x="91.0395%" y="799.50"></text></g><g><title>`0x7FFB80947B29 (1 samples, 1.32%)</title><rect x="90.7895%" y="773" width="1.3158%" height="15" fill="rgb(249,219,21)" fg:x="69" fg:w="1"/><text x="91.0395%" y="783.50"></text></g><g><title>`0x7FFB809488A8 (1 samples, 1.32%)</title><rect x="90.7895%" y="757" width="1.3158%" height="15" fill="rgb(205,209,3)" fg:x="69" fg:w="1"/><text x="91.0395%" y="767.50"></text></g><g><title>`0x7FFB80944479 (1 samples, 1.32%)</title><rect x="90.7895%" y="741" width="1.3158%" height="15" fill="rgb(243,44,1)" fg:x="69" fg:w="1"/><text x="91.0395%" y="751.50"></text></g><g><title>`0x7FFB80944C14 (1 samples, 1.32%)</title><rect x="90.7895%" y="725" width="1.3158%" height="15" fill="rgb(206,159,16)" fg:x="69" fg:w="1"/><text x="91.0395%" y="735.50"></text></g><g><title>`0x7FFB80947A0B (1 samples, 1.32%)</title><rect x="90.7895%" y="709" width="1.3158%" height="15" fill="rgb(244,77,30)" fg:x="69" fg:w="1"/><text x="91.0395%" y="719.50"></text></g><g><title>`0x7FFB80A03B07 (1 samples, 1.32%)</title><rect x="92.1053%" y="917" width="1.3158%" height="15" fill="rgb(218,69,12)" fg:x="70" fg:w="1"/><text x="92.3553%" y="927.50"></text></g><g><title>`0x7FFB8098EB58 (1 samples, 1.32%)</title><rect x="92.1053%" y="901" width="1.3158%" height="15" fill="rgb(212,87,7)" fg:x="70" fg:w="1"/><text x="92.3553%" y="911.50"></text></g><g><title>`0x7FFB8098EC70 (1 samples, 1.32%)</title><rect x="92.1053%" y="885" width="1.3158%" height="15" fill="rgb(245,114,25)" fg:x="70" fg:w="1"/><text x="92.3553%" y="895.50"></text></g><g><title>`0x7FFB8098F7B0 (1 samples, 1.32%)</title><rect x="92.1053%" y="869" width="1.3158%" height="15" fill="rgb(210,61,42)" fg:x="70" fg:w="1"/><text x="92.3553%" y="879.50"></text></g><g><title>`0x7FFB8098FC9C (1 samples, 1.32%)</title><rect x="92.1053%" y="853" width="1.3158%" height="15" fill="rgb(211,52,33)" fg:x="70" fg:w="1"/><text x="92.3553%" y="863.50"></text></g><g><title>`0x7FFB809CD644 (1 samples, 1.32%)</title><rect x="92.1053%" y="837" width="1.3158%" height="15" fill="rgb(234,58,33)" fg:x="70" fg:w="1"/><text x="92.3553%" y="847.50"></text></g><g><title>`0x7FFB8099C05A (1 samples, 1.32%)</title><rect x="93.4211%" y="885" width="1.3158%" height="15" fill="rgb(220,115,36)" fg:x="71" fg:w="1"/><text x="93.6711%" y="895.50"></text></g><g><title>`0x7FFB8099C2C7 (1 samples, 1.32%)</title><rect x="93.4211%" y="869" width="1.3158%" height="15" fill="rgb(243,153,54)" fg:x="71" fg:w="1"/><text x="93.6711%" y="879.50"></text></g><g><title>`0x7FFB80949A1D (1 samples, 1.32%)</title><rect x="93.4211%" y="853" width="1.3158%" height="15" fill="rgb(251,47,18)" fg:x="71" fg:w="1"/><text x="93.6711%" y="863.50"></text></g><g><title>`0x7FFB7E13912C (1 samples, 1.32%)</title><rect x="93.4211%" y="837" width="1.3158%" height="15" fill="rgb(242,102,42)" fg:x="71" fg:w="1"/><text x="93.6711%" y="847.50"></text></g><g><title>`0x7FFB7E138CE4 (1 samples, 1.32%)</title><rect x="93.4211%" y="821" width="1.3158%" height="15" fill="rgb(234,31,38)" fg:x="71" fg:w="1"/><text x="93.6711%" y="831.50"></text></g><g><title>`0x7FFB7E616216 (1 samples, 1.32%)</title><rect x="94.7368%" y="821" width="1.3158%" height="15" fill="rgb(221,117,51)" fg:x="72" fg:w="1"/><text x="94.9868%" y="831.50"></text></g><g><title>`0x7FFB7E617730 (1 samples, 1.32%)</title><rect x="94.7368%" y="805" width="1.3158%" height="15" fill="rgb(212,20,18)" fg:x="72" fg:w="1"/><text x="94.9868%" y="815.50"></text></g><g><title>`0x7FFB7E617070 (1 samples, 1.32%)</title><rect x="94.7368%" y="789" width="1.3158%" height="15" fill="rgb(245,133,36)" fg:x="72" fg:w="1"/><text x="94.9868%" y="799.50"></text></g><g><title>`0x7FFB7E60DCF0 (1 samples, 1.32%)</title><rect x="94.7368%" y="773" width="1.3158%" height="15" fill="rgb(212,6,19)" fg:x="72" fg:w="1"/><text x="94.9868%" y="783.50"></text></g><g><title>`0x7FFB7FC278A7 (1 samples, 1.32%)</title><rect x="96.0526%" y="821" width="1.3158%" height="15" fill="rgb(218,1,36)" fg:x="73" fg:w="1"/><text x="96.3026%" y="831.50"></text></g><g><title>`0x7FFB7FC27B4A (1 samples, 1.32%)</title><rect x="96.0526%" y="805" width="1.3158%" height="15" fill="rgb(246,84,54)" fg:x="73" fg:w="1"/><text x="96.3026%" y="815.50"></text></g><g><title>`0x7FFB7E2BF54A (1 samples, 1.32%)</title><rect x="96.0526%" y="789" width="1.3158%" height="15" fill="rgb(242,110,6)" fg:x="73" fg:w="1"/><text x="96.3026%" y="799.50"></text></g><g><title>`0x7FFB8096E2A0 (1 samples, 1.32%)</title><rect x="96.0526%" y="773" width="1.3158%" height="15" fill="rgb(214,47,5)" fg:x="73" fg:w="1"/><text x="96.3026%" y="783.50"></text></g><g><title>`0x7FFB8099E957 (1 samples, 1.32%)</title><rect x="96.0526%" y="757" width="1.3158%" height="15" fill="rgb(218,159,25)" fg:x="73" fg:w="1"/><text x="96.3026%" y="767.50"></text></g><g><title>`0x7FFB7FC278EF (1 samples, 1.32%)</title><rect x="97.3684%" y="821" width="1.3158%" height="15" fill="rgb(215,211,28)" fg:x="74" fg:w="1"/><text x="97.6184%" y="831.50"></text></g><g><title>`0x7FFB7FC40AAE (1 samples, 1.32%)</title><rect x="97.3684%" y="805" width="1.3158%" height="15" fill="rgb(238,59,32)" fg:x="74" fg:w="1"/><text x="97.6184%" y="815.50"></text></g><g><title>`0x7FFB7FC40CA4 (1 samples, 1.32%)</title><rect x="97.3684%" y="789" width="1.3158%" height="15" fill="rgb(226,82,3)" fg:x="74" fg:w="1"/><text x="97.6184%" y="799.50"></text></g><g><title>`0x7FFB7FC40F85 (1 samples, 1.32%)</title><rect x="97.3684%" y="773" width="1.3158%" height="15" fill="rgb(240,164,32)" fg:x="74" fg:w="1"/><text x="97.6184%" y="783.50"></text></g><g><title>`0x7FFB7FC4098A (1 samples, 1.32%)</title><rect x="97.3684%" y="757" width="1.3158%" height="15" fill="rgb(232,46,7)" fg:x="74" fg:w="1"/><text x="97.6184%" y="767.50"></text></g><g><title>`0x7FFB7FC505F0 (1 samples, 1.32%)</title><rect x="97.3684%" y="741" width="1.3158%" height="15" fill="rgb(229,129,53)" fg:x="74" fg:w="1"/><text x="97.6184%" y="751.50"></text></g><g><title>`0x7FFB7FC50546 (1 samples, 1.32%)</title><rect x="97.3684%" y="725" width="1.3158%" height="15" fill="rgb(234,188,29)" fg:x="74" fg:w="1"/><text x="97.6184%" y="735.50"></text></g><g><title>`0x7FFB7E28F120 (1 samples, 1.32%)</title><rect x="97.3684%" y="709" width="1.3158%" height="15" fill="rgb(246,141,4)" fg:x="74" fg:w="1"/><text x="97.6184%" y="719.50"></text></g><g><title>all (76 samples, 100%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(229,23,39)" fg:x="0" fg:w="76"/><text x="0.2500%" y="991.50"></text></g><g><title>`0x7FFB809A4BEE (27 samples, 35.53%)</title><rect x="64.4737%" y="965" width="35.5263%" height="15" fill="rgb(206,12,3)" fg:x="49" fg:w="27"/><text x="64.7237%" y="975.50">`0x7FFB809A4BEE</text></g><g><title>`0x7FFB809A4C43 (27 samples, 35.53%)</title><rect x="64.4737%" y="949" width="35.5263%" height="15" fill="rgb(252,226,20)" fg:x="49" fg:w="27"/><text x="64.7237%" y="959.50">`0x7FFB809A4C43</text></g><g><title>`0x7FFB809A4DBB (27 samples, 35.53%)</title><rect x="64.4737%" y="933" width="35.5263%" height="15" fill="rgb(216,123,35)" fg:x="49" fg:w="27"/><text x="64.7237%" y="943.50">`0x7FFB809A4DBB</text></g><g><title>`0x7FFB80A03C42 (5 samples, 6.58%)</title><rect x="93.4211%" y="917" width="6.5789%" height="15" fill="rgb(212,68,40)" fg:x="71" fg:w="5"/><text x="93.6711%" y="927.50">`0x7FFB80..</text></g><g><title>`0x7FFB8099C0E0 (5 samples, 6.58%)</title><rect x="93.4211%" y="901" width="6.5789%" height="15" fill="rgb(254,125,32)" fg:x="71" fg:w="5"/><text x="93.6711%" y="911.50">`0x7FFB80..</text></g><g><title>`0x7FFB8099C0E0 (4 samples, 5.26%)</title><rect x="94.7368%" y="885" width="5.2632%" height="15" fill="rgb(253,97,22)" fg:x="72" fg:w="4"/><text x="94.9868%" y="895.50">`0x7FF..</text></g><g><title>`0x7FFB8099C05A (4 samples, 5.26%)</title><rect x="94.7368%" y="869" width="5.2632%" height="15" fill="rgb(241,101,14)" fg:x="72" fg:w="4"/><text x="94.9868%" y="879.50">`0x7FF..</text></g><g><title>`0x7FFB8099C2C7 (4 samples, 5.26%)</title><rect x="94.7368%" y="853" width="5.2632%" height="15" fill="rgb(238,103,29)" fg:x="72" fg:w="4"/><text x="94.9868%" y="863.50">`0x7FF..</text></g><g><title>`0x7FFB80949A1D (4 samples, 5.26%)</title><rect x="94.7368%" y="837" width="5.2632%" height="15" fill="rgb(233,195,47)" fg:x="72" fg:w="4"/><text x="94.9868%" y="847.50">`0x7FF..</text></g><g><title>`0x7FFB7FDFCF34 (1 samples, 1.32%)</title><rect x="98.6842%" y="821" width="1.3158%" height="15" fill="rgb(246,218,30)" fg:x="75" fg:w="1"/><text x="98.9342%" y="831.50"></text></g><g><title>`0x7FFB7FDFD8D5 (1 samples, 1.32%)</title><rect x="98.6842%" y="805" width="1.3158%" height="15" fill="rgb(219,145,47)" fg:x="75" fg:w="1"/><text x="98.9342%" y="815.50"></text></g><g><title>`0x7FFB7FDF5AF4 (1 samples, 1.32%)</title><rect x="98.6842%" y="789" width="1.3158%" height="15" fill="rgb(243,12,26)" fg:x="75" fg:w="1"/><text x="98.9342%" y="799.50"></text></g><g><title>`0x7FFB7FDED5B3 (1 samples, 1.32%)</title><rect x="98.6842%" y="773" width="1.3158%" height="15" fill="rgb(214,87,16)" fg:x="75" fg:w="1"/><text x="98.9342%" y="783.50"></text></g><g><title>`0x7FFB80972EA0 (1 samples, 1.32%)</title><rect x="98.6842%" y="757" width="1.3158%" height="15" fill="rgb(208,99,42)" fg:x="75" fg:w="1"/><text x="98.9342%" y="767.50"></text></g><g><title>`0x7FFB809730AB (1 samples, 1.32%)</title><rect x="98.6842%" y="741" width="1.3158%" height="15" fill="rgb(253,99,2)" fg:x="75" fg:w="1"/><text x="98.9342%" y="751.50"></text></g><g><title>`0x7FFB809731ED (1 samples, 1.32%)</title><rect x="98.6842%" y="725" width="1.3158%" height="15" fill="rgb(220,168,23)" fg:x="75" fg:w="1"/><text x="98.9342%" y="735.50"></text></g><g><title>`0x7FFB8095B44D (1 samples, 1.32%)</title><rect x="98.6842%" y="709" width="1.3158%" height="15" fill="rgb(242,38,24)" fg:x="75" fg:w="1"/><text x="98.9342%" y="719.50"></text></g><g><title>`0x7FFB8095DE8B (1 samples, 1.32%)</title><rect x="98.6842%" y="693" width="1.3158%" height="15" fill="rgb(225,182,9)" fg:x="75" fg:w="1"/><text x="98.9342%" y="703.50"></text></g></svg></svg>